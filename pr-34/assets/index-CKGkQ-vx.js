(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const r of n.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();var tt=(o=>(o.ADMIN="admin",o.USER="user",o.MODERATOR="moderator",o))(tt||{}),W=(o=>(o.DRAFT="draft",o.ACTIVE="active",o.COMPLETED="completed",o.PUBLISHED="published",o.ARCHIVED="archived",o))(W||{});let ae=class extends Map{computeIfAbsent(e,t){if(this.has(e))return this.get(e);const i=t(e);return this.set(e,i),i}computeIfPresent(e,t){const i=this.get(e);if(i===void 0)return;const s=t(e,i);return s!==void 0?this.set(e,s):this.delete(e),s}compute(e,t){const i=this.get(e),s=t(e,i);return s?this.set(e,s):this.delete(e),s}};var M;(function(o){o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Info=2]="Info",o[o.Warn=3]="Warn",o[o.Error=4]="Error"})(M||(M={}));function it(o){return ne.getLogger(o)}const $t={setInternalLogLevel:o=>ne.changeLogLevel(o),setOutput:o=>ne.changeOutput(o),reset:()=>ne.reset()};let Dt=class{constructor(e,t,i){this._name=e,this._level=t,this._fnOutput=i}trace(e){this.log(M.Trace,e)}debug(e){this.log(M.Debug,e)}error(e,t){this.log(M.Error,e,t)}info(e){this.log(M.Info,e)}warn(e,t){this.log(M.Warn,e,t)}setLevel(e){this._level=e}setOutput(e){this._fnOutput=e}log(e,t,i){this._level>e||this._fnOutput(`${M[this._level].toString()} <INTERNAL LOGGER> ${this._name} ${t()}${i?`
`+i.stack:""}`)}},_t=class ke{constructor(){this._loggers=new ae,this._logLevel=M.Error,this._fnOutput=ke.logConsole}getLogger(e){return this._loggers.computeIfAbsent(e,t=>new Dt(t,this._logLevel,this._fnOutput))}changeLogLevel(e){this._logLevel=e,this._loggers.forEach(t=>t.setLevel(e))}changeOutput(e){this._fnOutput=e,this._loggers.forEach(t=>t.setOutput(this._fnOutput))}reset(){this.changeLogLevel(M.Error),this._fnOutput=ke.logConsole,this._loggers.forEach(e=>e.setOutput(this._fnOutput))}static logConsole(e){console&&console.log&&console.log(e)}};const ne=new _t;var st=Object.freeze({__proto__:null,INTERNAL_LOGGING_SETTINGS:$t,get InternalLogLevel(){return M},getInternalLogger:it}),C;(function(o){o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Info=2]="Info",o[o.Warn=3]="Warn",o[o.Error=4]="Error",o[o.Fatal=5]="Fatal",o[o.Off=6]="Off"})(C||(C={}));(function(o){function e(t){switch(t.toLowerCase()){case"trace":return o.Trace;case"debug":return o.Debug;case"info":return o.Info;case"warn":return o.Warn;case"error":return o.Error;case"fatal":return o.Fatal;case"off":return o.Off;default:return}}o.toLogLevel=e})(C||(C={}));class Re{constructor(e){this._runtime=e}get id(){return this._runtime.id}get logLevel(){return this._runtime.level}get runtimeSettings(){return Object.assign({},this._runtime)}set runtimeSettings(e){this._runtime=e}trace(e,...t){this.logMessage(C.Trace,e,t)}debug(e,...t){this.logMessage(C.Debug,e,t)}info(e,...t){this.logMessage(C.Info,e,t)}warn(e,...t){this.logMessage(C.Warn,e,t)}error(e,...t){this.logMessage(C.Error,e,t)}fatal(e,...t){this.logMessage(C.Fatal,e,t)}logMessage(e,t,i){if(this._runtime.level>e)return;const s=Date.now(),n=typeof t=="string"?t:t(),r=Re.getErrorAndArgs(i);switch(this._runtime.channel.type){case"RawLogChannel":this._runtime.channel.write({message:n,exception:r.error,args:r.args,timeInMillis:s,level:e,logNames:this._runtime.name},this._runtime.argumentFormatter);return;case"LogChannel":this._runtime.channel.write(this.createLogMessage(n,e,r,s));break}}formatArgValue(e){try{return this._runtime.argumentFormatter(e)}catch{return`>>ARG CONVERT FAILED: '${e!==void 0?e.toString():"undefined"}'<<`}}createLogMessage(e,t,i,s){let n;const r=i.error,a=i.args;r&&(n=`${r.name}: ${r.message}`,r.stack&&(n+=`@
${r.stack}`));const c=this._runtime.dateFormatter(s);let l=C[t].toUpperCase();l.length<5&&(l+=" ");const u=typeof this._runtime.name=="string"?this._runtime.name:this._runtime.name.join(", "),d=typeof a<"u"&&a.length>0?" ["+a.map(h=>this.formatArgValue(h)).join(", ")+"]":"";return{message:c+" "+l+" ["+u+"] "+e+d,error:n}}static getErrorAndArgs(e){if(e.length===0)return{};let t,i;const s=e[0];if(s instanceof Error)return t=s,i=e.length>1?e.slice(1):void 0,{error:t,args:i};if(typeof s=="function"){const n=s();return n instanceof Error?(t=n,i=e.length>1?e.slice(1):void 0,{error:t,args:i}):e.length===1?Array.isArray(n)?{args:n.length>0?n:void 0}:{args:n}:Array.isArray(n)?{args:[...n,...e.slice(1)]}:{args:[n,...e.slice(1)]}}return{args:e}}}function z(o,e,t=" "){return nt(o,e,"start",t)}function Rt(o,e,t=" "){return nt(o,e,"end",t)}function Ht(o){return o.map(e=>e.length).reduce((e,t)=>t>e?t:e,0)}function nt(o,e,t,i=" "){if(e<=o.length)return o;if(i.length>1)throw new Error(`Fill char must be one char exactly, it is: ${i.length}`);const s=e-o.length;let n="";for(let r=0;r<s;r++)n+=i;return t==="start"?n+o:o+n}function Bt(o){return o===void 0?"undefined":JSON.stringify(o)}function Ut(o){const e=new Date(o),t=e.getFullYear(),i=z((e.getMonth()+1).toString(),2,"0"),s=z(e.getDate().toString(),2,"0"),n=z(e.getHours().toString(),2,"0"),r=z(e.getMinutes().toString(),2,"0"),a=z(e.getSeconds().toString(),2,"0"),c=z(e.getMilliseconds().toString(),3,"0");return`${t}-${i}-${s} ${n}:${r}:${a},${c}`}let Nt=class{constructor(){this.type="LogChannel"}write(e){console&&console.log&&console.log(e.message+(e.error?`
${e.error}`:""))}};var Ae;(function(o){function e(){return new Nt}o.createConsoleChannel=e})(Ae||(Ae={}));class X{constructor(e,t){this._log=it("core.impl.LogProviderImpl"),this._name=e,this._settings=t,this._loggers=new ae,this._idToKeyMap=new ae,this._globalRuntimeSettings={level:t.level,channel:t.channel},this._nextLoggerId=1,this._log.trace(()=>`Created LogProviderImpl with settings: ${JSON.stringify(this._settings)}`)}get runtimeSettings(){return Object.assign(Object.assign({},this._settings),{level:this._globalRuntimeSettings.level,channel:this._globalRuntimeSettings.channel})}getLogger(e){return this.getOrCreateLogger(e)}updateLoggerRuntime(e,t){this._log.debug(()=>`Updating logger ${e.id} runtime settings using: '${JSON.stringify(t)}'`);const i=this._idToKeyMap.get(e.id);return i===void 0?(this._log.warn(()=>`Cannot update logger with id: ${e.id}, it was not found.`),!1):(this._loggers.computeIfPresent(i,(s,n)=>(n.runtimeSettings=X.mergeRuntimeSettingsIntoLogRuntime(n.runtimeSettings,t),n)),!0)}updateRuntimeSettings(e){this._log.debug(()=>`Updating global runtime settings and updating existing loggers runtime settings using: '${JSON.stringify(e)}'`),this._globalRuntimeSettings={level:e.level!==void 0?e.level:this._globalRuntimeSettings.level,channel:e.channel!==void 0?e.channel:this._globalRuntimeSettings.channel},this._loggers.forEach(t=>t.runtimeSettings=X.mergeRuntimeSettingsIntoLogRuntime(t.runtimeSettings,e))}clear(){this._loggers.clear(),this._idToKeyMap.clear(),this._globalRuntimeSettings=Object.assign({},this._settings),this._nextLoggerId=1}getOrCreateLogger(e){const t=X.createKey(e),i=this._loggers.computeIfAbsent(t,()=>{const s={level:this._globalRuntimeSettings.level,channel:this._globalRuntimeSettings.channel,id:this.nextLoggerId(),name:e,argumentFormatter:this._settings.argumentFormatter,dateFormatter:this._settings.dateFormatter};return new Re(s)});return this._idToKeyMap.computeIfAbsent(i.id,()=>t),i}nextLoggerId(){const e=this._name+"_"+this._nextLoggerId;return this._nextLoggerId++,e}static mergeRuntimeSettingsIntoLogRuntime(e,t){return Object.assign(Object.assign({},e),{level:t.level!==void 0?t.level:e.level,channel:t.channel!==void 0?t.channel:e.channel})}static createKey(e){return typeof e=="string"?e:e.join(",")}}function Ve(o,e){return new X(o,e)}var R=Object.freeze({__proto__:null,EnhancedMap:ae,maxLengthStringValueInArray:Ht,padEnd:Rt,padStart:z});function J(o){return`Log4TSGroupConfig=level: ${C[o.level].toString()}, expression: ${o.expression.toString()}, (omitted functions/channel)`}function zt(o){const e=o.groups.map(t=>J(t)).join(", ");return`Log4TSGroupConfig=level: ${C[o.level].toString()}, groups: ${e}, (omitted functions/channel)`}class le{constructor(e,t,i){this._log=st.getInternalLogger("log4ts.impl.Log4TSProviderImpl"),this._name=e,this._defaultConfig=[Object.assign(Object.assign({},t),{identifier:t.identifier}),Ve("log4ts_"+e+"_"+t.identifier,t)],this._logProviders=new Map(i.map(s=>{const n=Object.assign({},s),r=Ve("log4ts_"+e+"_"+s.identifier,s);return[s.identifier,{groupConfig:n,provider:r}]})),this._log.trace(()=>{const s=[...this._logProviders.values()].map(n=>J(n.groupConfig)).join(", ");return`Creating Log4TSProviderImpl '${this._name}', defaultConfig: ${J(this._defaultConfig[0])}, groupConfigs: ${s}`})}get name(){return this._name}get config(){return Object.assign({},this._defaultConfig[0])}get groupConfigs(){return[...this._logProviders.values()].map(e=>Object.assign({},e.groupConfig))}getLogger(e){for(const t of this._logProviders.values())if(t.groupConfig.expression.test(e))return t.provider.getLogger(e);return this._defaultConfig[1].getLogger(e)}updateRuntimeSettingsGroup(e,t){const i=this._logProviders.get(e);if(i===void 0)throw new Error(`Cannot update group with identifier '${e}', it does not exist.`);this._log.debug(()=>`Will update ${J(i.groupConfig)}, associated LogProvider '${i.provider}' - applying runtime change: ${JSON.stringify(t)}.`),le.updateLog4TGroupConfig(i.groupConfig,i.provider,t)}updateRuntimeSettings(e){this._log.debug(()=>`Will update settings for all groups and existing loggers - will apply runtime change: ${JSON.stringify(e)}.`),this._logProviders.forEach(t=>{const i=t.groupConfig,s=t.provider;this._log.debug(()=>`Will update ${J(i)}, associated LogProvider '${s}' - applying runtime change: ${JSON.stringify(e)}.`),le.updateLog4TGroupConfig(i,s,e)})}static updateLog4TGroupConfig(e,t,i){i.level&&(e.level=i.level),i.channel&&(e.channel=i.channel),t.updateRuntimeSettings(i)}}class te{constructor(e,t){this._provider=e,this._messageChannel=t,this._originalLogLevels=te.loadCurrentGroupLogLevels(e)}get name(){return this._provider.name}showSettings(){let e=`Available group configs (Log4TSProvider '${this._provider.name}'):
`;const t=this._provider.groupConfigs.map(a=>({level:C[a.level],channelDescription:a.channel.toString?a.channel.toString():JSON.stringify(a.channel),identifier:a.identifier})),i=t.length.toString().length,s=R.maxLengthStringValueInArray(t.map(a=>a.identifier)),n=5,r=t.map((a,c)=>`  [${R.padStart(c.toString(),i)}, ${R.padEnd(a.identifier,s)} (level=${R.padEnd(a.level,n)})]`).join(`
`);e+=r+`
`,this._messageChannel(e)}update(e,t){const i=C.toLogLevel(e);if(i===void 0)throw new Error(`Cannot update log provider, log level '${e}' is invalid.`);const s={level:i};if(t===void 0){this._provider.updateRuntimeSettings(s),this._messageChannel("Updated all group configs successfully.");return}if(typeof t=="number"){const n=this._provider.groupConfigs;if(t<0||t>=n.length)throw new Error(`Group config with index '${t}' does not exist (outside of range).`);const r=n[t];this._provider.updateRuntimeSettingsGroup(r.identifier,s),this._messageChannel(`Updated group config with index '${t}' successfully.`);return}this._provider.updateRuntimeSettingsGroup(t,s),this._messageChannel(`Updated group config with id '${t}' successfully.`)}reset(){this._originalLogLevels.forEach((e,t)=>{this._provider.updateRuntimeSettingsGroup(t,{level:e})}),this._messageChannel("Successfully reset log levels back to original state (from when this Log4TSControlProvider was created).")}save(){if(!localStorage){this._messageChannel("Cannot save state, localStorage is not available.");return}const e={name:this._provider.name,groups:this._provider.groupConfigs.map(t=>({identifier:t.identifier,level:C[t.level]}))};localStorage.setItem(this.createKey(),JSON.stringify(e)),this._messageChannel(`Successfully saved state for Log4TSControlProvider '${this._provider.name}'.`)}restore(e){const t=e!==void 0?e:!0;if(!localStorage){t&&this._messageChannel(`Will not attempt to restore state for Log4TSControlProvider '${this._provider.name}', localStorage is not available.`);return}const i=this.createKey(),s=localStorage.getItem(i);if(s===null){t&&this._messageChannel(`Cannot restore state for Log4TSControlProvider '${this._provider.name}', no data available.`);return}try{const n=JSON.parse(s);if(this._provider.name!==n.name){t&&this._messageChannel(`Cannot restore state for Log4TSControlProvider '${this._provider.name}', data is not for provider - found name '${n.name}'.`);return}this.restoreGroups(n,t),this._originalLogLevels=te.loadCurrentGroupLogLevels(this._provider)}catch{localStorage.removeItem(i),this._messageChannel(`Cannot restore state for Log4TSControlProvider '${this._provider.name}', data is not valid. Invalid data removed from localStorage.`)}}help(){const e=`You can use the following commands (Log4TSProvider ${this._provider.name}):
  showSettings()
    Shows the current configuration settings.
  update(logLevel: Log4TSControlProviderLogLevel, groupId?: number | string)
    Change the log level for one or all config groups.
      @param level   The log level to set - must be one of 'trace', 'debug', 'info', 'warn', 'error' or 'fatal'
      @param groupId Optional group config to update by either index or identifier, when omitted updates all groups.
                     Use showSettings() to find details about index and/or identifier.
  reset()
    Resets the log levels of the config groups back to when this control provider was created.
  save()
    Saves the current log levels for all config groups of this provider. Use restore() to load last saved state.
  restore()
    Restore stored saved state, if any. Log levels will be set according to saved state.
  help()
    Shows this help.
`;this._messageChannel(e)}restoreGroups(e,t){e.groups.forEach(i=>{try{const s=C.toLogLevel(i.level);s!==void 0?(this._provider.updateRuntimeSettingsGroup(i.identifier,{level:s}),this._messageChannel(`Log4TSControlProvider '${this._provider.name}' - restored log level of group '${i.identifier}' to '${C[s]}'.`)):t&&this._messageChannel(`Log4TSControlProvider '${this._provider.name}' - failed to restore log level of group '${i.identifier}', invalid log level was specified.`)}catch{t&&this._messageChannel(`Log4TSControlProvider '${this._provider.name}' - failed to restore log level of group '${i.identifier}'.`)}})}createKey(){return`Log4TSProvider-${this._provider.name}`}static loadCurrentGroupLogLevels(e){return new Map(e.groupConfigs.map(t=>[t.identifier,t.level]))}}class He{constructor(){this._log=st.getInternalLogger("log4ts.impl.Log4TSProviderService"),this._providers=new R.EnhancedMap}createLogProvider(e,t){return this._providers.compute(e,(s,n)=>{if(n)throw new Error(`Log4TSProvider with name '${e}' already exists, cannot create another.`);const r=Ft(Ot(),t);Vt(r),this._log.debug(()=>`Creating new Log4TSProvider with name '${e}', using main config settings '${zt(r)}'.`);const a=new RegExp(".+"),c={channel:r.channel,level:r.level,expression:a,dateFormatter:r.dateFormatter,argumentFormatter:r.argumentFormatter,identifier:a.toString()};return new le(s,c,r.groups)})}clear(){this._providers.clear()}getLog4TSControl(e){const t=e||(i=>{if(console&&console.log)console.log(i);else throw new Error("Cannot use console (it is not present), please specify a custom function to write to.")});return{help:()=>t(He.help()),showSettings:()=>t(this.showSettings()),getProvider:i=>this.getLog4TSControlProviderByIdOrName(i,t)}}showSettings(){let e=`Available Log4TSProviders:
`;const t=this._providers.size.toString().length,i=R.maxLengthStringValueInArray([...this._providers.keys()]),s=[...this._providers.entries()].map((n,r)=>{const a=n[0];return`  [${R.padStart(r.toString(),t)}, ${R.padEnd(a,i)}]`});return e+=s.join(`
`)+(s.length>0?`
`:""),e}getLog4TSControlProviderByIdOrName(e,t){if(typeof e=="string"){const s=this._providers.get(e);if(s===void 0)throw new Error(`Provider with name '${e}' does not exist.`);return new te(s,t)}const i=[...this._providers.values()];if(e<0||e>=i.length)throw new Error(`Provider with index '${e}' does not exist (outside of range).`);return new te(i[e],t)}static help(){return`You can use the following commands:
  showSettings()
    Shows the current configuration settings.
  getProvider: (id: number | string): Log4TSControlProvider
    Get access to a Log4TSControlProvider to change log levels.
      @param id The id (use showSettings to see) or name of the provider
  help()
    Shows this help.
`}}const We=new He;function Ot(){return{argumentFormatter:Bt,channel:Ae.createConsoleChannel(),dateFormatter:Ut,groups:[],level:C.Error}}function Ft(o,e){const t={argumentFormatter:e.argumentFormatter?e.argumentFormatter:o.argumentFormatter,channel:e.channel?e.channel:o.channel,dateFormatter:e.dateFormatter?e.dateFormatter:o.dateFormatter,groups:[],level:e.level!==void 0?e.level:o.level};return t.groups=e.groups.map(i=>qt(t,i)),t}function qt(o,e){return{argumentFormatter:e.argumentFormatter?e.argumentFormatter:o.argumentFormatter,channel:o.channel,dateFormatter:e.dateFormatter?e.dateFormatter:o.dateFormatter,expression:e.expression,level:e.level!==void 0?e.level:o.level,identifier:e.identifier?e.identifier:e.expression.toString()}}function Vt(o){if(o.groups.length===0)throw new Error("Invalid configuration, 'groups' on configuration is empty, at least 1 group config must be specified.")}var Z;(function(o){function e(i,s){return We.createLogProvider(i,s)}o.createProvider=e;function t(){We.clear()}o.clear=t})(Z||(Z={}));class Wt extends Map{computeIfAbsent(e,t){if(this.has(e))return this.get(e);const i=t(e);return this.set(e,i),i}computeIfPresent(e,t){const i=this.get(e);if(i===void 0)return;const s=t(e,i);return s!==void 0?this.set(e,s):this.delete(e),s}compute(e,t){const i=this.get(e),s=t(e,i);return s?this.set(e,s):this.delete(e),s}}var T;(function(o){o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Info=2]="Info",o[o.Warn=3]="Warn",o[o.Error=4]="Error"})(T||(T={}));class jt{constructor(e,t,i){this._name=e,this._level=t,this._fnOutput=i}trace(e){this.log(T.Trace,e)}debug(e){this.log(T.Debug,e)}error(e,t){this.log(T.Error,e,t)}info(e){this.log(T.Info,e)}warn(e,t){this.log(T.Warn,e,t)}setLevel(e){this._level=e}setOutput(e){this._fnOutput=e}log(e,t,i){this._level>e||this._fnOutput(`${T[this._level].toString()} <INTERNAL LOGGER> ${this._name} ${t()}${i?`
`+i.stack:""}`)}}class ce{constructor(){this._loggers=new Wt,this._logLevel=T.Error,this._fnOutput=ce.logConsole}getLogger(e){return this._loggers.computeIfAbsent(e,t=>new jt(t,this._logLevel,this._fnOutput))}changeLogLevel(e){this._logLevel=e,this._loggers.forEach(t=>t.setLevel(e))}changeOutput(e){this._fnOutput=e,this._loggers.forEach(t=>t.setOutput(this._fnOutput))}reset(){this.changeLogLevel(T.Error),this._fnOutput=ce.logConsole,this._loggers.forEach(e=>e.setOutput(this._fnOutput))}static logConsole(e){console&&console.log&&console.log(e)}}new ce;var I;(function(o){o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Info=2]="Info",o[o.Warn=3]="Warn",o[o.Error=4]="Error",o[o.Fatal=5]="Fatal",o[o.Off=6]="Off"})(I||(I={}));(function(o){function e(t){switch(t.toLowerCase()){case"trace":return o.Trace;case"debug":return o.Debug;case"info":return o.Info;case"warn":return o.Warn;case"error":return o.Error;case"fatal":return o.Fatal;case"off":return o.Off;default:return}}o.toLogLevel=e})(I||(I={}));class Gt{constructor(){this.type="LogChannel"}write(e){console&&console.log&&console.log(e.message+(e.error?`
${e.error}`:""))}}var je;(function(o){function e(){return new Gt}o.createConsoleChannel=e})(je||(je={}));class Kt{constructor(e){this.log4tsLogger=e}debug(e,...t){this.log4tsLogger.debug(()=>e,...t)}info(e,...t){this.log4tsLogger.info(()=>e,...t)}warn(e,...t){this.log4tsLogger.warn(()=>e,...t)}error(e,t,...i){if(this.isLogErrorType(t)){const s=t;if(typeof s=="string"){const n=new Error(s);this.log4tsLogger.error(()=>e,n,...i)}else this.log4tsLogger.error(()=>e,s,...i)}else{const s=t!==void 0?[t,...i]:i;this.log4tsLogger.error(()=>e,...s)}}fatal(e,t,...i){if(this.isLogErrorType(t)){const s=t;if(typeof s=="string"){const n=new Error(s);this.log4tsLogger.fatal(()=>e,n,...i)}else this.log4tsLogger.fatal(()=>e,s,...i)}else{const s=t!==void 0?[t,...i]:i;this.log4tsLogger.fatal(()=>e,...s)}}isLogErrorType(e){return typeof e=="string"||e instanceof Error}}var m=(o=>(o[o.Trace=0]="Trace",o[o.Debug=1]="Debug",o[o.Info=2]="Info",o[o.Warn=3]="Warn",o[o.Error=4]="Error",o[o.Fatal=5]="Fatal",o[o.Off=6]="Off",o))(m||{}),L=(o=>(o.CONSOLE="console",o.CUSTOM="custom",o.MULTI="multi",o.ASYNC_CONSUMER="async-consumer",o))(L||{}),O=(o=>(o.SIMPLE="{timestamp} [{level}] {logger}: {message}",o.DETAILED="{timestamp} [{level}] [{logger}] {message} {args}",o.COMPACT="{level} {logger}: {message}",o.JSON="json",o.CUSTOM="custom",o))(O||{});function K(o,e){if(!e||e.length===0)return{processedMessage:o,remainingArgs:[]};const t=[...e];let i=0;const s=o.replace(/\{\}/g,()=>{if(i<t.length){const r=t[i++];if(r instanceof Error)return`${r.name}: ${r.message}`;if(typeof r=="object"&&r!==null)try{return JSON.stringify(r)}catch{return String(r)}return String(r)}return"{}"}),n=i<t.length?t.slice(i):[];return{processedMessage:s,remainingArgs:n}}function Jt(o){return o.length===0?"":" ["+o.map(e=>e instanceof Error?`${e.name}: ${e.message}`:typeof e=="object"?JSON.stringify(e):String(e)).join(", ")+"]"}class ie{static createChannel(e,t){switch(e.type){case L.CONSOLE:return this.getDefaultConsoleChannel(t||e.format);case L.CUSTOM:return this.mapCustomChannelToLibrary(e.channel);case L.MULTI:return this.createMultiChannel(e);case L.ASYNC_CONSUMER:return this.createAsyncConsumerChannel(e);default:throw new Error(`Unknown channel type: ${e.type}`)}}static formatLogMessage(e,t){if(t||(t=O.SIMPLE),typeof t=="string"&&Object.values(O).includes(t))switch(t){case O.JSON:return JSON.stringify({timestamp:new Date().toISOString(),level:e.level?.toString()||"INFO",logger:Array.isArray(e.logNames)?e.logNames[0]:e.logNames||"unknown",message:e.message||"",args:e.args});case O.COMPACT:t="{level} {logger}: {message}";break;case O.DETAILED:t="{timestamp} [{level}] [{logger}] {message} {args}";break;case O.SIMPLE:default:t="{timestamp} [{level}] {logger}: {message}";break}if(typeof t=="function"){const c={level:e.level?.toString()||"INFO",timeInMillis:e.timeInMillis||Date.now(),logName:Array.isArray(e.logNames)?e.logNames[0]:e.logNames||"unknown",message:e.message||"",exception:e.exception,args:e.args};return t(c)}if(typeof t=="string"){const c=new Date().toISOString(),l=new Date,u=l.getHours().toString().padStart(2,"0")+":"+l.getMinutes().toString().padStart(2,"0")+":"+l.getSeconds().toString().padStart(2,"0")+"."+l.getMilliseconds().toString().padStart(3,"0");let d,g,h;if(e.message&&typeof e.message=="string"){const x=e.message.match(/^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+(\w+)\s+\[([^\]]+)\]\s+(.*)$/);x?(d=x[1],g=x[2],h=x[3]):(d=e.level?.toString()||"INFO",g=Array.isArray(e.logNames)?e.logNames[0]:e.logNames||"unknown",h=e.message)}else d=e.level?.toString()||"INFO",g=Array.isArray(e.logNames)?e.logNames[0]:e.logNames||"unknown",h=e.message||"";const{processedMessage:S,remainingArgs:E}=K(h,e.args||[]),w=Jt(E);return t.replace("{timestamp}",c).replace("{time}",u).replace("{level}",d.toUpperCase()).replace("{logger}",g).replace("{message}",S).replace("{args}",w)}const i=new Date().toISOString(),s=e.level?.toString()||"INFO",n=Array.isArray(e.logNames)?e.logNames[0]:e.logNames||"unknown";let r=e.message||"";const{processedMessage:a}=K(r,e.args||[]);return r=a,`${i} [${s.toUpperCase()}] ${n}: ${r}`}static getDefaultConsoleChannel(e){return{type:"LogChannel",write:t=>{let i;if(e)i=this.formatLogMessage(t,e);else{let r,a,c;const l=new Date().toISOString();if(t.message&&typeof t.message=="string"){const d=t.message.match(/^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+(\w+)\s+\[([^\]]+)\]\s+(.*)$/);d?(r=d[1],a=d[2],c=d[3]):(r=t.level?.toString()||"INFO",a=Array.isArray(t.logNames)?t.logNames[0]:t.logNames||"unknown",c=t.message)}else r=t.level?.toString()||"INFO",a=Array.isArray(t.logNames)?t.logNames[0]:t.logNames||"unknown",c=t.message||"";const{processedMessage:u}=K(c,t.args||[]);c=u,i=`${l} [${r.toUpperCase()}] ${a}: ${c}`}const s=t.level?.toString()||"INFO";this.getConsoleMethod(s)(i),!e&&t.args&&t.args.length>0&&console.log("  └─ Args:",...t.args),t.exception&&console.error("  └─ Exception:",t.exception),t.args&&t.args.length>0&&t.args.forEach((r,a)=>{r instanceof Error&&console.error(`  └─ Error Arg[${a}]:`,r)})}}}static getConsoleMethod(e){switch(e.toUpperCase()){case"ERROR":case"FATAL":return console.error;case"WARN":return console.warn;case"DEBUG":case"TRACE":return console.debug;case"INFO":default:return console.log}}static mapCustomChannelToLibrary(e){return e.type==="LogChannel"?{type:"LogChannel",write:i=>{let s,n,r;if(i.message&&typeof i.message=="string"){const u=i.message.match(/^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+(\w+)\s+\[([^\]]+)\]\s+(.*)$/);u?(s=u[1],n=u[2],r=u[3]):(s=i.level?.toString()||"INFO",n=Array.isArray(i.logNames)?i.logNames[0]:i.logNames||"unknown",r=i.message)}else s=i.level?.toString()||"INFO",n=Array.isArray(i.logNames)?i.logNames[0]:i.logNames||"unknown",r=i.message||"";const{processedMessage:a}=K(r,i.args||[]);r=a;let c;if(i.error&&typeof i.error=="string"){const u=i.error.match(/^Error: (.+)@/);u&&(c=new Error(u[1]))}else i.exception&&(c=i.exception);const l={level:s,timeInMillis:i.timeInMillis||Date.now(),logName:n,message:r,exception:c,args:i.args};e.write(l)}}:{type:"RawLogChannel",write:(i,s)=>{let n,r,a;if(i.message&&typeof i.message=="string"){const d=i.message.match(/^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+(\w+)\s+\[([^\]]+)\]\s+(.*)$/);d?(n=d[1],r=d[2],a=d[3]):(n=i.level?.toString()||"INFO",r=Array.isArray(i.logNames)?i.logNames[0]:i.logNames||"unknown",a=i.message)}else n=i.level?.toString()||"INFO",r=Array.isArray(i.logNames)?i.logNames[0]:i.logNames||"unknown",a=i.message||"";const{processedMessage:c}=K(a,i.args||[]);a=c;let l;if(i.error&&typeof i.error=="string"){const d=i.error.match(/^Error: (.+)@/);d&&(l=new Error(d[1]))}else i.exception&&(l=i.exception);const u={level:n,timeInMillis:i.timeInMillis||Date.now(),logName:r,message:a,exception:l,args:i.args};e.write(u,s)}}}static createAsyncConsumerChannel(e){return{type:"LogChannel",write:t=>{}}}static createMultiChannel(e){const t=e.channels.filter(s=>s.type!==L.MULTI);if(t.length===0)throw new Error("Multi-channel must contain at least one non-multi channel");const i=t.map(s=>this.createChannel(s));return{type:"LogChannel",write:s=>{i.forEach(n=>{try{if(n.type==="LogChannel")n.write(s);else{const r=c=>{if(c==null)return String(c);if(typeof c=="string")return c;if(typeof c=="object")try{return JSON.stringify(c)}catch{return String(c)}return String(c)},a={...s,args:s.args||[]};n.write(a,r)}}catch(r){console.error("Channel write error:",r)}})}}}}class Yt{constructor(e){this.type="LogChannel",this.consumers=new Set,this.processingQueue=[],this.isProcessing=!1,this.name=e}getName(){return this.name}addConsumer(e){return this.consumers.add(e),()=>{this.consumers.delete(e)}}getConsumerCount(){return this.consumers.size}write(e){this.consumers.size!==0&&(this.processingQueue.push({message:e,timestamp:Date.now()}),this.isProcessing||this.processQueue())}async processQueue(){if(!this.isProcessing){this.isProcessing=!0;try{for(;this.processingQueue.length>0;){const e=this.processingQueue.shift();if(!e)continue;const t=Array.from(this.consumers).map(i=>this.processWithConsumer(i,e.message));await Promise.allSettled(t)}}finally{this.isProcessing=!1}}}async processWithConsumer(e,t){try{await e.consume(t)}catch(i){const s=i instanceof Error?i:new Error(String(i));if(e.onError)try{e.onError(s,t)}catch(n){console.error(`AsyncConsumerLogChannel[${this.name}]: Consumer onError handler failed:`,n)}else console.error(`AsyncConsumerLogChannel[${this.name}]: Consumer failed:`,s)}}clearConsumers(){this.consumers.clear()}getQueueSize(){return this.processingQueue.length}isCurrentlyProcessing(){return this.isProcessing}}function Se(o){if(typeof o=="number"&&o in m)return o;if(typeof o=="string")switch(o.toUpperCase()){case"TRACE":return m.Trace;case"DEBUG":return m.Debug;case"INFO":return m.Info;case"WARN":case"WARNING":return m.Warn;case"ERROR":return m.Error;case"FATAL":return m.Fatal;case"OFF":return m.Off;default:return m.Info}return m.Info}function U(o){switch(o){case m.Trace:return I.Trace;case m.Debug:return I.Debug;case m.Info:return I.Info;case m.Warn:return I.Warn;case m.Error:return I.Error;case m.Fatal:return I.Fatal;case m.Off:return I.Off;default:throw new Error(`Unknown log level: ${o}`)}}const ot=class k{constructor(e={}){this.loggerCache=new Map,this.asyncConsumers=new Map,this.hasMessagesAppenderBeenAdded=!1;let t=e&&Object.keys(e).length>0?e:this.loadConfigFile();if(t=this.parseStringLevelsInConfig(t),!t.appenders&&!t.typescriptLoggingConfig&&(t.defaultChannel||t.globalLevel)){const s={providerName:"OpinionFrontUI",globalLevel:m.Debug,defaultChannel:{type:L.CONSOLE}};this.config={...s,...t},this.provider=this.createProviderFromSimpleConfig()}else{const s={providerName:"OpinionFrontUI",globalLevel:m.Debug,defaultChannel:{type:L.CONSOLE},appenders:[{name:"console",enabled:!0,level:m.Trace,channel:{type:L.CONSOLE},groups:[/.+/],format:"{time} [{level}] {logger}: {message}"},k.MessagesAppender]};this.config={...s,...t},this.provider=this.createProviderFromAppendersConfig()}this.hasMessagesAppenderBeenAdded=!0}static configure(e={}){if(k.instance)throw new Error("LoggerFactory already configured. Use getInstance() to get the configured instance.");return k.instance=new k(e),k.instance}static getInstance(){return k.instance||(k.instance=new k),k.instance}getLogger(e){let t;typeof e=="string"?t=e:(t=e.name||"UnknownClass",(!t||t==="UnknownClass")&&(t="UnknownClass"));let i=this.loggerCache.get(t);if(!i){const s=this.provider.getLogger(t);i=new Kt(s),this.loggerCache.set(t,i)}return i}clearCache(){this.loggerCache.clear()}addLogConsumer(e,t){let i=this.asyncConsumers.get(e);return i||(i=new Set,this.asyncConsumers.set(e,i)),i.add(t),()=>{const s=this.asyncConsumers.get(e);s&&(s.delete(t),s.size===0&&this.asyncConsumers.delete(e))}}messagesConsumer(e){return this.addLogConsumer("messages",e)}parseStringLevelsInConfig(e){const t={...e};return t.globalLevel&&typeof t.globalLevel=="string"&&(t.globalLevel=Se(t.globalLevel)),t.appenders&&(t.appenders=t.appenders.map(i=>{const s={...i};return s.level&&typeof s.level=="string"&&(s.level=Se(s.level)),s})),t.groups&&(t.groups=t.groups.map(i=>{const s={...i};return s.level&&typeof s.level=="string"&&(s.level=Se(s.level)),s})),t}loadConfigFile(){try{if(typeof window<"u")return{};const e=require("fs"),i=require("path").join(process.cwd(),"logger.json");if(e.existsSync(i)){const s=e.readFileSync(i,"utf-8");return JSON.parse(s)}}catch{}return{}}getLogChannelNames(){return Array.from(this.asyncConsumers.keys())}getLogConsumerCount(e){const t=this.asyncConsumers.get(e);return t?t.size:0}clearLogConsumers(e){this.asyncConsumers.delete(e)}clearAllLogConsumers(){this.asyncConsumers.clear()}getAsyncConsumerLogChannel(e){const t=new Yt(e);return t.write=i=>{const s=this.asyncConsumers.get(e);s&&s.size>0&&s.forEach(n=>{this.processAsyncConsumer(n,i)})},t}async processAsyncConsumer(e,t){try{await e.consume(t)}catch(i){const s=i instanceof Error?i:new Error(String(i));if(e.onError)try{e.onError(s,t)}catch(n){console.error("LoggerFactory: Consumer onError handler failed:",n)}else console.error("LoggerFactory: Consumer failed:",s)}}createProviderFromTypescriptLoggingConfig(){const e=this.config.typescriptLoggingConfig;let t=e.groups;this.config.groups&&(t=this.config.groups.map(s=>{const n={...s};return s.level!==void 0&&(n.level=U(s.level)),s.channelConfig&&(n.channel=ie.createChannel(s.channelConfig),delete n.channelConfig),n}));const i={...e,groups:t};return Z.createProvider(this.config.providerName,i)}createProviderFromSimpleConfig(){const e=ie.createChannel(this.config.defaultChannel);let t=this.config.groups;return t?t=t.map(i=>{const s={...i};return i.level!==void 0&&(s.level=U(i.level)),i.channelConfig&&(s.channel=ie.createChannel(i.channelConfig),delete s.channelConfig),s}):t=[{identifier:"default",expression:new RegExp(".+"),level:U(this.config.globalLevel)}],Z.createProvider(this.config.providerName,{level:U(this.config.globalLevel),channel:e,groups:t})}createProviderFromAppendersConfig(){const e=this.config.appenders.filter(n=>n.enabled!==!1);if(e.length===0)throw new Error("At least one enabled appender is required");const t=this.createMultiAppenderChannel(e),i=new Set;e.forEach(n=>{n.groups&&n.groups.forEach(r=>{r instanceof RegExp?i.add(r.source):i.add(r)})});const s=i.size>0?Array.from(i).map(n=>({identifier:n,expression:new RegExp(n),level:U(m.Trace)})):[{identifier:"default",expression:new RegExp(".+"),level:U(m.Trace)}];return Z.createProvider(this.config.providerName,{level:U(m.Trace),channel:t,groups:s})}createMultiAppenderChannel(e){return{type:"LogChannel",write:t=>{const i=Array.isArray(t.logNames)?t.logNames[0]:t.logNames||"unknown";e.filter(n=>this.appenderMatches(n,i,t.level?.toString())).forEach(n=>{try{if(n.channel.type===L.ASYNC_CONSUMER){this.handleAsyncConsumerAppender(n,t);return}const r=ie.createChannel(n.channel,n.format),a=this.formatMessageForAppender(t,n);if(r.type==="LogChannel")r.write(a);else{const c=n.argumentFormatter||(l=>{if(l==null)return String(l);if(typeof l=="string")return l;if(typeof l=="object")try{return JSON.stringify(l)}catch{return String(l)}return String(l)});r.write(a,c)}}catch(r){console.error(`Error in appender ${n.name}:`,r)}})}}}appenderMatches(e,t,i){if(e.level!==void 0){const s=e.level;if(this.getLogLevelValue(i)<s)return!1}return!(e.groups&&e.groups.length>0&&!e.groups.some(n=>n instanceof RegExp?n.test(t):t.includes(n)))}getLogLevelValue(e){return e&&{TRACE:m.Trace,DEBUG:m.Debug,INFO:m.Info,WARN:m.Warn,ERROR:m.Error,FATAL:m.Fatal}[e.toUpperCase()]||m.Info}handleAsyncConsumerAppender(e,t){const s=e.channel.channelName,n=this.asyncConsumers.get(s);if(n&&n.size>0){const r=this.formatMessageForAppender(t,e);let a,c;if(r.message&&typeof r.message=="string"){const d=r.message.match(/^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+(\w+)\s+\[([^\]]+)\]\s+(.*)$/);d?(a=d[2],c=d[3]):(a=Array.isArray(r.logNames)?r.logNames[0]:r.logNames||"unknown",c=r.message)}else a=Array.isArray(r.logNames)?r.logNames[0]:r.logNames||"unknown",c=r.message||"";let l=r.level?.toString();if(!l&&r.message&&typeof r.message=="string"){const d=r.message.match(/^\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3}\s+(\w+)\s+\[([^\]]+)\]\s+(.*)$/);d&&(l=d[1])}const u={level:l||"INFO",timeInMillis:r.timeInMillis||Date.now(),logName:a,message:c,exception:r.exception,args:r.args};n.forEach(d=>{this.processAsyncConsumer(d,u)})}}formatMessageForAppender(e,t){const i={...e};return t.dateFormatter&&e.timeInMillis&&(i.formattedDate=t.dateFormatter(e.timeInMillis)),i.appenderName=t.name,i}};ot.MessagesAppender={name:"messages",enabled:!0,level:m.Info,channel:{type:L.ASYNC_CONSUMER,channelName:"messages"},format:"{time} [{level}] {logger}: {message}",groups:[/.+/]};let f=ot;const Be=class rt{constructor(){this.delay=500,this.initialized=!1,this.logger=f.getInstance().getLogger("MockApiService"),this.logger.info("Using mock data for development")}getServiceId(){return rt.SERVICE_ID}async init(){this.initialized||(this.logger.info("Initializing MockApiService..."),this.initialized=!0)}isReady(){return this.initialized}async destroy(){this.logger.info("Destroying MockApiService..."),this.initialized=!1}async simulateDelay(){return new Promise(e=>setTimeout(e,this.delay))}createMockUser(){return{id:1001,username:"john.developer",email:"john@example.com",role:tt.ADMIN,created:new Date("2023-01-15"),lastLogin:new Date}}createMockSurveys(){return[{id:101,title:"Customer Satisfaction Survey 2024",description:"Annual customer satisfaction survey to measure service quality",status:W.ACTIVE,created:new Date("2024-01-15"),updated:new Date("2024-02-01"),responses:245,completionRate:78.5},{id:102,title:"Product Feature Feedback",description:"Gather feedback on new product features and improvements",status:W.ACTIVE,created:new Date("2024-02-10"),updated:new Date("2024-02-15"),responses:156,completionRate:65.2},{id:103,title:"Employee Engagement Survey",description:"Internal survey to measure employee satisfaction and engagement",status:W.DRAFT,created:new Date("2024-03-01"),updated:new Date("2024-03-05"),responses:89,completionRate:45.8},{id:104,title:"Market Research - Tech Trends",description:"Research on emerging technology trends and market preferences",status:W.ACTIVE,created:new Date("2024-03-15"),updated:new Date("2024-03-20"),responses:312,completionRate:82.1},{id:105,title:"Website Usability Study",description:"User experience survey for website navigation and functionality",status:W.COMPLETED,created:new Date("2024-01-01"),updated:new Date("2024-01-30"),responses:189,completionRate:91.3}]}createMockChartData(){const e=new Date,t=30,i=[],s=[];for(let a=t;a>=0;a--){const c=new Date(e);c.setDate(c.getDate()-a);const l=c.toISOString().split("T")[0],u=Math.floor(Math.random()*25)+5,d=Math.floor(Math.random()*15)+2;i.push([l,u]),s.push([l,d])}const n=i.reduce((a,[,c])=>a+c,0),r=s.reduce((a,[,c])=>a+c,0);return{charts:{completed:i,partial:s,totals:{completed:n,partial:r}}}}async validateUser(){return await this.simulateDelay(),this.logger.debug("Validating user..."),{userInfo:this.createMockUser(),accounts:[{id:1,name:"Development Account"},{id:2,name:"Testing Account"}],accountId:1}}async getOpinionsList(e){await this.simulateDelay(),this.logger.debug("Fetching opinions list...",e);let t=this.createMockSurveys();return e.orderByRecent&&(t=t.sort((i,s)=>(s.updated?.getTime()??0)-(i.updated?.getTime()??0))),e.top&&e.top>0&&(t=t.slice(0,e.top)),{list:t}}async getActivityChart(e){return await this.simulateDelay(),this.logger.debug("Fetching activity chart...",e),this.createMockChartData()}async sendFeedback(e){await this.simulateDelay(),this.logger.debug("Sending feedback...",e),this.logger.info("Feedback sent successfully")}async updateAccountSettings(e){await this.simulateDelay(),this.logger.debug("Updating account settings...",e),this.logger.info("Account settings updated successfully")}};Be.SERVICE_ID="MockApiService";Be.SERVICE_DESCRIPTION="Mock API service for development and testing";let Te=Be;const Qt="modulepreload",Xt=function(o){return"/opinion-front-ui/pr-34/"+o},Ge={},he=function(e,t,i){let s=Promise.resolve();if(t&&t.length>0){let c=function(l){return Promise.all(l.map(u=>Promise.resolve(u).then(d=>({status:"fulfilled",value:d}),d=>({status:"rejected",reason:d}))))};document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),a=r?.nonce||r?.getAttribute("nonce");s=c(t.map(l=>{if(l=Xt(l),l in Ge)return;Ge[l]=!0;const u=l.endsWith(".css"),d=u?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${l}"]${d}`))return;const g=document.createElement("link");if(g.rel=u?"stylesheet":Qt,u||(g.as="script"),g.crossOrigin="",g.href=l,a&&g.setAttribute("nonce",a),document.head.appendChild(g),u)return new Promise((h,S)=>{g.addEventListener("load",h),g.addEventListener("error",()=>S(new Error(`Unable to preload CSS for ${l}`)))})}))}function n(r){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=r,window.dispatchEvent(a),!a.defaultPrevented)throw r}return s.then(r=>{for(const a of r||[])a.status==="rejected"&&n(a.reason);return e().catch(n)})};class P{static createLayoutReadyEvent(e){return{type:"layout-ready",data:{context:e,timestamp:Date.now()},timestamp:Date.now()}}static createLayoutModeChangeEvent(e,t,i,s){return{type:"layout-mode-change",data:{context:e,viewport:t,modeType:i,previousModeType:s},timestamp:Date.now()}}static createSidebarCompactModeChangeEvent(e,t,i){return{type:"sidebar-compact-mode-change",data:{compactMode:e,previousCompactMode:t,blockedReason:i},timestamp:Date.now()}}static createMobileMenuRequestEvent(e,t){return{type:"mobile-menu-request",data:{requestedAction:e,trigger:t},timestamp:Date.now()}}static createSidebarCompactRequestEvent(e,t){return{type:"sidebar-compact-request",data:{requestedAction:e,trigger:t},timestamp:Date.now()}}static createMobileMenuModeChangeEvent(e,t,i){return{type:"mobile-menu-mode-change",data:{isVisible:e,previousVisibility:t,trigger:i},timestamp:Date.now()}}static createUserMenuRequestEvent(e,t){return{type:"user-menu-request",data:{requestedAction:e,trigger:t},timestamp:Date.now()}}static createUserMenuModeChangeEvent(e,t,i){return e===t?(console.warn(`UserMenu - No state change detected (${t} → ${e}), skipping event emission`),null):{type:"user-menu-mode-change",data:{isVisible:e,previousVisibility:t,trigger:i},timestamp:Date.now()}}static createGenericEvent(e,t){return{type:e,data:t,timestamp:Date.now()}}static validateEventData(e){if(!e.type||!e.data||typeof e.timestamp!="number")return!1;switch(e.type){case"layout-ready":{const t=e.data;return!!(t.context&&typeof t.timestamp=="number")}case"layout-mode-change":{const t=e.data;return!!(t.context&&t.viewport&&t.modeType&&typeof t.viewport.width=="number"&&typeof t.viewport.height=="number")}case"sidebar-compact-mode-change":{const t=e.data;return typeof t.compactMode=="boolean"&&typeof t.previousCompactMode=="boolean"}case"mobile-menu-request":{const t=e.data;return["show","hide","toggle"].includes(t.requestedAction)&&["menu-button","programmatic"].includes(t.trigger)}case"sidebar-compact-request":{const t=e.data;return["show","hide","toggle"].includes(t.requestedAction)&&["debug-page","keyboard","programmatic"].includes(t.trigger)}case"mobile-menu-mode-change":{const t=e.data;return typeof t.isVisible=="boolean"&&typeof t.previousVisibility=="boolean"&&["close-button","backdrop","menu-button","programmatic"].includes(t.trigger)}case"user-menu-request":{const t=e.data;return["show","hide","toggle"].includes(t.requestedAction)&&["debug-page","keyboard","programmatic"].includes(t.trigger)}case"user-menu-mode-change":{const t=e.data;return typeof t.isVisible=="boolean"&&typeof t.previousVisibility=="boolean"&&["click","keyboard","programmatic"].includes(t.trigger)}default:return!0}}static formatEventDataForLogging(e){switch(e.type){case"layout-ready":return"→ Layout initialization complete";case"layout-mode-change":{const t=e.data,i=t.modeType==="mobile"?" (compact mode disabled)":"",s=t.previousModeType?` (from ${t.previousModeType})`:"";return`→ modeType=${t.modeType}${i}, viewport=${t.viewport?.width}x${t.viewport?.height}${s}`}case"sidebar-compact-mode-change":{const t=e.data,i=t.blockedReason?` (blocked: ${t.blockedReason})`:"",s=t.previousCompactMode!==void 0?` (was ${t.previousCompactMode})`:"";return`→ compactMode=${t.compactMode}${i}${s}`}case"mobile-menu-request":{const t=e.data,i=t.requestedAction==="show"?"📢":t.requestedAction==="hide"?"🔄":"⚙️",s=` (via ${t.trigger})`;return`${i} request ${t.requestedAction} mobile menu${s}`}case"sidebar-compact-request":{const t=e.data;return`${t.requestedAction==="show"?"📢":t.requestedAction==="hide"?"🔄":"⚙️"} request ${t.requestedAction} sidebar compact (via ${t.trigger})`}case"mobile-menu-mode-change":{const t=e.data,i=t.isVisible?"📱":"❌",s=` (via ${t.trigger})`,n=t.previousVisibility!==t.isVisible?` ${t.previousVisibility} → ${t.isVisible}`:"";return`${i} mobile menu${n}${s}`}case"user-menu-request":{const t=e.data;return`${t.requestedAction==="show"?"📢":t.requestedAction==="hide"?"🔄":"⚙️"} request ${t.requestedAction} user menu (via ${t.trigger})`}case"user-menu-mode-change":{const t=e.data,i=t.isVisible?"👤":"❌",s=` (via ${t.trigger})`,n=t.previousVisibility!==t.isVisible?` ${t.previousVisibility} → ${t.isVisible}`:"";return`${i} user menu${n}${s}`}default:try{return e.data?`→ data=${JSON.stringify(e.data)}`:""}catch{return"→ [complex data]"}}}static getEventBadge(e){switch(e){case"layout-ready":return"🟩";case"layout-mode-change":return"🟦";case"sidebar-compact-mode-change":return"🟨";case"sidebar-compact-request":return"📢";case"mobile-menu-request":return"📢";case"mobile-menu-mode-change":return"📱";case"user-menu-request":return"📢";case"user-menu-mode-change":return"👤";default:return"⬜"}}}class Zt{constructor(e,t){this.parentContainer=e,this.container=null,this.user=null,this.elements={},this.isOpen=!1,this.container=e,this.layoutContext=t,this.logger=f.getInstance().getLogger("UserMenu")}async init(){this.logger.info("Initializing..."),this.injectResponsiveCSS(),this.createUserMenu(),this.cacheElements(),this.setupEventListeners(),this.setupLayoutEventSubscriptions(),this.initializeWithDefaultUser(),this.logger.info("Ready")}injectResponsiveCSS(){if(document.getElementById("user-menu-responsive-css"))return;const t=document.createElement("style");t.id="user-menu-responsive-css",t.textContent=`
      /* Desktop styles (default) */
      .user-menu-trigger {
        /* Default desktop styles already inline */
      }

      /* Add backdrop overlay for mobile */
      .user-menu-backdrop {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 10001;
      }

      @media (max-width: 767px) {
        .user-menu-backdrop.show {
          display: block !important;
        }
      }

      /* Mobile styles (< 768px) */
      @media (max-width: 767px) {
        .user-menu-trigger {
          /* Transform to mobile icon style */
          padding: 9px !important;
          border-radius: 8px !important;
          width: 42px !important;
          height: 42px !important;
          justify-content: center !important;
          background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%) !important;
          border: 1px solid #e3e6ea !important;
          box-shadow:
            0 2px 4px rgba(0,0,0,0.08),
            0 4px 12px rgba(0,0,0,0.05),
            inset 0 1px 0 rgba(255,255,255,0.8) !important;
          backdrop-filter: blur(10px) !important;
        }

        .user-menu-trigger:hover {
          background: linear-gradient(145deg, #f8f9ff 0%, #e3f2fd 100%) !important;
          border-color: #007bff !important;
          transform: translateY(-1px) !important;
          box-shadow:
            0 3px 6px rgba(0,123,255,0.15),
            0 6px 16px rgba(0,123,255,0.1),
            inset 0 1px 0 rgba(255,255,255,0.9) !important;
        }

        /* Hide text elements on mobile */
        .user-menu-trigger .user-info {
          display: none !important;
        }

        /* Center and adjust user icon for mobile */
        .user-menu-trigger .user-avatar {
          margin: 0 !important;
          display: flex !important;
          align-items: center !important;
          justify-content: center !important;
        }

        .user-menu-trigger .user-icon {
          font-size: 18px !important;
          font-style: normal !important;
        }

        /* Note: Mobile dropdown positioning and styling is now handled
           by createMobileDropdown() method using inline styles to avoid
           CSS conflicts. The styles below are kept for reference but
           are no longer used on mobile. */
      }

      /* Hide close button on desktop and tablet */
      @media (min-width: 768px) {
        .user-menu-close {
          display: none !important;
        }
      }
    `,document.head.appendChild(t),this.logger.info("Responsive CSS injected")}createUserMenu(){const e=`
      <div class="user-menu-container" style="position: relative;">
        <div class="user-menu-trigger" id="user_menu_trigger" style="
          display: flex;
          align-items: center;
          cursor: pointer;
          padding: 8px 12px;
          border-radius: 6px;
          background: white;
          border: 1px solid #dee2e6;
          transition: all 0.2s ease;
        ">
          <div class="user-avatar" style="margin-right: 10px;">
            <span class="user-icon" style="font-size: 20px; color: #007bff; font-style: normal;">👤</span>
          </div>
          <div class="user-info" style="display: flex; align-items: center; gap: 8px;">
            <span class="username" id="label_username" style="font-weight: 500; color: #212529; font-size: 14px;">Loading...</span>
            <span class="dropdown-arrow" style="font-size: 10px; color: #6c757d; transition: transform 0.2s ease; font-style: normal;">▼</span>
          </div>
        </div>
        <div class="user-menu-dropdown" id="user_menu_dropdown" style="
          position: absolute;
          top: calc(100% + 4px);
          right: 0;
          min-width: 280px;
          background: white;
          border: 1px solid #dee2e6;
          border-radius: 6px;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
          z-index: 9999;
          overflow: hidden;
          display: none;
        ">
          <div class="user-menu-header" style="
            padding: 16px;
            background: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            display: flex;
            align-items: center;
            gap: 12px;
          ">
            <div class="user-menu-avatar">
              <span class="user-icon-large" style="font-size: 32px; color: #007bff; font-style: normal;">👤</span>
            </div>
            <div class="user-menu-details">
              <div class="user-menu-name" id="user_menu_name" style="
                font-weight: 600;
                color: #212529;
                font-size: 16px;
                margin-bottom: 4px;
              ">Loading...</div>
              <div class="user-menu-email" id="user_menu_email" style="
                color: #6c757d;
                font-size: 14px;
              ">demo@example.com</div>
            </div>
          </div>
          <!-- Close button for mobile -->
          <button class="user-menu-close" id="user_menu_close" style="
            position: absolute;
            top: 12px;
            right: 12px;
            background: none;
            border: none;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.2s ease;
            color: #6c757d;
            font-size: 18px;
            line-height: 1;
            z-index: 10;
          " title="Close menu">
            <span class="material-icons" style="font-size: 20px;">close</span>
          </button>

          <ul class="user-menu-items" style="
            list-style: none;
            margin: 0;
            padding: 16px 0 8px 0;
          ">
            <li>
              <a href="/account" class="user-menu-item" style="
                display: flex;
                align-items: center;
                padding: 12px 20px;
                color: #495057;
                text-decoration: none;
                transition: all 0.2s ease;
                border-radius: 0;
                margin: 0;
                font-size: 15px;
                font-weight: 500;
                min-height: 48px;
              ">
                <span class="material-icons nav-icon" style="
                  margin-right: 16px;
                  font-size: 20px;
                  width: 24px;
                  color: #6c757d;
                  transition: color 0.2s ease;
                ">settings</span>
                <span class="nav-text">Account Settings</span>
              </a>
            </li>
            <li>
              <a href="javascript:;" class="user-menu-item" data-action="feedback" style="
                display: flex;
                align-items: center;
                padding: 12px 20px;
                color: #495057;
                text-decoration: none;
                transition: all 0.2s ease;
                border-radius: 0;
                margin: 0;
                font-size: 15px;
                font-weight: 500;
                min-height: 48px;
              ">
                <span class="material-icons nav-icon" style="
                  margin-right: 16px;
                  font-size: 20px;
                  width: 24px;
                  color: #6c757d;
                  transition: color 0.2s ease;
                ">feedback</span>
                <span class="nav-text">Send Feedback</span>
              </a>
            </li>
            <li style="height: 1px; background: #e9ecef; margin: 8px 16px;"></li>
            <li>
              <a href="javascript:;" class="user-menu-item user-menu-signout" data-action="logout" style="
                display: flex;
                align-items: center;
                padding: 12px 20px;
                color: #dc3545;
                text-decoration: none;
                transition: all 0.2s ease;
                border-radius: 0;
                margin: 0;
                font-size: 15px;
                font-weight: 500;
                min-height: 48px;
              ">
                <span class="material-icons nav-icon" style="
                  margin-right: 16px;
                  font-size: 20px;
                  width: 24px;
                  color: #dc3545;
                  transition: color 0.2s ease;
                ">logout</span>
                <span class="nav-text">Sign Out</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
    `;this.container&&(this.container.innerHTML=e)}cacheElements(){this.elements={trigger:document.getElementById("user_menu_trigger"),dropdown:document.getElementById("user_menu_dropdown"),username:document.getElementById("label_username"),userMenuName:document.getElementById("user_menu_name"),userMenuEmail:document.getElementById("user_menu_email")},this.logger.info("Cached elements:",{trigger:!!this.elements.trigger,dropdown:!!this.elements.dropdown,username:!!this.elements.username,userMenuName:!!this.elements.userMenuName,userMenuEmail:!!this.elements.userMenuEmail})}setupLayoutEventSubscriptions(){if(!this.layoutContext){this.logger.info("No layout context available, skipping event subscriptions");return}this.layoutContext.subscribe("user-menu-request",e=>{const t=e&&typeof e=="object"&&e!==null?e.data:null,i=t&&typeof t=="object"&&t!==null?t.requestedAction:null,s=t&&typeof t=="object"&&t!==null?t.trigger:null;switch(this.logger.info(`Received request: ${i} (from ${s})`),i){case"show":this.isOpen?this.logger.warn("Request to show but menu is already open"):this.open();break;case"hide":this.isOpen?this.close():this.logger.warn("Request to hide but menu is already closed");break;case"toggle":this.toggle();break;default:this.logger.warn(`Unknown requested action: ${i}`)}}),this.logger.info("Layout event subscriptions setup complete")}setupEventListeners(){this.elements.trigger&&(this.elements.trigger.addEventListener("click",i=>{i.preventDefault(),i.stopPropagation(),this.logger.info("Trigger clicked"),this.toggle()}),this.elements.trigger.addEventListener("mouseenter",()=>{this.elements.trigger&&(this.elements.trigger.style.background="#f8f9fa",this.elements.trigger.style.borderColor="#adb5bd")}),this.elements.trigger.addEventListener("mouseleave",()=>{this.elements.trigger&&!this.isOpen&&(this.elements.trigger.style.background="white",this.elements.trigger.style.borderColor="#dee2e6")})),document.querySelectorAll(".user-menu-item").forEach(i=>{i.addEventListener("mouseenter",()=>{i.style.background="#f8f9fa"}),i.addEventListener("mouseleave",()=>{i.style.background="transparent"})});const t=document.getElementById("user_menu_close");t&&t.addEventListener("click",i=>{i.preventDefault(),i.stopPropagation(),this.logger.info("Close button clicked"),this.handleCloseButtonClick()}),document.addEventListener("click",i=>{if(this.isOpen&&this.elements.trigger&&this.elements.dropdown){const s=i.target;!this.elements.trigger.contains(s)&&!this.elements.dropdown.contains(s)&&this.handleClickOutside()}})}toggle(){this.handleToggleClick()}open(){if(!this.elements.dropdown||!this.elements.trigger){this.logger.warn("Cannot open: missing elements");return}this.logger.info("Opening dropdown (public API)"),this.isOpen=!0,window.innerWidth<=767?(this.createMobileBackdrop(),document.body.style.overflow="hidden",this.createMobileDropdown()):(this.elements.dropdown.style.display="block",this.elements.dropdown.style.visibility="visible",this.elements.dropdown.style.opacity="1"),this.elements.trigger.style.background="#f8f9fa",this.elements.trigger.style.borderColor="#007bff";const t=this.elements.trigger.querySelector(".dropdown-arrow");t&&(t.style.transform="rotate(180deg)")}close(){if(!this.elements.dropdown||!this.elements.trigger)return;this.logger.info("Closing dropdown (public API)"),this.isOpen=!1,this.elements.dropdown.style.display="none",this.elements.trigger.style.background="white",this.elements.trigger.style.borderColor="#dee2e6",this.elements.dropdown.style.position="absolute",this.elements.dropdown.style.top="calc(100% + 4px)",this.elements.dropdown.style.left="auto",this.elements.dropdown.style.right="0",this.elements.dropdown.style.bottom="auto",this.elements.dropdown.style.transform="none",this.elements.dropdown.style.width="auto",this.elements.dropdown.style.minWidth="280px",this.elements.dropdown.style.maxWidth="none",this.elements.dropdown.style.margin="auto",this.elements.dropdown.style.borderRadius="6px",this.elements.dropdown.style.boxShadow="0 4px 12px rgba(0, 0, 0, 0.15)",this.elements.dropdown.style.zIndex="9999";const e=document.querySelector(".user-menu-mobile-dropdown");e&&(e.remove(),this.logger.info("📱 Removed mobile dropdown")),this.removeMobileBackdrop(),document.body.style.overflow="";const t=this.elements.trigger.querySelector(".dropdown-arrow");t&&(t.style.transform="rotate(0deg)")}handleToggleClick(){this.logger.info("Toggle click");const e=this.isOpen,t=!e;t?this.open():this.close(),this.emitUserMenuModeChangeEvent(t,e,"click")}handleCloseButtonClick(){if(this.logger.info("Close button click"),!this.isOpen){this.logger.warn("Close button clicked but menu is already closed");return}const e=this.isOpen;this.close(),this.emitUserMenuModeChangeEvent(!1,e,"click")}handleClickOutside(){if(this.logger.info("Click outside"),!this.isOpen){this.logger.warn("Click outside detected but menu is already closed");return}const e=this.isOpen;this.close(),this.emitUserMenuModeChangeEvent(!1,e,"click")}handleMobileCloseButtonClick(){if(this.logger.info("Mobile close button click"),!this.isOpen){this.logger.warn("Mobile close button clicked but menu is already closed");return}const e=this.isOpen;this.close(),this.emitUserMenuModeChangeEvent(!1,e,"click")}handleBackdropClick(){if(this.logger.info("Backdrop click"),!this.isOpen){this.logger.warn("Backdrop clicked but menu is already closed");return}const e=this.isOpen;this.close(),this.emitUserMenuModeChangeEvent(!1,e,"click")}updateUser(e){this.logger.info("Updating user:",e),this.user=e,this.elements.username&&(this.elements.username.textContent=e.username),this.elements.userMenuName&&(this.elements.userMenuName.textContent=e.username),this.elements.userMenuEmail&&e.email&&(this.elements.userMenuEmail.textContent=e.email)}getUser(){return this.user}createMobileDropdown(){this.logger.info("📱 Creating fresh mobile dropdown...");const e=document.querySelector(".user-menu-mobile-dropdown");e&&(e.remove(),this.logger.info("📱 Removed existing mobile dropdown"));const t=document.createElement("div");t.className="user-menu-mobile-dropdown",t.id="user_menu_mobile_dropdown",t.setAttribute("style",`
      position: fixed !important;
      top: 50% !important;
      left: 50% !important;
      transform: translate(-50%, -50%) !important;
      width: calc(100vw - 32px) !important;
      min-width: 280px !important;
      max-width: 380px !important;
      background: white !important;
      border: 1px solid rgba(255,255,255,0.2) !important;
      border-radius: 16px !important;
      box-shadow: 0 25px 80px rgba(0,0,0,0.35), 0 10px 40px rgba(0,0,0,0.2) !important;
      z-index: 99999 !important;
      overflow: hidden !important;
      display: block !important;
      visibility: visible !important;
      opacity: 1 !important;
      backdrop-filter: blur(10px) !important;
    `);const i=this.getUser(),s=i?.username||"Loading...",n=i?.email||"Please wait...";t.innerHTML=`
      <div class="user-menu-header" style="
        padding: 24px 20px !important;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%) !important;
        border-bottom: 1px solid rgba(0,0,0,0.06) !important;
        border-radius: 16px 16px 0 0 !important;
        display: flex !important;
        align-items: center !important;
        gap: 12px !important;
      ">
        <div class="user-menu-avatar">
          <span class="user-icon-large" style="
            font-size: 48px !important;
            color: #007bff !important;
            font-style: normal !important;
            filter: drop-shadow(0 2px 4px rgba(0,123,255,0.2)) !important;
          ">👤</span>
        </div>
        <div class="user-menu-details">
          <div class="user-menu-name" style="
            font-size: 20px !important;
            font-weight: 700 !important;
            margin-bottom: 8px !important;
            color: #1a1a1a !important;
          ">${s}</div>
          <div class="user-menu-email" style="
            font-size: 16px !important;
            color: #6c757d !important;
            font-weight: 500 !important;
          ">${n}</div>
        </div>
        <button class="user-menu-mobile-close" style="
          position: absolute !important;
          top: 12px !important;
          right: 12px !important;
          background: rgba(255,255,255,0.9) !important;
          border: 1px solid rgba(0,0,0,0.1) !important;
          border-radius: 50% !important;
          width: 36px !important;
          height: 36px !important;
          font-size: 18px !important;
          cursor: pointer !important;
          color: #6c757d !important;
          transition: all 0.2s ease !important;
          z-index: 10 !important;
          backdrop-filter: blur(5px) !important;
          display: flex !important;
          align-items: center !important;
          justify-content: center !important;
        " title="Close menu">✕</button>
      </div>

      <ul class="user-menu-items" style="
        list-style: none !important;
        margin: 0 !important;
        padding: 16px 0 8px 0 !important;
      ">
        <li>
          <a href="/account" class="user-menu-item" style="
            display: flex !important;
            align-items: center !important;
            padding: 12px 20px !important;
            color: #495057 !important;
            text-decoration: none !important;
            transition: all 0.2s ease !important;
            border-radius: 0 !important;
            margin: 0 !important;
            font-size: 15px !important;
            font-weight: 500 !important;
            min-height: 48px !important;
          ">
            <span class="material-icons nav-icon" style="
              margin-right: 16px !important;
              font-size: 20px !important;
              width: 24px !important;
              color: #6c757d !important;
              transition: color 0.2s ease !important;
            ">settings</span>
            <span class="nav-text">Account Settings</span>
          </a>
        </li>
        <li>
          <a href="javascript:;" class="user-menu-item" data-action="feedback" style="
            display: flex !important;
            align-items: center !important;
            padding: 12px 20px !important;
            color: #495057 !important;
            text-decoration: none !important;
            transition: all 0.2s ease !important;
            border-radius: 0 !important;
            margin: 0 !important;
            font-size: 15px !important;
            font-weight: 500 !important;
            min-height: 48px !important;
          ">
            <span class="material-icons nav-icon" style="
              margin-right: 16px !important;
              font-size: 20px !important;
              width: 24px !important;
              color: #6c757d !important;
              transition: color 0.2s ease !important;
            ">feedback</span>
            <span class="nav-text">Send Feedback</span>
          </a>
        </li>
        <li style="height: 1px !important; background: #e9ecef !important; margin: 8px 16px !important;"></li>
        <li>
          <a href="javascript:;" class="user-menu-item user-menu-signout" data-action="logout" style="
            display: flex !important;
            align-items: center !important;
            padding: 12px 20px !important;
            color: #dc3545 !important;
            text-decoration: none !important;
            transition: all 0.2s ease !important;
            border-radius: 0 !important;
            margin: 0 !important;
            font-size: 15px !important;
            font-weight: 500 !important;
            min-height: 48px !important;
          ">
            <span class="material-icons nav-icon" style="
              margin-right: 16px !important;
              font-size: 20px !important;
              width: 24px !important;
              color: #dc3545 !important;
              transition: color 0.2s ease !important;
            ">logout</span>
            <span class="nav-text">Sign Out</span>
          </a>
        </li>
      </ul>
    `,document.body.appendChild(t),t.querySelectorAll(".user-menu-item").forEach(l=>{l.addEventListener("mouseenter",()=>{l.style.setProperty("background","#f8f9fa","important")}),l.addEventListener("mouseleave",()=>{l.style.setProperty("background","transparent","important")}),l.addEventListener("click",u=>{this.logger.info("📱 Mobile menu item clicked:",u.currentTarget.textContent?.trim())})});const a=t.querySelector(".user-menu-mobile-close");a&&(a.addEventListener("click",l=>{l.preventDefault(),l.stopPropagation(),this.logger.info("📱 Mobile close button clicked"),this.handleMobileCloseButtonClick()}),a.addEventListener("mouseenter",()=>{a.style.setProperty("background","rgba(220, 53, 69, 0.1)","important"),a.style.setProperty("color","#dc3545","important")}),a.addEventListener("mouseleave",()=>{a.style.setProperty("background","rgba(255,255,255,0.9)","important"),a.style.setProperty("color","#6c757d","important")}));const c=window.getComputedStyle(t);this.logger.info("📱 Fresh mobile dropdown created and added to body",{position:c.position,top:c.top,left:c.left,transform:c.transform,zIndex:c.zIndex,display:c.display,visibility:c.visibility,opacity:c.opacity,width:c.width,height:c.height,backgroundColor:c.backgroundColor})}createMobileBackdrop(){document.body.classList.add("user-menu-mobile-open");const e=document.querySelector(".user-menu-backdrop");e&&e.remove();const t=document.createElement("div");t.className="user-menu-backdrop",document.body.appendChild(t),requestAnimationFrame(()=>{t.classList.add("show")}),t.addEventListener("click",()=>{this.handleBackdropClick()}),this.logger.info("📱 Mobile backdrop created with blur effects")}removeMobileBackdrop(){document.body.classList.remove("user-menu-mobile-open");const e=document.querySelector(".user-menu-backdrop");e&&(e.classList.remove("show"),setTimeout(()=>{e.remove()},300)),this.logger.info("📱 Mobile backdrop removed with blur effects cleanup")}initializeWithDefaultUser(){this.logger.info("Initializing with loading state, waiting for authentication service...")}updateMenuItems(e){this.logger.info("Updating menu items:",e.length,"items");const t=this.elements.dropdown?.querySelector(".user-menu-items");if(!t){this.logger.warn("Menu items container not found");return}const i=e.map(s=>this.renderUserMenuItem(s)).join("");t.innerHTML=i,this.setupMenuItemHoverEffects(),this.logger.info("Menu items updated successfully")}renderUserMenuItem(e){if(e.type==="divider")return'<li style="height: 1px; background: #e9ecef; margin: 8px 16px;"></li>';const t=e.href||"javascript:;",i=e.action?`data-action="${e.action}"`:"",s=e.className?` ${e.className}`:"",n=e.style?` ${e.style}`:"",r=e.id==="logout"?"#dc3545":"#6c757d";return`
      <li>
        <a href="${t}" class="user-menu-item${s}" ${i} style="
          display: flex;
          align-items: center;
          padding: 12px 20px;
          color: ${e.id==="logout"?"#dc3545":"#495057"};
          text-decoration: none;
          transition: all 0.2s ease;
          border-radius: 0;
          margin: 0;
          font-size: 15px;
          font-weight: 500;
          min-height: 48px;${n}
        ">
          <span class="material-icons nav-icon" style="
            margin-right: 16px;
            font-size: 20px;
            width: 24px;
            color: ${r};
            transition: color 0.2s ease;
          ">${e.icon}</span>
          <span class="nav-text">${e.text}</span>
        </a>
      </li>
    `}setupMenuItemHoverEffects(){document.querySelectorAll(".user-menu-item").forEach(t=>{t.addEventListener("mouseenter",()=>{t.style.background="#f8f9fa"}),t.addEventListener("mouseleave",()=>{t.style.background="transparent"})})}emitUserMenuModeChangeEvent(e,t,i){if(!this.layoutContext)return;const s=P.createUserMenuModeChangeEvent(e,t,i);s&&(this.layoutContext.emit("user-menu-mode-change",s.data),this.logger.info(`📡 Emitted mode change event: ${t} → ${e} (via ${i})`))}destroy(){this.logger.info("Destroying..."),this.removeMobileBackdrop(),document.body.style.overflow="",this.container&&(this.container.innerHTML=""),this.elements={},this.user=null,this.isOpen=!1}}function at(o){return typeof o.clickHandler=="function"}function Pe(o){return typeof o.href=="string"&&o.href.length>0}function ei(o){return Pe(o)?"link":at(o)?"action":"none"}class ti{constructor(e,t){this.parentContainer=e,this.container=null,this.breadcrumbs=[],this.isInitialized=!1,this.initTime=null,this.eventListeners=[],this.container=e,this.layoutContext=t,this.logger=f.getInstance().getLogger("BreadcrumbsComponent"),this.logger.info("BreadcrumbsComponent - Created with container:",{containerId:e.id,containerClass:e.className})}async init(){if(this.isInitialized){this.logger.warn("BreadcrumbsComponent - Already initialized");return}this.logger.info("BreadcrumbsComponent - Initializing...");try{this.setupContainer(),this.setupEventListeners(),this.renderBreadcrumbs(),this.isInitialized=!0,this.initTime=Date.now(),this.logger.info("BreadcrumbsComponent - Ready")}catch(e){throw this.logger.error("BreadcrumbsComponent - Initialization failed:",e),e}}setupContainer(){if(!this.container)throw new Error("BreadcrumbsComponent - No container provided");this.container.innerHTML="",this.container.innerHTML=`
      <nav class="breadcrumbs-nav" aria-label="Breadcrumb">
        <ol class="breadcrumbs-list" role="list">
          <!-- Breadcrumb items will be rendered here -->
        </ol>
      </nav>
    `,this.logger.info("BreadcrumbsComponent - Container setup complete")}setupEventListeners(){if(this.container){const e=t=>{this.handleBreadcrumbClick(t)};this.container.addEventListener("click",e),this.eventListeners.push({element:this.container,event:"click",handler:e}),this.logger.info("BreadcrumbsComponent - Event listeners setup")}}handleBreadcrumbClick(e){const i=e.target.closest("[data-breadcrumb-id]");if(!i)return;const s=i.getAttribute("data-breadcrumb-id");if(!s)return;const n=this.breadcrumbs.find(r=>r.id===s);if(!n){this.logger.warn(`BreadcrumbsComponent - Breadcrumb not found: ${s}`);return}at(n)?(e.preventDefault(),this.logger.info(`BreadcrumbsComponent - Executing click handler for: ${n.text}`),n.clickHandler(n)):Pe(n)?this.logger.info(`BreadcrumbsComponent - Navigation to: ${n.href}`):(e.preventDefault(),this.logger.info(`BreadcrumbsComponent - Display-only breadcrumb clicked: ${n.text}`))}setBreadcrumbs(e){this.logger.info(`BreadcrumbsComponent - Setting ${e.length} breadcrumbs:`,e.map(t=>t.text)),this.breadcrumbs=[...e],this.renderBreadcrumbs()}addBreadcrumb(e){if(this.logger.info(`BreadcrumbsComponent - Adding breadcrumb: ${e.text}`),this.breadcrumbs.find(t=>t.id===e.id)){this.logger.warn(`BreadcrumbsComponent - Breadcrumb with id '${e.id}' already exists, updating instead`),this.updateBreadcrumb(e.id,e);return}this.breadcrumbs.push(e),this.renderBreadcrumbs()}removeBreadcrumb(e){this.logger.info(`BreadcrumbsComponent - Removing breadcrumb: ${e}`);const t=this.breadcrumbs.length;if(this.breadcrumbs=this.breadcrumbs.filter(i=>i.id!==e),this.breadcrumbs.length===t){this.logger.warn(`BreadcrumbsComponent - Breadcrumb not found for removal: ${e}`);return}this.renderBreadcrumbs()}updateBreadcrumb(e,t){this.logger.info(`BreadcrumbsComponent - Updating breadcrumb: ${e}`,t);const i=this.breadcrumbs.findIndex(s=>s.id===e);if(i===-1){this.logger.warn(`BreadcrumbsComponent - Breadcrumb not found for update: ${e}`);return}this.breadcrumbs[i]={...this.breadcrumbs[i],...t},this.renderBreadcrumbs()}clearBreadcrumbs(){this.logger.info("BreadcrumbsComponent - Clearing all breadcrumbs"),this.breadcrumbs=[],this.renderBreadcrumbs()}getBreadcrumbs(){return[...this.breadcrumbs]}renderBreadcrumbs(){if(!this.container){this.logger.warn("BreadcrumbsComponent - Cannot render, no container available");return}const e=this.container.querySelector(".breadcrumbs-list");if(!e){this.logger.error("BreadcrumbsComponent - Breadcrumbs list container not found");return}if(e.innerHTML="",this.breadcrumbs.length===0){e.innerHTML=`
        <li class="breadcrumb-item breadcrumb-empty">
          <span class="breadcrumb-text">Page</span>
        </li>
      `;return}const t=this.breadcrumbs.map((i,s)=>this.renderBreadcrumbItem(i,s,s===this.breadcrumbs.length-1)).join("");e.innerHTML=t,this.logger.info(`BreadcrumbsComponent - Rendered ${this.breadcrumbs.length} breadcrumbs`)}renderBreadcrumbItem(e,t,i){const s=ei(e),n=s!=="none";let r="";return s==="link"&&Pe(e)?r=`
        <a href="${e.href}" 
           class="breadcrumb-link" 
           data-breadcrumb-id="${e.id}"
           title="${e.caption||e.text}">
          <span class="breadcrumb-text">${e.text}</span>
        </a>
      `:s==="action"?r=`
        <button type="button" 
                class="breadcrumb-button" 
                data-breadcrumb-id="${e.id}"
                title="${e.caption||e.text}">
          <span class="breadcrumb-text">${e.text}</span>
        </button>
      `:r=`
        <span class="breadcrumb-span" 
              data-breadcrumb-id="${e.id}"
              title="${e.caption||e.text}">
          <span class="breadcrumb-text">${e.text}</span>
        </span>
      `,`
      <li class="breadcrumb-item ${i?"breadcrumb-current":""} ${n?"breadcrumb-clickable":""}" 
          ${i?'aria-current="page"':""}>
        ${r}
      </li>
      ${i?"":`
      <li class="breadcrumb-separator" aria-hidden="true">
        <svg width="5" height="8" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M1 1L4.5 5L1 9" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </li>
    `}
    `}getStatus(){return{componentType:"BreadcrumbsComponent",id:"breadcrumbs",initialized:this.isInitialized,initTime:this.initTime,uptime:this.initTime?Date.now()-this.initTime:void 0,domElement:this.container?{tagName:this.container.tagName,id:this.container.id,className:this.container.className,childCount:this.container.children.length,hasContent:this.container.innerHTML.trim().length>0}:void 0,eventListeners:{count:this.eventListeners.length,types:this.eventListeners.map(e=>e.event)},configuration:{hasLayoutContext:!!this.layoutContext},currentState:{breadcrumbsCount:this.breadcrumbs.length,breadcrumbs:this.breadcrumbs.map(e=>({id:e.id,text:e.text,hasHref:!!e.href,hasClickHandler:!!e.clickHandler}))}}}destroy(){this.logger.info("BreadcrumbsComponent - Destroying..."),this.eventListeners.forEach(({element:e,event:t,handler:i})=>{e.removeEventListener(t,i)}),this.eventListeners=[],this.breadcrumbs=[],this.container&&(this.container.innerHTML=""),this.isInitialized=!1,this.initTime=null,this.logger.info("BreadcrumbsComponent - Destroyed")}}class H extends Error{constructor(e,t,i){super(e),this.serviceName=t,this.operation=i,this.name="ServiceError"}}class N extends Error{constructor(e,t,i){super(e),this.code=t,this.eventName=i,this.name="EventBusError"}}class ii{constructor(e={}){this.listeners=new Map,this.options={defaultTimeout:5e3,debug:!1,maxConsumersPerEvent:0,...e},this.logger=f.getInstance().getLogger("EventBusImpl")}publish(e,t){this.options.debug&&this.logger.debug(`📢 EventBus PUBLISH: ${e}`,t);const i=this.listeners.get(e);if(!i||i.size===0){this.options.debug&&this.logger.debug(`📢 EventBus: No consumers for event '${e}'`);return}i.forEach(s=>{s.isActive()&&setTimeout(()=>{try{s.handler(t)}catch(n){this.logger.error(`EventBus PUBLISH error in handler for '${e}':`,n)}},0)})}send(e,t){this.options.debug&&this.logger.debug(`📤 EventBus SEND: ${e}`,t);const i=this.listeners.get(e);if(!i||i.size===0){this.options.debug&&this.logger.debug(`📤 EventBus: No consumers for SEND event '${e}'`);return}const s=Array.from(i).find(n=>n.isActive());if(!s){this.options.debug&&this.logger.debug(`📤 EventBus: No active consumers for SEND event '${e}'`);return}setTimeout(()=>{try{s.handler(t)}catch(n){this.logger.error(`EventBus SEND error in handler for '${e}':`,n)}},0)}request(e,t,i){return this.options.debug&&this.logger.debug(`📬 EventBus REQUEST: ${e}`,t),new Promise((s,n)=>{const r=this.listeners.get(e);if(!r||r.size===0){const u=new N(`No consumers for request event: ${e}`,"NO_CONSUMER",e);n(u);return}const a=Array.from(r).find(u=>u.isActive());if(!a){const u=new N(`No active consumers for request event: ${e}`,"NO_CONSUMER",e);n(u);return}const c=i||this.options.defaultTimeout||5e3,l=setTimeout(()=>{n(new N(`Request timeout for event: ${e}`,"TIMEOUT",e))},c);setTimeout(()=>{try{const u=a.handler(t);u instanceof Promise?u.then(d=>{clearTimeout(l),s(d)}).catch(()=>{clearTimeout(l),n(new N(`Consumer error for request event: ${e}`,"CONSUMER_ERROR",e))}):(clearTimeout(l),s(u))}catch{clearTimeout(l),n(new N(`Consumer error for request event: ${e}`,"CONSUMER_ERROR",e))}},0)})}consume(e,t){if(this.options.debug&&this.logger.debug(`🎯 EventBus CONSUME: Registering handler for '${e}'`),!e||typeof e!="string")throw new N("Event name must be a non-empty string","INVALID_EVENT",e);if(this.options.maxConsumersPerEvent&&this.options.maxConsumersPerEvent>0&&this.getConsumerCount(e)>=this.options.maxConsumersPerEvent)throw new N(`Maximum consumers limit (${this.options.maxConsumersPerEvent}) reached for event: ${e}`,"INVALID_EVENT",e);this.listeners.has(e)||this.listeners.set(e,new Set);const i=this.listeners.get(e);let s=!0;const n={handler:t,unregister:()=>{s&&(i.delete(n),s=!1,this.options.debug&&this.logger.debug(`🎯 EventBus: Unregistered consumer for '${e}'`),i.size===0&&this.listeners.delete(e))},isActive:()=>s,getEventName:()=>e};return i.add(n),n}hasConsumers(e){const t=this.listeners.get(e);return t?t.size>0:!1}getConsumerCount(e){const t=this.listeners.get(e);return t?t.size:0}removeAllConsumers(e){e?(this.listeners.delete(e),this.options.debug&&this.logger.debug(`🗑️ EventBus: Removed all consumers for '${e}'`)):(this.listeners.clear(),this.options.debug&&this.logger.debug("🗑️ EventBus: Removed all consumers for all events"))}getEventNames(){return Array.from(this.listeners.keys())}getDebugInfo(){const e=Array.from(this.listeners.entries()).map(([t,i])=>({name:t,consumers:i.size}));return{eventCount:this.listeners.size,totalConsumers:e.reduce((t,i)=>t+i.consumers,0),events:e}}}class si{constructor(e,t,i,s,n,r){this.event=e,this.key=t,this.currentProvider=i,this.chainIndex=s,this.chainLength=n,this._action="next",this._prevented=!1,this._stopped=!1,this._providerChain=[...r]}next(){this._action="next"}break(){this._action="break"}preventDefault(){this._prevented||(this.event.preventDefault(),this._prevented=!0)}stopPropagation(){this._stopped||(this.event.stopPropagation(),this._stopped=!0)}hasProvider(e){return this._providerChain.includes(e)}getProviderChain(){return[...this._providerChain]}getCurrentAction(){return this._action}isDefaultPrevented(){return this._prevented}isPropagationStopped(){return this._stopped}}class ni{constructor(){this.providers=new Map,this.globalKeydownListener=null,this.logger=f.getInstance().getLogger("ChainHotkeyManager"),this.setupGlobalKeydownListener()}setupGlobalKeydownListener(){this.globalKeydownListener=e=>{const t=this.normalizeKey(e);this.executeChain(t,e).catch(i=>{this.logger.error("Error in chain execution",i)})},document.addEventListener("keydown",this.globalKeydownListener),this.logger.debug("Global keydown listener initialized")}normalizeKey(e){const t=[];return e.ctrlKey&&t.push("Ctrl"),e.metaKey&&t.push("Meta"),e.altKey&&t.push("Alt"),e.shiftKey&&t.push("Shift"),t.length>0?`${t.join("+")}+${e.key}`:e.key}registerProvider(e){const t=e.getHotkeyProviderId();if(this.providers.has(t)){const i=new Error().stack;this.logger.warn(`Provider '${t}' already registered, replacing`),this.logger.warn("Registration callstack:",i)}return this.providers.set(t,e),e.onChainRegistered?.(),this.logger.debug(`Registered provider '${t}' with priority ${e.getProviderPriority()}`),()=>{this.unregisterProvider(t)}}unregisterProvider(e){const t=this.providers.get(e);if(t){t.onChainUnregistered?.(),this.providers.delete(e);const i=new Error().stack;this.logger.debug(`Unregistered provider '${e}'`),this.logger.debug("Unregistration callstack:",i)}}async executeChain(e,t){const i={executed:!1,handlersExecuted:0,totalHandlers:0,finalAction:"next",preventedDefault:!1,stoppedPropagation:!1,executionLog:[]},s=this.getProvidersForKey(e);if(s.length===0)return i;s.sort((a,c)=>c.getProviderPriority()-a.getProviderPriority());const n=[];for(const a of s){const l=a.getChainHotkeys()?.get(e);l&&l.isEnabled()&&n.push({provider:a,handler:l})}if(i.totalHandlers=n.length,n.length===0)return i;const r=n.map(a=>a.provider.getHotkeyProviderId());this.logger.debug(`Executing chain for '${e}' with ${n.length} handlers`,r);for(let a=0;a<n.length;a++){const{provider:c,handler:l}=n[a],u=c.getHotkeyProviderId(),d=new si(t,e,u,a,n.length,r),g={providerId:u,executed:!1,action:"next",error:void 0};try{if(this.logger.debug(`${a+1}/${n.length}: Executing ${u}`),await l.handler(d),g.executed=!0,g.action=d.getCurrentAction(),i.handlersExecuted++,this.logger.debug(`${u}: ${g.action} (prevented: ${d.isDefaultPrevented()})`),d.isDefaultPrevented()&&(i.preventedDefault=!0),d.isPropagationStopped()&&(i.stoppedPropagation=!0),d.getCurrentAction()==="break"){i.finalAction="break",i.executionLog.push(g),this.logger.debug(`Chain broken by ${u}`);break}i.finalAction="next"}catch(h){g.error=h instanceof Error?h.message:String(h),this.logger.error(`${u}: Error`,h),i.handlersExecuted++}i.executionLog.push(g)}return i.executed=i.handlersExecuted>0,this.logger.debug("Chain execution complete",{key:e,executed:i.executed,handlersExecuted:i.handlersExecuted,totalHandlers:i.totalHandlers,finalAction:i.finalAction}),i}getProviders(){return Array.from(this.providers.values())}getProvidersForKey(e){const t=[];for(const i of this.providers.values())i.getChainHotkeys()?.has(e)&&t.push(i);return t}setProviderEnabled(e,t){const i=this.providers.get(e);if(!i){this.logger.warn(`Provider '${e}' not found`);return}const s=i.getChainHotkeys();if(s){for(const n of s.values())t?n.enable():n.disable();this.logger.debug(`Provider '${e}' ${t?"enabled":"disabled"}`)}}getChainDebugInfo(e){const t=this.getProvidersForKey(e);t.sort((s,n)=>n.getProviderPriority()-s.getProviderPriority());const i=[];for(const s of t){const r=s.getChainHotkeys()?.get(e);r&&i.push({providerId:s.getHotkeyProviderId(),key:e,enabled:r.isEnabled(),priority:s.getProviderPriority(),description:r.description})}return{providers:t.map(s=>s.getHotkeyProviderId()),handlers:i,totalHandlers:i.length}}destroy(){this.globalKeydownListener&&(document.removeEventListener("keydown",this.globalKeydownListener),this.globalKeydownListener=null);for(const e of this.providers.values())e.onChainUnregistered?.();this.providers.clear(),this.logger.debug("Destroyed")}}var Ke;(o=>{o.migrationGuide=`
    // OLD SYSTEM (problematic)
    layoutContext.registerHotkey({
      key: "Escape",
      handler: () => { closeMenu(); return false; },
      component: "MyComponent"
    });

    // NEW SYSTEM (chain-based)
    class MyComponentProvider implements ChainHotkeyProvider {
      getHotkeyProviderId(): string { return 'MyComponent'; }
      getProviderPriority(): number { return 500; }
      getDefaultChainBehavior(): HotkeyChainAction { return 'next'; }
      
      getChainHotkeys(): Map<string, ChainHotkeyHandler> | null {
        const hotkeys = new Map();
        
        hotkeys.set('Escape', {
          key: 'Escape',
          providerId: 'MyComponent',
          enabled: this.isMenuOpen,
          handler: (ctx: HotkeyExecutionContext) => {
            if (this.isMenuOpen) {
              closeMenu();
              ctx.preventDefault();
              
              // Smart chain control
              if (ctx.hasProvider('Modal')) {
                ctx.next(); // Let modal also handle if needed
              } else {
                ctx.break(); // We're done
              }
            } else {
              ctx.next(); // Not our concern
            }
          },
          enable: () => this.isMenuOpen = true,
          disable: () => this.isMenuOpen = false,
          isEnabled: () => this.isMenuOpen
        });
        
        return hotkeys;
      }
    }
  `})(Ke||(Ke={}));class p extends Error{constructor(e,t){super(e),this.cause=t,this.name="AuthenticationError",Object.setPrototypeOf(this,p.prototype),t&&t.stack&&(this.stack=`${this.stack}
Caused by: ${t.stack}`)}static from(e,t){return new p(t||`Authentication failed: ${e.message}`,e)}static isAuthenticationError(e){return e instanceof p||e!==null&&typeof e=="object"&&e?.name==="AuthenticationError"||e!==null&&typeof e=="object"&&e?.cause instanceof p}}class G{constructor(e,t,i={}){this.cachedService=null,this.resolutionAttempts=0,this.context=e,this.serviceName=t,this.config={maxRetries:3,retryDelay:100,enableCaching:!0,enableLogging:!1,...i},this.logger=f.getInstance().getLogger(`ServiceReference:${t}`),this.config.enableLogging&&this.logger.debug(`ServiceReference created for service '${t}'`)}async get(){if(this.config.enableCaching&&this.cachedService)return this.config.enableLogging&&this.logger.debug(`Using cached service '${this.serviceName}'`),this.cachedService;const e=await this.resolveServiceWithRetry();return this.config.enableCaching&&(this.cachedService=e),e}getCached(){return this.config.enableCaching?this.cachedService:null}isAvailable(){return this.context.hasService(this.serviceName)}clearCache(){this.config.enableCaching&&(this.cachedService=null,this.resolutionAttempts=0,this.config.enableLogging&&this.logger.debug(`Cache cleared for service '${this.serviceName}'`))}getServiceInfo(){return{serviceName:this.serviceName,isAvailable:this.isAvailable(),isCached:this.config.enableCaching&&this.cachedService!==null,resolutionAttempts:this.resolutionAttempts}}async resolveServiceWithRetry(){let e=null;for(let i=1;i<=this.config.maxRetries;i++){this.resolutionAttempts=i;try{const s=this.context.getService(this.serviceName);if(s)return this.config.enableLogging&&this.logger.debug(`Resolved service '${this.serviceName}' on attempt ${i}`),s;throw new p(`Service '${this.serviceName}' not found in LayoutContext`)}catch(s){e=s,this.config.enableLogging&&this.logger.warn(`Resolution attempt ${i} failed for '${this.serviceName}'`,s),i<this.config.maxRetries&&await this.delay(this.config.retryDelay)}}const t=this.context.getServiceNames();throw new p(`Failed to resolve service '${this.serviceName}' after ${this.config.maxRetries} attempts. Available services: [${t.join(", ")}]. Last error: ${e?.message||"Unknown error"}`)}delay(e){return new Promise(t=>setTimeout(t,e))}}const oi=Object.freeze(Object.defineProperty({__proto__:null,ServiceReference:G},Symbol.toStringTag,{value:"Module"}));class pe{constructor(){this.resizeObserver=null,this.resizeTimeout=null,this.sidebarInstance=null,this.isLayoutReady=!1,this.headerInstance=null,this.footerInstance=null,this.mainContentInstance=null,this.messagesInstance=null,this.currentActivePage=null,this.activePageConsumers=new Set,this.serviceRegistry=new Map,this.eventBusConsumers=new Map,this.failureError=null,this.hasFailed=!1,this.logger=f.getInstance().getLogger(pe),this.viewport=this.calculateViewPort(),this.modeType=this.identifyModeType(this.viewport),this.setupViewportObserver(),this.setupChainHotkeySystem(),this.setupEventBus(),this.logger.info("Initialized with viewport",this.viewport),this.logger.info("Initialized layout mode type",this.modeType)}getModeType(){return this.modeType}identifyModeType(e){const t=e.width<=768,i=e.width>768&&e.width<=1024;let s;return t?s="mobile":i?s="tablet":s="desktop",s}calculateViewPort(){return{width:window.innerWidth,height:window.innerHeight}}setupViewportObserver(){window.ResizeObserver&&(this.resizeObserver=new ResizeObserver(()=>{this.handleViewportChange()}),this.resizeObserver.observe(document.body)),window.addEventListener("resize",()=>{this.resizeTimeout&&clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(()=>{this.handleViewportChange()},100)})}handleViewportChange(){const e=this.modeType,t=this.calculateViewPort(),i=this.identifyModeType(this.viewport);this.viewport=t;const s=e!==i;this.logger.debug(`Viewport changed: ${t.width}x${t.height}`),s&&(this.modeType=i,this.logger.info(`Layout mode type changed: (${e} → ${i})`),this.emitLayoutModeChange(t,i,e))}subscribe(e,t){this.logger.debug(`Adding listener for event: ${e}`);const i=n=>{let r;return n&&typeof n=="object"&&"type"in n&&"timestamp"in n?r=n:r={type:e,data:n,timestamp:Date.now()},t(r)},s=this.eventBus.consume(e,i);return()=>{this.logger.debug(`Removing listener for event: ${e}`),s.unregister()}}emit(e,t){const i={type:e,data:t,timestamp:Date.now()};this.logger.debug(`Emitting event: ${e}`),this.eventBus.publish(e,i)}getViewport(){return{...this.viewport}}markReady(){this.logger.info("Layout marked as ready"),this.isLayoutReady=!0;const e=P.createLayoutReadyEvent(this);this.emit("layout-ready",e.data)}isReady(){return this.isLayoutReady}emitLayoutModeChange(e,t,i){this.logger.info(`Layout mode switching to: ${t}`),this.coordinateComponentsForLayoutMode(t),this.logger.debug("Firing layout-mode-change event");const s=P.createLayoutModeChangeEvent(this,e,t,i||this.modeType);this.emit("layout-mode-change",s.data)}coordinateComponentsForLayoutMode(e){this.logger.debug(`Coordinating components for ${e} mode...`);const t=e==="mobile";this.sidebarInstance&&(this.logger.debug(`Coordinating sidebar for ${e} mode`),t?this.logger.debug("Switching TO mobile: Sidebar will hide and enable overlay mode"):this.logger.debug("Switching FROM mobile: Sidebar will show and disable overlay mode")),this.logger.debug(`Component coordination for ${e} complete`)}isLayoutMobile(){return this.modeType==="mobile"}isLayoutTablet(){return this.modeType==="tablet"}isLayoutDesktop(){return this.modeType==="desktop"}registerSidebar(e){this.sidebarInstance&&this.sidebarInstance!==e&&this.logger.warn("Replacing existing sidebar instance. This might indicate a setup issue."),this.sidebarInstance=e,this.logger.info("Sidebar instance registered successfully")}getSidebar(){return this.sidebarInstance}unregisterSidebar(){this.sidebarInstance&&(this.logger.info("Sidebar instance unregistered"),this.sidebarInstance=null)}registerHeader(e){this.headerInstance&&this.headerInstance!==e&&this.logger.warn("Replacing existing Header instance. This might indicate a setup issue."),this.headerInstance=e,this.logger.info("Header component registered successfully")}registerFooter(e){this.footerInstance&&this.footerInstance!==e&&this.logger.warn("Replacing existing Footer instance. This might indicate a setup issue."),this.footerInstance=e,this.logger.info("Footer component registered successfully")}registerMainContent(e){this.mainContentInstance&&this.mainContentInstance!==e&&this.logger.warn("Replacing existing MainContent instance. This might indicate a setup issue."),this.mainContentInstance=e,this.logger.info("MainContent component registered successfully")}registerMessages(e){this.messagesInstance&&this.messagesInstance!==e&&this.logger.warn("Replacing existing Messages instance. This might indicate a setup issue."),this.messagesInstance=e,this.logger.info("Messages component registered successfully")}getHeader(){return this.headerInstance}getFooter(){return this.footerInstance}getMainContent(){return this.mainContentInstance}getMessagesComponent(){return this.messagesInstance}getRegisteredComponents(){return{header:this.headerInstance,footer:this.footerInstance,mainContent:this.mainContentInstance,messages:this.messagesInstance,sidebar:this.sidebarInstance}}areAllComponentsRegistered(){return!!(this.headerInstance&&this.footerInstance&&this.mainContentInstance&&this.messagesInstance)}unregisterAllComponents(){this.logger.info("Unregistering all components"),this.headerInstance=null,this.footerInstance=null,this.mainContentInstance=null,this.messagesInstance=null,this.sidebarInstance=null,this.logger.info("All components unregistered")}getMessages(){return this.getMessagesComponent()}setupChainHotkeySystem(){this.logger.debug("Setting up chain-based hotkey system..."),this.chainHotkeyManager=new ni,this.logger.info("Chain hotkey system initialized")}getChainHotkeyManager(){return this.chainHotkeyManager}registerChainProvider(e){const t=this.chainHotkeyManager.registerProvider(e);return this.logger.debug(`Registered chain provider: ${e.getHotkeyProviderId()} with priority ${e.getProviderPriority()}`),t}unregisterChainProvider(e){this.chainHotkeyManager.unregisterProvider(e),this.logger.debug(`Unregistered chain provider: ${e}`)}async executeHotkeyChain(e,t){return this.chainHotkeyManager.executeChain(e,t)}setChainProviderEnabled(e,t){this.chainHotkeyManager.setProviderEnabled(e,t),this.logger.debug(`Chain provider ${e} ${t?"enabled":"disabled"}`)}getChainDebugInfo(e){return this.chainHotkeyManager.getChainDebugInfo(e)}setupEventBus(){this.logger.debug("Setting up EventBus for cross-component communication..."),this.eventBus=new ii({debug:!1,defaultTimeout:5e3,maxConsumersPerEvent:0}),this.logger.info("EventBus initialized")}getEventBus(){return this.eventBus}publish(e,t){this.logger.debug(`Publishing event: ${e}`),this.eventBus.publish(e,t)}send(e,t){this.logger.debug(`Sending event: ${e}`),this.eventBus.send(e,t)}request(e,t,i){return this.logger.debug(`Requesting response for event: ${e}`),this.eventBus.request(e,t)}consume(e,t,i){this.logger.debug(`Registering consumer for event: ${e}${i?` (component: ${i})`:""}`);const s=this.eventBus.consume(e,t);return i&&(this.eventBusConsumers.has(i)||this.eventBusConsumers.set(i,[]),this.eventBusConsumers.get(i).push(s)),s}unregisterEventBusConsumers(e){const t=this.eventBusConsumers.get(e);if(!t)return 0;let i=0;return t.forEach(s=>{s.isActive()&&(s.unregister(),i++)}),this.eventBusConsumers.delete(e),this.logger.debug(`Unregistered ${i} EventBus consumers for component: ${e}`),i}getEventBusDebugInfo(){const e=this.eventBus.getEventNames(),t=e.map(s=>({name:s,consumers:this.eventBus.getConsumerCount(s)})),i=Array.from(this.eventBusConsumers.entries()).map(([s,n])=>({component:s,consumers:n.filter(r=>r.isActive()).length}));return{eventCount:e.length,totalConsumers:t.reduce((s,n)=>s+n.consumers,0),events:t,componentConsumers:i}}setActivePage(e){const t=this.currentActivePage;t!==e&&(this.logger.info(`Setting active page: ${e.getPageId()} (${e.getPageInfo().name})`),this.currentActivePage=e,this.notifyActivePageConsumers(e,t),this.updateHotkeysForActivePage(e,t))}deactivatePage(e){if(this.currentActivePage!==e)return this.logger.debug(`Cannot deactivate page ${e.getPageId()}: not currently active`),!1;this.logger.info(`Deactivating active page: ${e.getPageId()} (${e.getPageInfo().name})`);const t=this.currentActivePage;return this.currentActivePage=null,this.notifyActivePageConsumers(null,t),this.updateHotkeysForActivePage(null,t),!0}getActivePage(){return this.currentActivePage}registerActivePageConsumer(e){if(this.activePageConsumers.add(e),this.logger.debug(`Registered active page consumer (${this.activePageConsumers.size} total)`),this.currentActivePage)try{e.onActivePageChanged(this.currentActivePage,null)}catch(t){this.logger.error("Error in immediate active page consumer notification",t)}return()=>{this.unregisterActivePageConsumer(e)}}unregisterActivePageConsumer(e){this.activePageConsumers.delete(e)&&this.logger.debug(`Unregistered active page consumer (${this.activePageConsumers.size} remaining)`)}notifyActivePageConsumers(e,t){this.activePageConsumers.size!==0&&(this.logger.debug(`Notifying ${this.activePageConsumers.size} consumers of active page change`),this.activePageConsumers.forEach(i=>{try{i.onActivePageChanged(e,t)}catch(s){this.logger.error("Error in active page consumer notification",s)}}))}updateHotkeysForActivePage(e,t){e?this.logger.debug(`Active page context updated for page: ${e.getPageId()}`):this.logger.debug("Active page context cleared (no active page)")}registerService(e,t){if(!e||typeof e!="string"||e.trim()==="")throw new H("Service name must be a non-empty string",e||"unknown","register");if(!t)throw new H("Service instance is required",e,"register");if(typeof t.getServiceId!="function")throw new H("Service must implement the Service interface (getServiceId method missing)",e,"register");const i=t.getServiceId();if(this.serviceRegistry.has(e)){const s=this.serviceRegistry.get(e);this.logger.warn(`Service '${e}' is already registered, replacing existing service`,{existingServiceId:s?.getServiceId(),newServiceId:i})}this.serviceRegistry.set(e,t),this.logger.info(`Service '${e}' registered (${this.serviceRegistry.size} total services)`,{serviceId:i,serviceType:t.constructor?.name||"Unknown"})}getService(e){if(!e||typeof e!="string"||e.trim()==="")return this.logger.warn("Service name must be a non-empty string"),null;const t=this.serviceRegistry.get(e);return t||(this.logger.warn(`Service '${e}' not found`),null)}hasService(e){return!e||typeof e!="string"||e.trim()===""?!1:this.serviceRegistry.has(e)}async unregisterService(e){if(!e||typeof e!="string"||e.trim()==="")return this.logger.warn("Service name must be a non-empty string"),!1;const t=this.serviceRegistry.get(e),i=this.serviceRegistry.delete(e);if(i&&t){if(typeof t.destroy=="function")try{const s=t.destroy();s instanceof Promise&&await s,this.logger.info(`LayoutContext - Service '${e}' destroyed during unregistration`,{serviceId:t.getServiceId()})}catch(s){this.logger.error(`LayoutContext - Service '${e}' destroy failed during unregistration:`,s)}this.logger.info(`LayoutContext - Service '${e}' unregistered (${this.serviceRegistry.size} remaining services)`,{serviceId:t.getServiceId()})}else this.logger.warn(`LayoutContext - Service '${e}' was not registered`);return i}getRegisteredServices(){return new Map(this.serviceRegistry)}getServiceNames(){return Array.from(this.serviceRegistry.keys())}getServiceReference(e,t){return new G(this,e,t)}async initializeServices(){if(this.serviceRegistry.size===0){this.logger.info("No services to initialize");return}this.logger.info(`LayoutContext - Initializing ${this.serviceRegistry.size} services...`);const e=[],t=[];for(const[i,s]of this.serviceRegistry)if(typeof s.init=="function")try{const n=s.init();n instanceof Promise&&e.push(n.catch(r=>{throw t.push({name:i,error:r}),new H(`Service '${i}' initialization failed: ${r.message}`,i,"init")})),this.logger.info(`LayoutContext - Service '${i}' initialized`,{serviceId:s.getServiceId()})}catch(n){t.push({name:i,error:n}),this.logger.error(`LayoutContext - Service '${i}' initialization failed:`,n)}else this.logger.info(`LayoutContext - Service '${i}' has no init method, skipping`,{serviceId:s.getServiceId()});if(e.length>0)try{await Promise.all(e)}catch(i){this.logger.error("LayoutContext - Some services failed to initialize:",i)}t.length>0&&this.logger.warn(`LayoutContext - ${t.length} services had initialization errors:`,t),this.logger.info(`LayoutContext - Service initialization complete (${this.serviceRegistry.size-t.length}/${this.serviceRegistry.size} successful)`)}async destroyServices(){if(this.serviceRegistry.size===0){this.logger.info("No services to destroy");return}this.logger.info(`LayoutContext - Destroying ${this.serviceRegistry.size} services...`);const e=[],t=[],i=Array.from(this.serviceRegistry.entries()).reverse();for(const[s,n]of i)if(typeof n.destroy=="function")try{const r=n.destroy();r instanceof Promise&&e.push(r.catch(a=>{t.push({name:s,error:a}),this.logger.error(`LayoutContext - Service '${s}' destruction failed:`,a)})),this.logger.info(`LayoutContext - Service '${s}' destroyed`,{serviceId:n.getServiceId()})}catch(r){t.push({name:s,error:r}),this.logger.error(`LayoutContext - Service '${s}' destruction failed:`,r)}else this.logger.info(`LayoutContext - Service '${s}' has no destroy method, skipping`,{serviceId:n.getServiceId()});if(e.length>0)try{await Promise.all(e)}catch(s){this.logger.error("LayoutContext - Some services failed to destroy cleanly:",s)}t.length>0&&this.logger.warn(`LayoutContext - ${t.length} services had destruction errors:`,t),this.serviceRegistry.clear(),this.logger.info("Service destruction complete")}fail(e){this.hasFailed=!0,typeof e=="string"?this.failureError=new Error(e):this.failureError=e,this.logger.error("LayoutContext marked as failed",this.failureError);const t=this.failureError.message,i=t.includes("critical")||t.includes("layout"),s=this.getMessages();if(s)s.showError(i?"Critical Error":"Initialization Warning",i?"Application failed to initialize. Please refresh the page.":"Some features may be unavailable. You can continue with limited functionality.");else{const n=this.failureError.stack||"No stack trace";document.body.innerHTML=`
        <div style="text-align: center; padding: 50px; font-family: Arial, sans-serif;">
          <h2>${i?"Critical Error":"Application Error"}</h2>
          <p>${i?"The application cannot start due to a critical error. Please refresh the page or contact support if the issue persists.":"Failed to load some application features. You may continue with limited functionality or refresh the page to try again."}</p>
          <button onclick="window.location.reload()" style="padding: 10px 20px; margin-top: 20px;">Reload Page</button>
          <details style="margin-top: 20px; text-align: left; max-width: 800px; margin-left: auto; margin-right: auto;">
            <summary>Technical Details</summary>
            <pre style="background: #f5f5f5; padding: 10px; overflow: auto;">${n}</pre>
          </details>
        </div>
      `}}failed(){return this.hasFailed}failure(){return this.failureError}destroy(){if(this.logger.info("Destroying..."),this.serviceRegistry.size>0){this.logger.info("Cleaning up services during destroy...");for(const[t,i]of this.serviceRegistry)if(typeof i.destroy=="function")try{i.destroy()instanceof Promise&&this.logger.warn(`LayoutContext - Service '${t}' returned Promise from destroy() during synchronous cleanup - async cleanup may not complete`)}catch(s){this.logger.error(`LayoutContext - Service '${t}' destruction failed during cleanup:`,s)}this.serviceRegistry.clear(),this.logger.info("Service registry cleared")}this.logger.info("Cleaning up EventBus consumers...");let e=0;for(const[t,i]of this.eventBusConsumers){const s=i.filter(n=>n.isActive()).length;i.forEach(n=>{n.isActive()&&(n.unregister(),e++)}),this.logger.info(`LayoutContext - Unregistered ${s} EventBus consumers for component: ${t}`)}if(this.eventBusConsumers.clear(),this.eventBus.removeAllConsumers(),this.logger.info(`LayoutContext - EventBus cleanup complete (${e} consumers unregistered)`),this.currentActivePage=null,this.activePageConsumers.clear(),this.logger.info("Cleaning up chain hotkey system..."),this.chainHotkeyManager)try{this.chainHotkeyManager.destroy(),this.logger.info("Chain hotkey manager destroyed")}catch(t){this.logger.error("Error destroying chain hotkey manager:",t)}this.logger.info("Hotkey system cleanup complete"),this.logger.info("PageContext cleanup - handled by RouterService"),this.isLayoutReady=!1,this.resizeObserver&&(this.resizeObserver.disconnect(),this.resizeObserver=null),this.resizeTimeout&&(clearTimeout(this.resizeTimeout),this.resizeTimeout=null),this.logger.info("Destroyed successfully")}}let Ee=null;function me(){return Ee||(Ee=new pe),Ee}class ri{constructor(e={},t){this.container=null,this.userMenu=null,this.breadcrumbsComponent=null,this.user=null,this.layoutUnsubscribers=[],this.chainProviderUnsubscriber=null,this.isInitialized=!1,this.initTime=null,this.domEventListeners=0,this.updateCount=0,this.logger=f.getInstance().getLogger("AppHeaderImpl"),this.config={brandTitle:e.brandTitle??"Opinion",brandHref:e.brandHref??"/",showMobileToggle:e.showMobileToggle??!0,showBreadcrumbs:e.showBreadcrumbs??!0,showUserMenu:e.showUserMenu??!0},this.logger.info("AppHeaderImpl - Creating clean header with config:",this.config),this.layoutContext=t||me(),this.logger.debug("AppHeaderImpl - Using LayoutContext:",{provided:!!t,contextType:this.layoutContext.constructor.name})}setUserMenuHandler(e){this.userMenuHandler=e}async init(){this.logger.info("AppHeaderImpl - Initializing...");try{await this.createHeader(),await this.waitForDOMReady(),this.logger.debug(`AppHeaderImpl - Current viewport: ${window.innerWidth}px`),await this.initBreadcrumbs(),await this.initUserMenu(),this.setupEventListeners(),this.subscribeToLayoutContext(),this.layoutContext.registerHeader(this),this.config.showUserMenu&&(this.chainProviderUnsubscriber=this.layoutContext.registerChainProvider(this)),this.isInitialized=!0,this.initTime=Date.now(),this.logger.info("AppHeaderImpl - Ready")}catch(e){throw this.logger.error("AppHeaderImpl - Initialization failed:",e),e}}async createHeader(){if(this.container=document.getElementById("app-header"),this.container)this.logger.info("AppHeaderImpl - Using existing element");else{this.container=document.createElement("header"),this.container.id="app-header",this.container.className="app-header";const e=document.createElement("div");e.className="header-container",this.container.appendChild(e);const t=document.querySelector(".app-layout");t?t.insertBefore(this.container,t.firstChild):document.body.insertBefore(this.container,document.body.firstChild),this.logger.info("AppHeaderImpl - Created new header element")}this.finalizeHeaderCreation()}finalizeHeaderCreation(){this.populateContent(),this.logger.info("AppHeaderImpl - Content populated successfully")}populateContent(){if(!this.container)return;let e=this.container.querySelector(".header-container");e||(e=document.createElement("div"),e.className="header-container",this.container.appendChild(e));const t=this.config.showMobileToggle?`
        <button class="mobile-menu-toggle" id="mobile_menu_toggle" aria-label="Toggle Menu" title="Toggle Menu">
          <div class="hamburger-icon">
            <div class="hamburger-line"></div>
            <div class="hamburger-line"></div>
            <div class="hamburger-line"></div>
          </div>
        </button>
    `:"",i=this.config.showBreadcrumbs?`
        <!-- Breadcrumbs container - managed by BreadcrumbsComponent -->
        <div class="header-breadcrumbs" id="breadcrumbs_container">
          <!-- BreadcrumbsComponent will render content here -->
        </div>
    `:"",s=this.config.showUserMenu?`
        <!-- User Menu -->
        <div id="user_menu_container"></div>
    `:"",n=`
      <div class="header-brand">
        <a href="${this.config.brandHref}" class="logo" title="${this.config.brandTitle}">
          <img src="/inqwise-opinion.svg" alt="${this.config.brandTitle}" class="brand-logo" width="24" height="24">
          <span class="brand-text">${this.config.brandTitle}</span>
        </a>
      </div>
    `;e.innerHTML=`
      <!-- Left section: Brand logo and mobile toggle button -->
      <div class="header-left">
        ${n}
        ${t}
      </div>

      <!-- Center section: Enhanced breadcrumbs and page title -->
      <div class="header-center" style="${window.innerWidth<=767?"padding-left: 16px;":"padding-left: 0;"}">
        ${i}
      </div>

      <!-- Right section: User menu only -->
      <div class="header-right">
        ${s}
      </div>
    `}async initBreadcrumbs(){if(!this.config.showBreadcrumbs){this.logger.info("AppHeaderImpl - Breadcrumbs disabled in config, skipping initialization");return}const e=await this.waitForElement("#breadcrumbs_container");e?(this.breadcrumbsComponent=new ti(e,this.layoutContext),await this.breadcrumbsComponent.init(),this.logger.info("AppHeaderImpl - BreadcrumbsComponent initialized")):this.logger.warn("AppHeaderImpl - Breadcrumbs container not found")}async initUserMenu(){if(!this.config.showUserMenu){this.logger.info("AppHeaderImpl - User menu disabled in config, skipping initialization");return}const e=await this.waitForElement("#user_menu_container");e?(this.userMenu=new Zt(e,this.layoutContext),this.userMenuHandler&&this.userMenuHandler(this.userMenu),await this.userMenu.init(),this.logger.info("AppHeaderImpl - UserMenu component initialized (responsive)")):this.logger.warn("AppHeaderImpl - User menu container not found")}setupEventListeners(){this.registerHotkeys(),document.addEventListener("click",e=>{const i=e.target.closest("[data-action]");if(i&&this.container?.contains(i)){const s=i.getAttribute("data-action");this.handleAction(s,i)}}),this.setupMobileMenuHandler()}registerHotkeys(){this.logger.info("AppHeaderImpl - Hotkey setup complete (chain provider already registered in init)")}handleEscapeKey(e){const t=P.createUserMenuRequestEvent("hide","keyboard");this.layoutContext.emit("user-menu-request",t.data),this.logger.info("📡 AppHeaderImpl - ESC key: User menu close request emitted (via LayoutContext hotkey)")}setupMobileMenuHandler(){if(!this.config.showMobileToggle)return;const e=document.getElementById("mobile_menu_toggle");e&&(e.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.logger.info("📱 AppHeaderImpl - Mobile menu toggle clicked");const i=P.createMobileMenuRequestEvent("show","menu-button");this.layoutContext.emit("mobile-menu-request",i.data),this.logger.info("📡 AppHeaderImpl - Mobile menu request event emitted")}),this.domEventListeners++)}handleAction(e,t){if(e)switch(e){case"feedback":this.showFeedbackModal();break;case"logout":this.handleLogoutAction();break;default:this.logger.warn(`Unknown header action: ${e}`)}}async handleLogoutAction(){this.logger.info("😺 AppHeaderImpl - Logout action triggered");try{const{AppHeaderBinderService:e}=await he(async()=>{const{AppHeaderBinderService:s}=await Promise.resolve().then(()=>yi);return{AppHeaderBinderService:s}},void 0),i=await e.getRegisteredReference(this.layoutContext,{enableLogging:!1,maxRetries:5}).get();i?(await i.handleLogoutAction(),this.logger.info("✅ AppHeaderImpl - Logout action completed successfully")):(this.logger.warn("⚠️ AppHeaderImpl - AppHeaderBinderService not available for logout"),window.location.href="/logout")}catch(e){this.logger.error("❌ AppHeaderImpl - Error handling logout action:",e),window.location.href="/logout"}}showFeedbackModal(){confirm(`Thank you for your interest in providing feedback!

This would typically open a feedback form or modal dialog where you could submit your comments and suggestions.`+`

Would you like to be redirected to our feedback page?`)&&this.logger.info("Redirecting to feedback page...")}updateUser(e){this.user=e,this.updateCount++,this.logger.info(`AppHeaderImpl - updateUser called: ${e.username}`),this.userMenu?(this.userMenu.updateUser({username:e.username,email:e.email,avatar:e.avatar}),this.logger.info("AppHeaderImpl - User updated via UserMenu")):this.logger.warn("AppHeaderImpl - UserMenu not available for user update")}updateUserMenuItems(e){this.logger.info(`AppHeaderImpl - updateUserMenuItems called with ${e.length} items`),this.userMenu?(this.userMenu.updateMenuItems(e),this.logger.info("AppHeaderImpl - User menu items updated via UserMenu")):this.logger.warn("AppHeaderImpl - UserMenu not available for menu items update")}updateBrand(e,t){const i=e??this.config.brandTitle,s=t??this.config.brandHref,n=this.container?.querySelector(".logo");if(n){n.href=s,n.title=i;const r=n.querySelector(".brand-text");r&&(r.textContent=i);const a=n.querySelector(".brand-logo");a&&a.tagName?.toLowerCase()==="img"&&a.setAttribute("alt",i),this.logger.info(`AppHeaderImpl - Brand updated: "${i}" -> ${s}`)}}setBreadcrumbItems(e){if(this.breadcrumbsComponent)if(this.breadcrumbsComponent.setBreadcrumbs(e),e.length>0){const t=e.map(i=>i.text).reverse();document.title=`${t.join(" - ")} - Opinion`}else document.title="Opinion";else this.logger.warn("AppHeaderImpl - BreadcrumbsComponent not initialized")}getBreadcrumbsComponent(){return this.breadcrumbsComponent}setVisible(e){this.container&&(this.container.style.display=e?"block":"none")}getConfig(){return{...this.config}}async waitForDOMReady(){return document.readyState==="loading"?new Promise(e=>{document.addEventListener("DOMContentLoaded",()=>e(),{once:!0})}):Promise.resolve()}async waitForElement(e,t=5e3){const i=document.querySelector(e);return i||new Promise(s=>{const n=new MutationObserver(()=>{const r=document.querySelector(e);r&&(n.disconnect(),s(r))});n.observe(document.body,{childList:!0,subtree:!0}),setTimeout(()=>{n.disconnect(),s(null)},t)})}updateHeaderLayout(e){if(!this.container){this.logger.warn("AppHeaderImpl - Cannot update layout: container not available");return}this.container.style.left="",this.container.style.width="",this.container.style.right="";const i=e.getSidebar()?.isCompactMode()||!1;this.container.classList.toggle("header-sidebar-compact",i&&!e.isLayoutMobile()),this.container.classList.toggle("header-sidebar-normal",!i&&!e.isLayoutMobile()),this.container.classList.toggle("header-mobile",e.isLayoutMobile());const s=new CustomEvent("header-layout-updated",{detail:{layoutContext:e}});document.dispatchEvent(s),this.logger.info("✅ AppHeaderImpl - Layout updated")}subscribeToLayoutContext(){this.logger.info("AppHeaderImpl - Subscribing to layout context events...");const e=this.layoutContext.subscribe("layout-mode-change",i=>{this.logger.info("AppHeaderImpl - Received layout mode change",i.data),this.updateHeaderLayout(this.layoutContext)});this.layoutUnsubscribers.push(e);const t=this.layoutContext.subscribe("sidebar-compact-mode-change",i=>{this.logger.info("AppHeaderImpl - Received sidebar compact mode change",i.data),this.updateHeaderLayout(this.layoutContext)});this.layoutUnsubscribers.push(t),this.updateHeaderLayout(this.layoutContext),this.logger.info("AppHeaderImpl - Successfully subscribed to layout context events ✅")}destroy(){this.logger.info("AppHeaderImpl - Destroying..."),this.layoutUnsubscribers.forEach(e=>{try{e()}catch(t){this.logger.error("AppHeaderImpl - Error unsubscribing from layout context:",t)}}),this.layoutUnsubscribers=[],this.cleanupChainProvider(),this.logger.info("AppHeaderImpl - Chain hotkey provider cleaned up"),this.userMenu&&(this.userMenu.destroy(),this.userMenu=null),this.container&&this.container.remove(),this.container=null,this.user=null}getSidebar(){return this.layoutContext.getSidebar()}updatePosition(){this.updateHeaderLayout(this.layoutContext)}getHotkeyProviderId(){return"AppHeaderImpl"}getProviderPriority(){return 600}getChainHotkeys(){if(!this.config.showUserMenu||!this.userMenu)return null;const e=new Map;return e.set("Escape",{key:"Escape",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.handleEscapeKeyChain(t)},description:"Close user menu via chain system",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.config.showUserMenu&&!!this.userMenu}),e}getDefaultChainBehavior(){return"next"}handleEscapeKeyChain(e){if(this.logger.info("🎯 AppHeaderImpl - ESC key pressed via chain system"),this.shouldHandleEscapeKey()){const t=P.createUserMenuRequestEvent("hide","keyboard");this.layoutContext.emit("user-menu-request",t.data),e.preventDefault(),this.logger.info("📡 AppHeaderImpl - ESC handled: User menu close request emitted"),e.hasProvider("ModalDialog")||e.hasProvider("MobileSidebar")?e.next():e.break()}else e.next()}shouldHandleEscapeKey(){return this.config.showUserMenu&&!!this.userMenu}getStatus(){const e=this.container?{width:this.container.offsetWidth,height:this.container.offsetHeight,offsetTop:this.container.offsetTop,offsetLeft:this.container.offsetLeft}:void 0,t=[],i=[];this.container||t.push("DOM container element not found"),this.config.showUserMenu&&!this.userMenu&&i.push("User menu enabled but not initialized"),this.layoutUnsubscribers.length===0&&i.push("No layout event subscriptions active");const s=Date.now(),n=this.initTime?s-this.initTime:0;return{componentType:"AppHeaderImpl",id:"app-header",initialized:this.isInitialized,initTime:this.initTime,uptime:n,domElement:this.container?{tagName:this.container.tagName,id:this.container.id,className:this.container.className,childCount:this.container.children.length,hasContent:this.container.children.length>0,isVisible:this.container.style.display!=="none",ariaLabel:this.container.getAttribute("aria-label")||void 0,role:this.container.getAttribute("role")||void 0,dimensions:e}:void 0,eventListeners:{domEvents:this.domEventListeners,layoutSubscriptions:this.layoutUnsubscribers.length,eventBusSubscriptions:this.chainProviderUnsubscriber?1:0},configuration:{brandTitle:this.config.brandTitle,brandHref:this.config.brandHref,showMobileToggle:this.config.showMobileToggle,showBreadcrumbs:this.config.showBreadcrumbs,showUserMenu:this.config.showUserMenu},currentState:{userMenuInitialized:!!this.userMenu,userSet:!!this.user,updateCount:this.updateCount,containerVisible:this.container?this.container.style.display!=="none":!1},performance:{updateCount:this.updateCount,lastUpdate:this.user?Date.now():void 0},issues:t.length>0||i.length>0?t.concat(i):void 0,customData:{chainHotkeyProvider:{registered:!!this.chainProviderUnsubscriber,providerId:this.getHotkeyProviderId(),priority:this.getProviderPriority(),hotkeyCount:this.getChainHotkeys()?.size||0},userMenuConfig:{enabled:this.config.showUserMenu,instance:!!this.userMenu,userSet:!!this.user,userName:this.user?.username}}}}cleanupChainProvider(){this.chainProviderUnsubscriber&&(this.chainProviderUnsubscriber(),this.chainProviderUnsubscriber=null,this.logger.info("AppHeaderImpl - Chain provider unregistered"))}}class ai{constructor(e={},t){this.container=null,this.elements={},this.layoutUnsubscribers=[],this.isInitialized=!1,this.initTime=null,this.navigationClickCount=0,this.layoutUpdateCount=0,this.lastActionTime=null,this.domEventListenerCount=0,this.config={showCopyright:!0,copyrightText:"created by inqwise",showNavigation:!0,navigationLinks:[{href:"/create-bug-report",title:"Report a Bug",text:"Report a Bug"}],...e},this.layoutContext=t||me(),this.logger=f.getInstance().getLogger("AppFooterImpl")}async init(){this.logger.info("AppFooter - Initializing..."),await this.createFooter(),this.cacheElements(),this.setupEventListeners(),this.layoutContext.registerFooter(this),this.subscribeToLayoutContext(),this.initTime=Date.now(),this.isInitialized=!0,this.logger.info("AppFooter - Ready")}async createFooter(){if(this.container=document.getElementById("app-footer"),!this.container)return new Promise((e,t)=>{setTimeout(()=>{if(this.container=document.getElementById("app-footer"),!this.container){this.logger.error("AppFooter: #app-footer element not found in DOM. Available elements:",Array.from(document.querySelectorAll("[id]")).map(i=>i.id)),t(new Error("AppFooter: Could not find existing #app-footer element"));return}this.finalizeFooterCreation(),e()},100)});this.logger.info("AppFooter - Using existing element"),this.finalizeFooterCreation()}finalizeFooterCreation(){this.populateContent(),this.logger.info("AppFooter - Content populated successfully")}populateContent(){if(!this.container)return;const e=this.container.querySelector(".footer-container");e&&(e.innerHTML=this.buildFooterContent())}buildFooterContent(){const e=this.config.showNavigation?this.buildNavigationHtml():"",t=this.config.showCopyright?this.buildCopyrightHtml():"";return`
      <div class="footer-content">
        ${e}
        ${t}
      </div>
    `}buildFooterHtml(){const e=this.config.showNavigation?this.buildNavigationHtml():"",t=this.config.showCopyright?this.buildCopyrightHtml():"";return`
      <div class="footer-container">
        <div class="footer-content">
          ${e}
          ${t}
        </div>
      </div>
    `}buildNavigationHtml(){return this.config.navigationLinks?.length?`
      <nav class="footer-navigation" aria-label="Footer">
        <div class="footer-navigation-left-panel">
          <ul class="footer-nav-list">
            ${this.config.navigationLinks.map(t=>`
        <li class="footer-nav-item">
          <a class="footer-nav-link" href="${t.href}" title="${t.title}">${t.text}</a>
        </li>
      `).join("")}
          </ul>
        </div>
        <div class="footer-navigation-right-panel"></div>
      </nav>
    `:""}buildCopyrightHtml(){return`
      <div class="footer-copyright-section">
        <small class="footer-copyright-text" id="footer_copyright_text">${this.config.copyrightText}</small>
      </div>
    `}cacheElements(){this.elements={navigationPanel:this.container?.querySelector(".footer-navigation-left-panel"),copyrightSection:this.container?.querySelector(".footer-copyright-section"),copyrightText:this.container?.querySelector(".footer-copyright-text")}}setupEventListeners(){this.domEventListenerCount=0,this.elements.navigationPanel&&(this.elements.navigationPanel.addEventListener("click",e=>{const t=e.target;t.tagName==="A"&&this.handleNavigationClick(t,e)}),this.domEventListenerCount++)}handleNavigationClick(e,t){const i=e.getAttribute("href");this.navigationClickCount++,this.lastActionTime=Date.now(),i==="/create-bug-report"&&this.logger.info("Footer navigation: Report a Bug clicked")}setVisible(e){this.container&&(this.container.style.display=e?"block":"none")}subscribeToLayoutContext(){this.logger.info("AppFooter - Subscribing to layout context events...");const e=this.layoutContext.subscribe("layout-mode-change",this.handleLayoutModeChange.bind(this));this.layoutUnsubscribers.push(e),this.updateFooterLayout(),this.logger.info("AppFooter - Successfully subscribed to layout context events ✅")}handleLayoutModeChange(e){const t=e.data;this.logger.info("AppFooter - Received layout mode change:",t),this.updateFooterLayout()}updateFooterLayout(){if(!this.container)return;this.layoutUpdateCount++,this.lastActionTime=Date.now();const e=this.layoutContext.getModeType(),i=this.layoutContext.getSidebar()?.isCompactMode()||!1,s=e==="mobile";this.logger.info("AppFooter - Updating layout for layout mode:",{type:e,isCompact:i,isMobile:s}),this.container.classList.toggle("footer-sidebar-compact",i&&!s),this.container.classList.toggle("footer-sidebar-normal",!i&&!s),this.container.classList.toggle("footer-mobile",s),this.container.style.left="",this.container.style.width="",this.container.style.marginLeft="",this.elements.copyrightText&&(this.elements.copyrightText.style.display="block");const n=new CustomEvent("footer-layout-updated",{detail:{layoutMode:{type:e,isCompact:i,isMobile:s},footerElement:this.container}});document.dispatchEvent(n),this.logger.info("AppFooter - Layout updated:",{layoutMode:{type:e,isCompact:i,isMobile:s},cssClasses:Array.from(this.container.classList).filter(r=>r.startsWith("footer-"))})}getContainer(){return this.container}getCopyrightElement(){return this.elements.copyrightText||null}getStatus(){const e=Date.now(),t=this.config.navigationLinks&&this.config.navigationLinks.length>0;return{componentType:"AppFooterImpl",id:"app-footer",initialized:this.isInitialized,initTime:this.initTime,uptime:this.initTime?e-this.initTime:0,domElement:this.container?{tagName:this.container.tagName,id:this.container.id,className:this.container.className,childCount:this.container.children.length,hasContent:this.container.children.length>0,isVisible:this.container.style.display!=="none",ariaLabel:this.container.getAttribute("aria-label")||void 0,role:this.container.getAttribute("role")||void 0}:void 0,eventListeners:{domEventListeners:this.domEventListenerCount,layoutSubscriptions:this.layoutUnsubscribers.length},configuration:{...this.config,hasNavigationLinks:t,navigationLinksCount:this.config.navigationLinks?.length||0},currentState:{navigationClickCount:this.navigationClickCount,layoutUpdateCount:this.layoutUpdateCount,lastActionTime:this.lastActionTime,lastActionAgo:this.lastActionTime?e-this.lastActionTime:null,layoutModeType:this.layoutContext?.getModeType(),isLayoutMobile:this.layoutContext?.isLayoutMobile(),sidebarCompactMode:this.layoutContext?.getSidebar()?.isCompactMode(),elementsCache:{navigationPanel:!!this.elements.navigationPanel,copyrightSection:!!this.elements.copyrightSection,copyrightText:!!this.elements.copyrightText}},performance:{initDuration:this.initTime?50:null},issues:this.getIssues(),customData:{navigationLinks:this.config.navigationLinks?.map(i=>({href:i.href,title:i.title,text:i.text}))||[],cssClasses:this.container?Array.from(this.container.classList):[],elementsFound:{container:!!this.container,navigationPanel:!!this.elements.navigationPanel,copyrightSection:!!this.elements.copyrightSection,copyrightText:!!this.elements.copyrightText}}}}getIssues(){const e=[];return this.isInitialized||e.push("Component not initialized"),this.container||e.push("DOM container element missing"),this.layoutContext||e.push("LayoutContext not available"),this.config.showNavigation&&(!this.config.navigationLinks||this.config.navigationLinks.length===0)&&e.push("Navigation enabled but no navigation links configured"),this.config.showCopyright&&!this.config.copyrightText&&e.push("Copyright enabled but no copyright text configured"),!this.elements.copyrightText&&this.config.showCopyright&&e.push("Copyright text element not found in DOM"),!this.elements.navigationPanel&&this.config.showNavigation&&e.push("Navigation panel element not found in DOM"),this.layoutUnsubscribers.length===0&&this.isInitialized&&e.push("No layout subscriptions active (possible memory leak or initialization issue)"),e}destroy(){this.logger.info("AppFooter - Destroying..."),this.layoutUnsubscribers.forEach(e=>{try{e()}catch(t){this.logger.error("AppFooter - Error unsubscribing from layout context:",t)}}),this.layoutUnsubscribers=[],this.container&&this.container.remove(),this.container=null,this.elements={}}}class lt{constructor(){this._initialized=!1,this._destroyed=!1,this.logger=f.getInstance().getLogger(this.constructor.name)}async onBeforeInit(){}onPostInit(){}async onBeforeDestroy(){}async onAfterDestroy(){}async init(){if(this._initialized||this._destroyed){this.logger.warn("Cannot initialize - already initialized or destroyed");return}try{await this.onBeforeInit(),await this.onInit(),this._initialized=!0,await this.onPostInit()}catch(e){throw this.logger.error("Initialization failed",e),e}}async destroy(){if(this._destroyed){this.logger.warn("Already destroyed");return}try{await this.onBeforeDestroy(),this.onDestroy(),this._destroyed=!0,this._initialized=!1,await this.onAfterDestroy()}catch(e){throw this.logger.error("Destruction failed",e),e}}isComponentInitialized(){return this._initialized}isComponentDestroyed(){return this._destroyed}}class li extends lt{constructor(e={},t){super(),this.container=null,this.isInitialized=!1,this.layoutUnsubscribers=[],this.initTime=null,this.contentUpdateCount=0,this.lastContentUpdate=null,this.config={className:"app-main main-content",id:"app",...e},this.layoutContext=t||me(),this.logger.info("MainContent - Creating clean component with Flexbox layout...",t?"(using provided LayoutContext)":"(using global LayoutContext)")}async onInit(){this.logger.info("MainContent - Initializing..."),await this.createMainElement(),this.subscribeToLayoutContext(),this.layoutContext.registerMainContent(this),this.initTime=Date.now(),this.isInitialized=!0,this.logger.info("MainContent - Ready ✅")}async createMainElement(){this.container=document.querySelector(".app-main"),this.container?(this.logger.info("MainContent - Using existing app-main element"),this.container.innerHTML="",this.container.classList.add("main-content"),this.config.id&&this.config.id!=="app"&&(this.container.id=this.config.id)):(this.logger.info("MainContent - Creating new main element (fallback)"),this.container=document.createElement("main"),this.config.id&&(this.container.id=this.config.id),this.config.className&&(this.container.className=this.config.className),this.insertIntoLayout()),this.config.role&&this.container.setAttribute("role",this.config.role),this.config.ariaLabel?this.container.setAttribute("aria-label",this.config.ariaLabel):this.container.setAttribute("aria-label","Main content"),this.logger.info("MainContent - Main element ready")}insertIntoLayout(){const e=document.querySelector(".app-layout");if(e){const t=e.querySelector(".app-header"),i=e.querySelector(".app-footer");t&&i?(e.insertBefore(this.container,i),this.logger.info("MainContent - Inserted between header and footer in app-layout")):t?(t.nextSibling?e.insertBefore(this.container,t.nextSibling):e.appendChild(this.container),this.logger.info("MainContent - Inserted after header in app-layout")):(e.appendChild(this.container),this.logger.info("MainContent - Appended to app-layout"))}else document.body.appendChild(this.container),this.logger.info("MainContent - Fallback: Appended to body (app-layout not found)")}setContent(e){if(!this.container){this.logger.warn("MainContent - Cannot set content: not initialized");return}typeof e=="string"?this.container.innerHTML=e:(this.container.innerHTML="",this.container.appendChild(e)),this.contentUpdateCount++,this.lastContentUpdate=Date.now(),this.logger.info("MainContent - Content updated")}clearContent(){if(!this.container){this.logger.warn("MainContent - Cannot clear content: not initialized");return}this.container.innerHTML="",this.contentUpdateCount++,this.lastContentUpdate=Date.now(),this.logger.info("MainContent - Content cleared")}getElement(){if(this.container===null)throw new Error("MainContent element is not available");return this.container}isReady(){return this.isInitialized&&this.container!==null}getLayoutContext(){return this.layoutContext}show(){this.container&&(this.container.style.display="",this.container.removeAttribute("aria-hidden"))}hide(){this.container&&(this.container.style.display="none",this.container.setAttribute("aria-hidden","true"))}setLoading(e){if(this.container)if(e){if(this.container.classList.add("loading"),this.container.setAttribute("aria-busy","true"),!this.container.querySelector(".loading-indicator")){const t=document.createElement("div");t.className="loading-indicator",t.innerHTML=`
          <div class="loading-spinner" aria-label="Loading content...">
            <div class="spinner"></div>
            <span class="loading-text">Loading...</span>
          </div>
        `,this.container.appendChild(t)}}else{this.container.classList.remove("loading"),this.container.removeAttribute("aria-busy");const t=this.container.querySelector(".loading-indicator");t&&t.remove()}}setError(e){if(this.container)if(e){if(this.container.classList.add("error"),!this.container.querySelector(".error-message")){const t=document.createElement("div");t.className="error-message",t.innerHTML=`
          <div class="error-content" role="alert" aria-live="assertive">
            <h2>Error</h2>
            <p>${e}</p>
            <button class="retry-button" onclick="window.location.reload()">
              Try Again
            </button>
          </div>
        `,this.container.appendChild(t)}}else{this.container.classList.remove("error");const t=this.container.querySelector(".error-message");t&&t.remove()}}subscribeToLayoutContext(){this.logger.info("MainContent - Subscribing to layout context events...");const e=this.layoutContext.subscribe("sidebar-compact-mode-change",this.handleSidebarDimensionsChange.bind(this));this.layoutUnsubscribers.push(e),this.updateContentLayout(),this.logger.info("MainContent - Successfully subscribed to layout context events ✅")}handleSidebarDimensionsChange(e){const t=e.data;this.logger.info("MainContent - Received sidebar dimensions change to:",t?"'compact'":"'expanded'"),this.updateContentLayout()}updateContentLayout(){if(!this.container)return;const t=this.layoutContext.getSidebar()?.isCompactMode(),i=this.layoutContext.getModeType(),s=this.layoutContext.isLayoutMobile();this.logger.info("MainContent - Updating layout:",{sidebarCompactMode:t,layoutModeType:i}),this.container.classList.toggle("content-sidebar-compact",t&&!s),this.container.classList.toggle("content-sidebar-normal",!t&&!s),this.container.classList.toggle("content-mobile",s),this.container.style.left="",this.container.style.width="",this.container.style.marginLeft="",this.logger.info("MainContent - Layout updated:",{layoutMode:{type:i,sidebarCompactMode:t},cssClasses:Array.from(this.container.classList).filter(n=>n.startsWith("content-"))})}getStatus(){const e=Date.now(),t=this.container?.querySelector(":not(.loading-indicator):not(.error-message)"),i=t&&(t.children.length>0||t.textContent?.trim());return{componentType:"MainContent",id:"main-content",initialized:this.isInitialized,initTime:this.initTime,uptime:this.initTime?e-this.initTime:0,domElement:this.container?{tagName:this.container.tagName,id:this.container.id,className:this.container.className,childCount:this.container.children.length,hasContent:!!i,isVisible:this.container.style.display!=="none",ariaLabel:this.container.getAttribute("aria-label")||void 0,role:this.container.getAttribute("role")||void 0}:void 0,eventListeners:{layoutSubscriptions:this.layoutUnsubscribers.length},configuration:{...this.config},currentState:{contentUpdateCount:this.contentUpdateCount,lastContentUpdate:this.lastContentUpdate,lastContentUpdateAgo:this.lastContentUpdate?e-this.lastContentUpdate:null,isLoading:this.container?.classList.contains("loading")||!1,hasError:this.container?.classList.contains("error")||!1,layoutModeType:this.layoutContext?.getModeType(),isLayoutMobile:this.layoutContext?.isLayoutMobile(),sidebarCompactMode:this.layoutContext?.getSidebar()?.isCompactMode()},performance:{initDuration:this.initTime?this.initTime-(this.initTime-50):null},issues:this.getIssues(),customData:{layoutUnsubscribers:this.layoutUnsubscribers.length,cssClasses:this.container?Array.from(this.container.classList):[],contentElements:this.container?{total:this.container.children.length,loadingIndicator:!!this.container.querySelector(".loading-indicator"),errorMessage:!!this.container.querySelector(".error-message")}:void 0}}}getIssues(){const e=[];return this.isInitialized||e.push("Component not initialized"),this.container||e.push("DOM container element missing"),this.container?.classList.contains("error")&&e.push("Component is in error state"),this.layoutContext||e.push("LayoutContext not available"),this.layoutUnsubscribers.length===0&&this.isInitialized&&e.push("No layout subscriptions active (possible memory leak or initialization issue)"),e}onDestroy(){this.logger.info("MainContent - Destroying..."),this.layoutUnsubscribers.forEach(e=>{try{e()}catch(t){this.logger.error("MainContent - Error unsubscribing from layout context:",t)}}),this.layoutUnsubscribers=[],this.container&&(this.container.remove(),this.container=null),this.isInitialized=!1,this.logger.info("MainContent - Destroyed successfully")}}var Je={baseUrl:"/opinion-front-ui/pr-34",enableSpaRouting:!0,environment:"production",enableDebugLogging:!1};const ci={development:{baseUrl:"",enableSpaRouting:!1,environment:"development",enableDebugLogging:!0}};function di(){return typeof Je<"u"?Je:ci.development}const se=di(),q={baseUrl:se.baseUrl,environment:se.environment,enableSpaRouting:se.enableSpaRouting,enableDebugLogging:se.enableDebugLogging,homepagePageId:"dashboard"};function ee(o){const e=o.startsWith("/")?o:"/"+o;return q.baseUrl?q.baseUrl+e:e}function Ie(o){return q.baseUrl&&o.startsWith(q.baseUrl)?o.slice(q.baseUrl.length)||"/":o}function ui(o){return o===q.homepagePageId}class gi{constructor(e={},t){this.sidebar=null,this.isInitialized=!1,this.navigationItems=[],this.compactMode=!1,this.compactModeListeners=[],this.chainProviderUnsubscriber=null,this.initTime=null,this.navigationUpdateCount=0,this.compactModeToggleCount=0,this.mobileMenuToggleCount=0,this.lastActionTime=null,this.domEventListenerCount=0,this.config={defaultWidth:e.defaultWidth??280,compactWidth:e.compactWidth??80,footer:{text:e.footer?.text??"© 2025 Opinion",showFooter:e.footer?.showFooter??!0}},this.logger=f.getInstance().getLogger("SidebarComponent"),this.logger.info("Sidebar - Creating sidebar with config:",this.config),this.layoutContext=t||me(),this.setupDefaultNavigation()}isVisible(){return!this.layoutContext.isLayoutMobile()||this.isLocked()}setToggleCompactModeHandler(e){this.toggleCompactModeHandler=e}getConfig(){return{...this.config}}async init(){if(this.logger.info("Sidebar - Initializing..."),this.isInitialized){this.logger.warn("Sidebar - Already initialized");return}this.createSidebar(),this.setupEventListeners(),this.setupLayoutModeSubscriptions(),this.initializeFromLayoutMode(),this.layoutContext.registerSidebar(this),this.chainProviderUnsubscriber=this.layoutContext.registerChainProvider(this),this.initTime=Date.now(),this.isInitialized=!0,this.logger.info("Sidebar - Ready ✅")}setupDefaultNavigation(){this.navigationItems=[{id:"dashboard",text:"Dashboard",icon:"dashboard",href:"/dashboard",caption:"View analytics, reports and key metrics",active:!1},{id:"surveys",text:"Surveys",icon:"poll",href:"/surveys",caption:"Create and manage survey questionnaires"},{id:"debug",text:"Debug",icon:"bug_report",href:"/",caption:"Development tools and troubleshooting",active:!1}]}createSidebar(){if(this.sidebar=document.getElementById("app-sidebar"),!this.sidebar){if(this.sidebar=document.getElementById("app-sidebar"),!this.sidebar)throw this.logger.error("Sidebar: #app-sidebar element not found in DOM. Available elements:",Array.from(document.querySelectorAll("[id]")).map(e=>e.id)),new Error("Sidebar: Could not find existing #app-sidebar element");this.finalizeSidebarCreation();return}this.logger.info("Sidebar - Using existing element"),this.finalizeSidebarCreation()}finalizeSidebarCreation(){this.populateContent(),this.logger.info("Sidebar - Content populated successfully")}populateContent(){if(!this.sidebar)return;const e=this.sidebar.querySelector(".sidebar-header");e&&(e.innerHTML=`
        <div class="sidebar-brand">
          <a href="${ee("/")}" class="brand-title-link">
            <img src="/inqwise-opinion.svg" alt="Opinion" class="brand-logo-sidebar" width="24" height="24">
            <h1 class="brand-title">Opinion</h1>
          </a>
        </div>
        <div class="sidebar-controls">
          <!-- Desktop/Tablet compact toggle button -->
          <button class="compact-toggle-btn"
                  type="button"
                  aria-label="${this.compactMode?"Expand sidebar":"Compact sidebar"}"
                  data-compact="${this.compactMode}">
            <span class="material-icons compact-icon">
              ${this.compactMode?"keyboard_double_arrow_right":"keyboard_double_arrow_left"}
            </span>
          </button>

          <!-- Mobile close button -->
          <button class="mobile-close-btn"
                  type="button"
                  aria-label="Close menu">
            <span class="material-icons" style="font-size: 20px;">close</span>
          </button>
        </div>
      `);const t=this.sidebar.querySelector(".sidebar-navigation");t&&(t.innerHTML=`
        <ul class="nav-list" role="menubar">
          ${this.renderNavigationItems(this.navigationItems)}
        </ul>
      `);const i=this.sidebar.querySelector(".sidebar-footer");i&&this.config.footer.showFooter?i.innerHTML=`
        <p class="copyright-text">${this.config.footer.text}</p>
      `:i&&!this.config.footer.showFooter&&(i.style.display="none")}renderNavigationItems(e){return e.map(t=>{const i=t.active?"nav-link-active":"",s=t.active?'aria-current="page"':"",n=t.badge?`<span class="nav-badge">${t.badge}</span>`:"";if(t.expandable&&t.children)return`
          <li class="nav-item nav-item-expandable">
            <button class="nav-link nav-link-expandable ${i}"
                    data-nav-id="${t.id}"
                    data-expandable="true"
                    aria-expanded="${t.expanded?"true":"false"}"
                    role="menuitem"
                    tabindex="0">
              <span class="nav-icon material-icons" data-icon="${t.icon}">${t.icon}</span>
              <span class="nav-text">${t.text}</span>
              ${n}
              <span class="nav-arrow material-icons">expand_more</span>
            </button>
            <ul class="nav-submenu" aria-expanded="${t.expanded?"true":"false"}" role="menu">
              ${t.children.map(r=>`
                  <li class="nav-subitem">
                    <a class="nav-sublink ${r.active?"nav-sublink-active":""}"
                       href="${ee(r.href)}"
                       data-nav-id="${r.id}"
                       role="menuitem"
                       ${r.active?'aria-current="page"':""}>
                      <span class="nav-subicon material-icons">${r.icon}</span>
                      <span class="nav-subtext">${r.text}</span>
                    </a>
                  </li>
                `).join("")}
            </ul>
          </li>
        `;{const r=t.caption?`<span class="nav-caption">${t.caption}</span>`:"";return`
          <li class="nav-item">
            <a class="nav-link ${i}"
               href="${ee(t.href)}"
               data-nav-id="${t.id}"
               role="menuitem"
               ${s}
               tabindex="0">
              <span class="nav-icon material-icons" data-icon="${t.icon}">${t.icon}</span>
              <div class="nav-content">
                <span class="nav-text">${t.text}</span>
                ${r}
              </div>
              ${n}
            </a>
          </li>
        `}}).join("")}setupEventListeners(){this.sidebar&&(this.domEventListenerCount=0,this.sidebar.addEventListener("click",e=>{const i=e.target.closest('[data-expandable="true"]');i&&(e.preventDefault(),this.toggleExpandable(i))}),this.sidebar.addEventListener("click",e=>{if(e.target.closest(".compact-toggle-btn")){if(e.preventDefault(),e.stopPropagation(),this.isLocked()&&!this.compactMode){this.logger.info("Sidebar - Toggle blocked: sidebar is locked in expanded mode");return}this.toggleCompactMode();return}}),this.sidebar.addEventListener("click",e=>{if(e.target.closest(".mobile-close-btn")){e.preventDefault(),e.stopPropagation(),this.logger.info("📱 Sidebar - Mobile close button clicked"),this.hideMobileMenu("close-button");return}}),this.sidebar.addEventListener("click",e=>{const i=e.target.closest("a[href]");i&&i.href.startsWith(window.location.origin)&&(this.logger.info("Sidebar - Navigation link clicked:",i.href),this.setActiveItem(i.getAttribute("data-nav-id")||""))}),this.domEventListenerCount=4)}toggleExpandable(e){const t=e.getAttribute("data-nav-id"),i=e.getAttribute("aria-expanded")==="true",s=e.nextElementSibling;if(s){e.setAttribute("aria-expanded",(!i).toString()),s.setAttribute("aria-expanded",(!i).toString());const n=this.navigationItems.find(r=>r.id===t);n&&(n.expanded=!i),this.logger.info(`Sidebar - Toggled ${t} expandable: ${!i}`)}}setActiveItem(e){if(!this.sidebar)return;this.sidebar.querySelectorAll(".nav-link-active, .nav-sublink-active").forEach(i=>{i.classList.remove("nav-link-active","nav-sublink-active"),i.removeAttribute("aria-current")});const t=this.sidebar.querySelector(`[data-nav-id="${e}"]`);t&&(t.classList.contains("nav-link")?(t.classList.add("nav-link-active"),t.setAttribute("aria-current","page")):t.classList.contains("nav-sublink")&&(t.classList.add("nav-sublink-active"),t.setAttribute("aria-current","page")),this.navigationItems.forEach(i=>{i.active=i.id===e,i.children&&i.children.forEach(s=>{s.active=s.id===e})}),this.logger.info(`Sidebar - Set active item: ${e}`))}updateNavigation(e){if(this.navigationItems=e,this.sidebar&&this.isInitialized){const t=this.sidebar.querySelector(".nav-list");t&&(t.innerHTML=this.renderNavigationItems(this.navigationItems),this.navigationUpdateCount++,this.lastActionTime=Date.now(),this.logger.info("Sidebar - Navigation updated"))}}setActivePage(e){if(!e)throw new Error("SidebarComponent.setActivePage: navId parameter is required");if(!this.isInitialized)throw new Error("SidebarComponent.setActivePage: Sidebar not initialized. Call init() first.");this.logger.info(`📍 Sidebar - setActivePage called with: ${e}`),this.setActiveItem(e)}updateFooterText(e){if(this.config.footer.text=e,this.sidebar&&this.isInitialized){const i=this.sidebar.querySelector(".sidebar-footer")?.querySelector(".copyright-text");i&&this.config.footer.showFooter&&(i.textContent=e,this.logger.info(`Sidebar - Footer text updated to: "${e}"`))}}setFooterVisibility(e){if(this.config.footer.showFooter=e,this.sidebar&&this.isInitialized){const t=this.sidebar.querySelector(".sidebar-footer");if(t){const i=t;e?(i.style.display="",i.innerHTML=`
            <p class="copyright-text">${this.config.footer.text}</p>
          `,this.logger.info("Sidebar - Footer shown")):(i.style.display="none",this.logger.info("Sidebar - Footer hidden"))}}}isCompactMode(){return this.compactMode}setCompactMode(e){const t=this.compactMode;if(this.layoutContext.isLayoutMobile()){this.logger.info("📱 Sidebar - Compact mode blocked on mobile (uses overlay mode instead)"),this.emitCompactModeChangeEvent(!1,t,"mobile-layout");return}if(e&&this.isLocked()){this.logger.info("🔒 Sidebar - Compact mode blocked (sidebar is locked in expanded mode)"),this.emitCompactModeChangeEvent(!1,t,"sidebar-locked");return}if(this.compactMode!==e){this.logger.info(`🔄 Sidebar - Compact mode changing: ${this.compactMode?"compact":"expanded"} → ${e?"compact":"expanded"}`),this.compactMode=e,this.compactModeToggleCount++,this.lastActionTime=Date.now(),this.sidebar&&(e?this.sidebar.classList.add("sidebar-compact"):this.sidebar.classList.remove("sidebar-compact"));const i=document.querySelector(".app-layout");i&&(e?i.classList.add("sidebar-compact"):i.classList.remove("sidebar-compact")),this.updateCompactToggleButton(),this.emitCompactModeChangeEvent(e,t),this.notifyCompactModeChange(e),this.logger.info(`✅ Sidebar - Compact mode ${e?"enabled":"disabled"}`)}}onCompactModeChange(e){return this.compactModeListeners.push(e),()=>{const t=this.compactModeListeners.indexOf(e);t>-1&&this.compactModeListeners.splice(t,1)}}notifyCompactModeChange(e){this.compactModeListeners.forEach(t=>{try{t(e)}catch(i){this.logger.error("Sidebar - Error in compact mode change handler:",i)}})}emitCompactModeChangeEvent(e,t,i){const s=P.createSidebarCompactModeChangeEvent(e,t,i);this.layoutContext.emit("sidebar-compact-mode-change",s.data),this.logger.info(`📡 Sidebar - Emitted compact mode change event: ${t} → ${e}${i?` (blocked: ${i})`:""}`)}emitMobileMenuModeChangeEvent(e,t,i){const s=P.createMobileMenuModeChangeEvent(e,t,i);this.layoutContext.emit("mobile-menu-mode-change",s.data),this.logger.info(`📡 Sidebar - Emitted mobile menu mode change event: ${t} → ${e} (via ${i})`)}toggleCompactMode(){this.setCompactMode(!this.compactMode)}expandSidebar(){this.compactMode?(this.setCompactMode(!1),this.logger.info("Sidebar - Expanded to full width")):this.logger.info("Sidebar - Already expanded")}compactSidebar(){this.compactMode?this.logger.info("Sidebar - Already compact"):(this.setCompactMode(!0),this.logger.info("Sidebar - Compacted to narrow width"))}lockExpanded(){this.expandSidebar(),this.sidebar&&(this.sidebar.setAttribute("data-locked-expanded","true"),this.logger.info("Sidebar - Locked in expanded mode"))}unlockSidebar(){this.sidebar&&(this.sidebar.removeAttribute("data-locked-expanded"),this.logger.info("Sidebar - Unlocked, normal toggle behavior restored"))}isLocked(){return this.sidebar?.hasAttribute("data-locked-expanded")??!1}updateCompactToggleButton(){if(!this.sidebar)return;const e=this.sidebar.querySelector(".compact-toggle-btn"),t=this.sidebar.querySelector(".compact-icon");e&&t&&(e.setAttribute("data-compact",this.compactMode.toString()),e.setAttribute("title",this.compactMode?"Expand sidebar":"Compact sidebar"),e.setAttribute("aria-label",this.compactMode?"Expand sidebar":"Compact sidebar"),t.textContent=this.compactMode?"keyboard_double_arrow_right":"keyboard_double_arrow_left",this.logger.info(`Sidebar - Toggle button updated for ${this.compactMode?"compact":"normal"} mode`))}waitForTransitionAndPublish(){if(!this.sidebar)return;const e=getComputedStyle(this.sidebar),t=e.transitionProperty,i=e.transitionDuration;if(t.includes("width")&&parseFloat(i)>0){this.logger.debug(`   ⏳ Waiting for sidebar width transition (${i}) to complete...`);const s=n=>{n.target===this.sidebar&&n.propertyName==="width"&&(this.logger.debug("   ✅ Sidebar width transition completed"),this.sidebar.removeEventListener("transitionend",s))};this.sidebar.addEventListener("transitionend",s),setTimeout(()=>{this.sidebar.removeEventListener("transitionend",s),this.logger.warn("   ⚠️ Fallback: Publishing dimensions after transition timeout")},parseFloat(i)*1e3+100)}else this.logger.debug("   ⚡ No width transition defined, publishing dimensions immediately")}showMobileMenu(e="programmatic"){if(!this.sidebar){this.logger.warn("❌ Sidebar - Cannot show mobile menu: sidebar element not found");return}if(!this.layoutContext.isLayoutMobile()){this.logger.warn("⚠️ Sidebar - showMobileMenu called but not in mobile mode");return}if(!this.sidebar.classList.contains("sidebar-hidden")){this.logger.info("📱 Sidebar - Mobile menu already visible");return}this.emitMobileMenuModeChangeEvent(!0,!1,e),this.mobileMenuToggleCount++,this.lastActionTime=Date.now(),this.logger.info("📱 Sidebar - Showing mobile sidebar overlay"),this.sidebar.classList.remove("sidebar-hidden"),this.sidebar.classList.add("sidebar-mobile-visible"),this.sidebar.style.display="",this.logger.info("📱 Sidebar - Removed inline display:none style"),document.body.classList.add("sidebar-mobile-open"),this.createMobileBackdrop(),this.logger.info("✅ Sidebar - Mobile menu shown")}hideMobileMenu(e="programmatic"){if(!this.sidebar){this.logger.warn("❌ Sidebar - Cannot hide mobile menu: sidebar element not found");return}if(!this.layoutContext.isLayoutMobile()){this.logger.warn("⚠️ Sidebar - hideMobileMenu called but not in mobile mode");return}if(!!this.sidebar.classList.contains("sidebar-hidden")){this.logger.info("📱 Sidebar - Mobile menu already hidden");return}this.emitMobileMenuModeChangeEvent(!1,!0,e),this.mobileMenuToggleCount++,this.lastActionTime=Date.now(),this.logger.info("📱 Sidebar - Hiding mobile sidebar overlay"),this.sidebar.classList.add("sidebar-hidden"),this.sidebar.classList.remove("sidebar-mobile-visible"),document.body.classList.remove("sidebar-mobile-open");const s=document.querySelector(".mobile-sidebar-backdrop");s&&(s.classList.remove("show"),s.remove()),this.logger.info("✅ Sidebar - Mobile menu hidden")}toggleMobileVisibility(e="programmatic"){if(!this.sidebar){this.logger.warn("❌ Sidebar - Cannot toggle mobile visibility: sidebar element not found");return}if(!this.layoutContext.isLayoutMobile()){this.logger.warn("⚠️ Sidebar - toggleMobileVisibility called but not in mobile mode");return}const i=!this.sidebar.classList.contains("sidebar-hidden"),s=!i;if(this.logger.info(`📱 Sidebar - Toggling mobile visibility: ${i} → ${s}`),this.logger.debug(`📱 Sidebar - Current classes: ${this.sidebar.className}`),this.emitMobileMenuModeChangeEvent(s,i,e),i){this.logger.info("📱 Sidebar - Hiding mobile sidebar overlay"),this.sidebar.classList.add("sidebar-hidden"),this.sidebar.classList.remove("sidebar-mobile-visible"),document.body.classList.remove("sidebar-mobile-open");const n=document.querySelector(".mobile-sidebar-backdrop");n&&(n.classList.remove("show"),n.remove())}else{this.logger.info("📱 Sidebar - Showing mobile sidebar overlay"),this.sidebar.classList.remove("sidebar-hidden"),this.sidebar.classList.add("sidebar-mobile-visible"),this.sidebar.style.display="",this.logger.info("📱 Sidebar - Removed inline display:none style"),document.body.classList.add("sidebar-mobile-open"),this.createMobileBackdrop();const n=getComputedStyle(this.sidebar);this.logger.debug("📱 Sidebar - After show - computed styles:"),this.logger.debug(`   display: ${n.display}`),this.logger.debug(`   visibility: ${n.visibility}`),this.logger.debug(`   opacity: ${n.opacity}`),this.logger.debug(`   transform: ${n.transform}`),this.logger.debug(`   z-index: ${n.zIndex}`)}this.logger.info(`✅ Sidebar - Mobile visibility toggled to: ${s}`),this.logger.debug(`📱 Sidebar - Final classes: ${this.sidebar.className}`)}createMobileBackdrop(){const e=document.querySelector(".mobile-sidebar-backdrop");e&&e.remove();const t=document.createElement("div");t.className="mobile-sidebar-backdrop",document.body.appendChild(t),requestAnimationFrame(()=>{t.classList.add("show")}),t.addEventListener("click",()=>{this.hideMobileMenu("backdrop")}),this.logger.info("📱 Sidebar - Mobile backdrop created with blur effects")}getCurrentDimensions(){if(!this.sidebar)return null;const t=!this.layoutContext.isLayoutMobile();let i=0;return t&&(i=this.compactMode?this.config.compactWidth:this.config.defaultWidth),{width:i,isVisible:t}}getDimensions(){const t=!(window.innerWidth<=768);let i=0;return t&&(i=this.compactMode?this.config.compactWidth:this.config.defaultWidth),{width:i,isVisible:t}}setupLayoutModeSubscriptions(){this.logger.info("Sidebar - Setting up layout mode subscriptions..."),this.layoutContext.subscribe("layout-mode-change",e=>{this.handleLayoutModeChange(e.data)}),this.layoutContext.subscribe("mobile-menu-request",e=>{this.handleMobileMenuRequest(e.data)}),this.layoutContext.subscribe("sidebar-compact-request",e=>{this.handleSidebarCompactRequest(e.data)}),this.logger.info("Sidebar - Layout mode, mobile menu, and compact mode request subscriptions setup complete")}initializeFromLayoutMode(){const e=this.layoutContext.getModeType();this.logger.info("Sidebar - Initializing from current layout mode:",e),this.updateSidebarForModeType(e)}handleLayoutModeChange(e){this.logger.info(`Sidebar - Layout mode changed to: ${e.modeType}`,e),e.previousModeType==="mobile"&&e.modeType!=="mobile"&&this.cleanupMobileOverlayState(),this.updateSidebarForModeType(e.modeType)}handleMobileMenuRequest(e){if(this.logger.info("Sidebar - Mobile menu request received:",e),!this.layoutContext.isLayoutMobile()){this.logger.info("Sidebar - Ignoring mobile menu request: not in mobile mode");return}const{requestedAction:t,trigger:i}=e;switch(t){case"show":this.showMobileMenu(i);break;case"hide":this.hideMobileMenu(i);break;case"toggle":this.toggleMobileVisibility(i);break;default:this.logger.warn(`Sidebar - Unknown mobile menu request action: ${t}`)}}handleSidebarCompactRequest(e){this.logger.info("Sidebar - Sidebar compact request received:",e);const{requestedAction:t}=e;switch(t){case"show":this.expandSidebar();break;case"hide":this.compactSidebar();break;case"toggle":this.toggleCompactMode();break;default:this.logger.warn(`Sidebar - Unknown compact mode request action: ${t}`)}}updateSidebarForModeType(e){if(!this.sidebar)return;const t=e==="mobile",i=e==="tablet",s=e==="desktop",n=!t,r=!t;this.logger.info(`Sidebar - Updating for ${e} mode:`),this.logger.debug(`  - Visible: ${n}`),this.logger.debug(`  - Can Toggle: ${r}`),n?(this.logger.debug("  ✅ Showing sidebar: display=flex, removing .sidebar-hidden"),this.sidebar.style.display="flex",this.sidebar.classList.remove("sidebar-hidden")):(this.logger.debug("  ❌ Hiding sidebar: display=none, adding .sidebar-hidden"),this.sidebar.style.display="none",this.sidebar.classList.add("sidebar-hidden"));const a=this.sidebar.querySelector(".compact-toggle-btn");if(a&&(r?(a.style.display="flex",a.disabled=!1,a.classList.remove("disabled")):(a.style.display="none",a.disabled=!0,a.classList.add("disabled"))),this.sidebar.classList.toggle("sidebar-mobile",t),this.sidebar.classList.toggle("sidebar-tablet",i),this.sidebar.classList.toggle("sidebar-desktop",s),n){const c=this.compactMode?this.config.compactWidth:this.config.defaultWidth;this.sidebar.style.setProperty("--sidebar-default-width",`${this.config.defaultWidth}px`),this.sidebar.style.setProperty("--sidebar-compact-width",`${this.config.compactWidth}px`),this.sidebar.style.setProperty("--sidebar-current-width",`${c}px`)}this.logger.info(`Sidebar - Updated for ${e} mode complete`)}cleanupMobileOverlayState(){if(!this.sidebar)return;this.logger.info("🧹 Sidebar - Cleaning up mobile overlay state"),this.sidebar.classList.remove("sidebar-mobile-visible"),document.body.classList.remove("sidebar-mobile-open");const e=document.querySelector(".mobile-sidebar-backdrop");e&&(e.remove(),this.logger.info("🧹 Sidebar - Removed mobile backdrop")),this.emitMobileMenuModeChangeEvent(!1,!0,"programmatic"),this.logger.info("✅ Sidebar - Mobile overlay state cleaned up")}isMobileMenuVisible(){return this.sidebar?this.sidebar.classList.contains("sidebar-mobile-visible")&&!this.sidebar.classList.contains("sidebar-hidden"):!1}getHotkeyProviderId(){return"MobileSidebar"}getProviderPriority(){return 800}getChainHotkeys(){const e=this.layoutContext.isLayoutMobile(),t=this.isMobileMenuVisible();if(!e||!t)return null;const i=new Map;return i.set("Escape",{key:"Escape",providerId:this.getHotkeyProviderId(),enabled:!0,handler:s=>{this.handleEscapeKeyChain(s)},description:"Close mobile sidebar menu via chain system",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.layoutContext.isLayoutMobile()&&this.isMobileMenuVisible()}),i}getDefaultChainBehavior(){return"next"}handleEscapeKeyChain(e){this.logger.info("📱 MobileSidebar - ESC key pressed via chain system"),this.hideMobileMenu("programmatic"),e.preventDefault(),this.logger.info("📡 MobileSidebar - ESC handled: mobile menu closed"),e.hasProvider("AppHeaderImpl")||e.hasProvider("UserMenu")?e.next():e.break()}cleanupChainProvider(){this.chainProviderUnsubscriber&&(this.chainProviderUnsubscriber(),this.chainProviderUnsubscriber=null,this.logger.info("MobileSidebar - Chain provider unregistered"))}getStatus(){const e=Date.now(),t=this.layoutContext?.isLayoutMobile()||!1,i=this.isMobileMenuVisible();return{componentType:"SidebarComponent",id:"app-sidebar",initialized:this.isInitialized,initTime:this.initTime,uptime:this.initTime?e-this.initTime:0,domElement:this.sidebar?{tagName:this.sidebar.tagName,id:this.sidebar.id,className:this.sidebar.className,childCount:this.sidebar.children.length,hasContent:this.sidebar.children.length>0,isVisible:this.sidebar.style.display!=="none"&&!this.sidebar.classList.contains("sidebar-hidden"),ariaLabel:this.sidebar.getAttribute("aria-label")||void 0,role:this.sidebar.getAttribute("role")||void 0}:void 0,eventListeners:{domEventListeners:this.domEventListenerCount,layoutSubscriptions:3,compactModeListeners:this.compactModeListeners.length},configuration:{...this.config,navigationItemsCount:this.navigationItems.length,locked:this.isLocked()},currentState:{compactMode:this.compactMode,isMobile:t,isMobileMenuVisible:i,layoutModeType:this.layoutContext?.getModeType(),isLocked:this.isLocked(),navigationUpdateCount:this.navigationUpdateCount,compactModeToggleCount:this.compactModeToggleCount,mobileMenuToggleCount:this.mobileMenuToggleCount,lastActionTime:this.lastActionTime,lastActionAgo:this.lastActionTime?e-this.lastActionTime:null,chainProviderActive:this.chainProviderUnsubscriber!==null},performance:{initDuration:this.initTime?50:null,dimensions:this.getCurrentDimensions()},issues:this.getIssues(),customData:{navigationItems:this.navigationItems.map(s=>({id:s.id,text:s.text,active:s.active,expandable:s.expandable,expanded:s.expanded,childrenCount:s.children?.length||0})),hotkeyProvider:{chainProviderRegistered:this.chainProviderUnsubscriber!==null,providesEscKey:t&&i,priority:this.getProviderPriority(),providerId:this.getHotkeyProviderId()},cssClasses:this.sidebar?Array.from(this.sidebar.classList):[]}}}getIssues(){const e=[];return this.isInitialized||e.push("Component not initialized"),this.sidebar||e.push("DOM sidebar element missing"),this.layoutContext||e.push("LayoutContext not available"),this.navigationItems.length===0&&e.push("No navigation items configured"),this.domEventListenerCount===0&&this.isInitialized&&e.push("No DOM event listeners active (possible initialization issue)"),this.chainProviderUnsubscriber===null&&this.isInitialized&&e.push("Chain hotkey provider not registered"),this.layoutContext?.isLayoutMobile()&&this.compactMode&&e.push("Compact mode active on mobile (should use overlay mode instead)"),e}destroy(){this.logger.info("Sidebar - Destroying..."),this.cleanupChainProvider(),this.sidebar&&(this.sidebar.remove(),this.sidebar=null),this.isInitialized=!1,this.logger.info("Sidebar - Destroyed")}}class hi{constructor(e){this.container=null,this.messages=new Map,this.autoHideTimers=new Map,this.isInitialized=!1,this.initTime=null,this.messageAddCount=0,this.messageRemoveCount=0,this.autoHideTriggeredCount=0,this.lastActionTime=null,this.closeButtonClickCount=0,this.idCounter=0,this.messageOrder=[],this.resizeHandler=null,this.layoutContext=e,this.logger=f.getInstance().getLogger("MessagesComponent")}generateUniqueId(e){const t=Date.now(),i=++this.idCounter;return`${e}-${t}-${i}`}updateDeckPositions(){if(!this.container)return;const t=window.innerWidth<=768?1:2;this.messageOrder.forEach((i,s)=>{const n=this.container?.querySelector(`[data-message-id="${i}"]`);if(n){const r=Math.min(s,6),a=r*t,c=r*t,l=Math.max(10-s,1),u=s===0?"visible":"hidden";n.style.setProperty("--deck-offset-x",`${a}px`),n.style.setProperty("--deck-offset-y",`${c}px`),n.style.setProperty("--deck-z-index",l.toString()),n.style.setProperty("--deck-overflow",u)}})}async init(){if(this.container=document.getElementById("app-error-messages"),!this.container){this.logger.error("Container #app-error-messages not found");return}this.layoutContext.registerMessages(this),this.resizeHandler=()=>this.updateDeckPositions(),window.addEventListener("resize",this.resizeHandler),this.initTime=Date.now(),this.isInitialized=!0,this.logger.info("Ready ✅")}addMessage(e){if(!this.container){this.logger.warn("Container not available");return}const t={dismissible:!0,autoHide:e.type==="success"||e.type==="info",autoHideDelay:5e3,persistent:!1,...e};this.removeMessage(e.id),this.messages.set(e.id,t);const i=this.createMessageElement(t);if(this.container.prepend(i),this.messageOrder.unshift(e.id),this.updateDeckPositions(),this.messageAddCount++,this.lastActionTime=Date.now(),t.autoHide&&t.autoHideDelay){const s=setTimeout(()=>{this.messages.has(e.id)&&(this.autoHideTriggeredCount++,this.removeMessage(e.id))},t.autoHideDelay);this.autoHideTimers.set(e.id,s)}this.logger.info(`Added ${e.type}: ${e.title}`)}removeMessage(e){if(!this.container)return;if(!this.messages.has(e)){this.logger.debug(`Message ${e} already removed or doesn't exist`);return}const t=this.autoHideTimers.get(e);t&&(clearTimeout(t),this.autoHideTimers.delete(e));const i=this.container.querySelector(`[data-message-id="${e}"]`);if(this.messages.delete(e),this.messageOrder=this.messageOrder.filter(s=>s!==e),this.messageRemoveCount++,this.lastActionTime=Date.now(),this.updateDeckPositions(),i){if(i.getAttribute("data-removing")==="true"){this.logger.debug(`Message element ${e} already being removed`);return}i.setAttribute("data-removing","true"),i.style.animation="messageFadeOut 0.3s ease-in forwards",setTimeout(()=>{i.parentNode&&i.remove()},300)}this.logger.info("Removed message:",e)}clearAll(e=!1){if(!this.container)return;const t=[];this.messages.forEach((i,s)=>{(e||!i.persistent)&&t.push(s)}),t.forEach(i=>{const s=this.autoHideTimers.get(i);s&&(clearTimeout(s),this.autoHideTimers.delete(i))}),t.forEach(i=>this.removeMessage(i)),this.messageOrder=[],setTimeout(()=>this.cleanupOrphanedMessages(),400),this.logger.info(`Cleared ${t.length} messages`)}clearByType(e){const t=[];this.messages.forEach((i,s)=>{i.type===e&&!i.persistent&&t.push(s)}),t.forEach(i=>this.removeMessage(i)),this.logger.info(`Cleared ${t.length} ${e} messages`)}getMessages(){return Array.from(this.messages.values())}hasMessages(e){return e?Array.from(this.messages.values()).some(t=>t.type===e):this.messages.size>0}createMessageElement(e){const t=document.createElement("div");if(t.className=`error-message ${e.type}`,t.setAttribute("data-message-id",e.id),t.innerHTML=`
      <div class="error-content">
        <div class="error-title">${this.escapeHtml(e.title)} <span style="font-size: 8px; opacity: 0.3; font-family: monospace; font-weight: normal; user-select: text;">[${this.escapeHtml(e.id)}]</span></div>
        ${e.description?`<div class="error-description">${this.escapeHtml(e.description)}</div>`:""}
      </div>
      ${e.dismissible?'<button type="button" class="error-close">×</button>':""}
    `,e.dismissible){const i=t.querySelector(".error-close");i&&i.addEventListener("click",()=>{this.closeButtonClickCount++,this.removeMessage(e.id)})}return t}escapeHtml(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}showError(e,t,i){this.addMessage({id:i?.id||this.generateUniqueId("error"),type:"error",title:e,description:t,autoHide:!1,...i})}showWarning(e,t,i){this.addMessage({id:i?.id||this.generateUniqueId("warning"),type:"warning",title:e,description:t,autoHide:!1,...i})}showInfo(e,t,i){this.addMessage({id:i?.id||this.generateUniqueId("info"),type:"info",title:e,description:t,autoHide:!0,...i})}showSuccess(e,t,i){this.addMessage({id:i?.id||this.generateUniqueId("success"),type:"success",title:e,description:t,autoHide:!0,...i})}isReady(){return this.container!==null}cleanupOrphanedMessages(){if(!this.container)return;const e=this.container.querySelectorAll("[data-message-id]");let t=0;e.forEach(i=>{const s=i.getAttribute("data-message-id");s&&!this.messages.has(s)&&(i.remove(),t++,this.logger.debug(`Cleaned up orphaned message element: ${s}`))}),t>0&&this.logger.info(`Cleaned up ${t} orphaned message elements`)}forceRemoveMessage(e){if(!this.container)return;const t=this.autoHideTimers.get(e);t&&(clearTimeout(t),this.autoHideTimers.delete(e)),this.messages.delete(e);const i=this.container.querySelector(`[data-message-id="${e}"]`);i&&i.remove(),this.messageRemoveCount++,this.lastActionTime=Date.now(),this.logger.info(`Force removed message: ${e}`)}getStatus(){const e=Date.now(),t=Array.from(this.messages.values()),i={error:t.filter(s=>s.type==="error").length,warning:t.filter(s=>s.type==="warning").length,info:t.filter(s=>s.type==="info").length,success:t.filter(s=>s.type==="success").length};return{componentType:"MessagesComponent",id:"app-error-messages",initialized:this.isInitialized,initTime:this.initTime,uptime:this.initTime?e-this.initTime:0,domElement:this.container?{tagName:this.container.tagName,id:this.container.id,className:this.container.className,childCount:this.container.children.length,hasContent:this.container.children.length>0,isVisible:this.container.style.display!=="none",ariaLabel:this.container.getAttribute("aria-label")||void 0,role:this.container.getAttribute("role")||void 0}:void 0,eventListeners:{closeButtonListeners:this.container?this.container.querySelectorAll(".error-close").length:0},configuration:{supportsAutoHide:!0,supportsDismissible:!0,supportsPersistent:!0,supportsTypes:["error","warning","info","success"]},currentState:{activeMessagesCount:this.messages.size,messagesByType:i,activeAutoHideTimers:this.autoHideTimers.size,messageAddCount:this.messageAddCount,messageRemoveCount:this.messageRemoveCount,autoHideTriggeredCount:this.autoHideTriggeredCount,closeButtonClickCount:this.closeButtonClickCount,lastActionTime:this.lastActionTime,lastActionAgo:this.lastActionTime?e-this.lastActionTime:null,isReady:this.isReady()},performance:{initDuration:this.initTime?20:null,averageMessageLifetime:this.messageRemoveCount>0&&this.initTime?(e-this.initTime)/this.messageRemoveCount:null},issues:this.getIssues(),customData:{activeMessages:t.map(s=>({id:s.id,type:s.type,title:s.title,hasDescription:!!s.description,dismissible:s.dismissible,autoHide:s.autoHide,autoHideDelay:s.autoHideDelay,persistent:s.persistent})),timerInfo:{activeTimers:this.autoHideTimers.size,timerIds:Array.from(this.autoHideTimers.keys())},domElements:{container:!!this.container,messageElements:this.container?this.container.children.length:0,closeButtons:this.container?this.container.querySelectorAll(".error-close").length:0}}}}getIssues(){const e=[];this.isInitialized||e.push("Component not initialized"),this.container||e.push("DOM container element missing"),this.layoutContext||e.push("LayoutContext not available"),this.autoHideTimers.size>10&&e.push(`High number of active auto-hide timers (${this.autoHideTimers.size}) - possible memory leak`),this.messages.size>20&&e.push(`High number of active messages (${this.messages.size}) - consider clearing old messages`),Array.from(this.messages.values()).filter(s=>s.autoHide).length!==this.autoHideTimers.size&&e.push("Mismatch between auto-hide messages and active timers");const i=Array.from(this.messages.values()).filter(s=>s.type==="error"&&s.persistent);return i.length>5&&e.push(`High number of persistent error messages (${i.length})`),e}destroy(){this.logger.info("Destroying..."),this.autoHideTimers.forEach(e=>clearTimeout(e)),this.autoHideTimers.clear(),this.clearAll(!0),this.resizeHandler&&(window.removeEventListener("resize",this.resizeHandler),this.resizeHandler=null),this.messages.clear(),this.messageOrder=[],this.container=null,this.logger.info("Destroyed")}}function $(o){return typeof o=="object"&&"onContextReady"in o}class pi{constructor(e={}){this.sidebar=null,this.messagesComponent=null,this.isInitialized=!1,this.layoutUnsubscribers=[],this.registeredHandlers=[],this.contextHandlers=[],this.navigationItems=[],this.userMenuItems=[],this.config={header:{enabled:!0,brandTitle:"Opinion",brandHref:"/dashboard",showMobileToggle:!0,showBreadcrumbs:!0,showUserMenu:!0,...e.header},sidebar:{enabled:!0,defaultWidth:280,compactWidth:80,footer:{text:"© 2025 Opinion",showFooter:!0},...e.sidebar},footer:{enabled:!0,showCopyright:!0,copyrightText:"© 2025 Inqwise Ltd",showNavigation:!0,...e.footer},navigation:e.navigation||[],userMenu:e.userMenu||[]},this.logger=f.getInstance().getLogger("Layout"),this.layoutContext=new pe,this.header=new ri(this.config.header,this.layoutContext),this.footer=new ai(this.config.footer,this.layoutContext),this.mainContent=new li({className:"main-content",id:"app",ariaLabel:"Main application content"},this.layoutContext)}async init(){this.logger.debug("init() START");try{this.logger.info("Starting layout initialization..."),this.config.header?.enabled?(this.logger.debug("Header enabled, initializing..."),await this.header.init(),this.logger.debug("Header initialized successfully"),this.config.header.brandTitle&&(this.logger.debug("Updating header brand..."),this.header.updateBrand(this.config.header.brandTitle,this.config.header.brandHref),this.logger.debug("Header brand updated")),this.logger.debug("Applying user menu items to header..."),this.logger.debug("User menu items applied to header")):this.logger.warn("Header disabled in config"),this.logger.debug("Initializing MainContent..."),this.mainContent.init(),this.logger.debug("MainContent initialized"),this.logger.debug("Initializing MessagesComponent..."),this.messagesComponent=new hi(this.layoutContext),await this.messagesComponent.init(),this.logger.debug("MessagesComponent initialized"),this.config.sidebar?.enabled?(this.logger.debug("Sidebar enabled, initializing..."),await this.initSidebar(),this.logger.debug("Sidebar initialized successfully")):this.logger.warn("Sidebar disabled in config"),this.config.footer?.enabled?(this.logger.debug("Footer enabled, initializing..."),await this.footer.init(),this.logger.debug("Footer initialized successfully")):this.logger.warn("Footer disabled in config"),this.logger.debug("Setting up component coordination..."),this.setupComponentCoordination(),this.logger.debug("Component coordination setup complete"),this.logger.debug("Setting up responsive behavior..."),this.setupResponsiveBehavior(),this.logger.debug("Responsive behavior setup complete"),this.logger.debug("Subscribing to layout context events..."),this.subscribeToLayoutContext(),this.logger.debug("Layout context subscription complete"),this.layoutContext.markReady(),await this.executeRegisteredHandlers(),this.isInitialized=!0,this.logger.info("Layout initialization completed successfully!")}catch(e){throw this.logger.error("Layout initialization failed",e),e}this.logger.debug("init() END")}async initSidebar(){try{const e={defaultWidth:this.config.sidebar?.defaultWidth??280,compactWidth:this.config.sidebar?.compactWidth??80,footer:{text:this.config.sidebar?.footer?.text??"© 2025 Opinion",showFooter:this.config.sidebar?.footer?.showFooter??!0}};this.logger.debug("Creating sidebar with config",e),this.sidebar=new gi(e,this.layoutContext),await this.sidebar.init()}catch(e){throw this.logger.error("Sidebar initialization failed",e),e}}setupComponentCoordination(){this.logger.debug("Component coordination delegated to layout context")}setupResponsiveBehavior(){this.updateComponentCSSClasses(this.layoutContext)}getHeader(){return this.header}getFooter(){return this.footer}getMainContent(){return this.mainContent}getSidebar(){return this.sidebar}getLayoutContext(){return this.layoutContext}updateUser(e){this.config.header?.enabled&&this.header.updateUser(e),this.logger.debug("User updated across components")}updateConfig(e){this.config={...this.config,...e},e.header&&(e.header.brandTitle||e.header.brandHref)&&this.header.updateBrand(e.header.brandTitle||this.config.header?.brandTitle||"Opinion",e.header.brandHref||this.config.header?.brandHref||"/dashboard")}showHeader(e){this.header.setVisible(e),this.config.header.enabled=e}showFooter(e){this.footer.setVisible(e),this.config.footer.enabled=e}showSidebar(e){this.config.sidebar.enabled=e}isReady(){return this.isInitialized}getLayoutState(){const e=window.innerWidth,t=e<=768,i=e<=1024;return{headerVisible:this.config.header?.enabled||!1,footerVisible:this.config.footer?.enabled||!1,sidebarEnabled:this.config.sidebar?.enabled||!1,viewport:t?"mobile":i?"tablet":"desktop"}}updateCopyrightText(e){this.logger.warn("Footer copyright text cannot be updated after initialization");const t=document.querySelector(".sidebar-footer .copyright-text");t&&(t.textContent=e,this.logger.debug(`Sidebar copyright text updated: ${e}`))}subscribeToLayoutContext(){this.logger.debug("Subscribing to layout context events...");const e=this.layoutContext.subscribe("layout-ready",this.handleLayoutReady.bind(this));this.layoutUnsubscribers.push(e);const t=this.layoutContext.subscribe("layout-mode-change",i=>{i&&i.data?this.handleLayoutModeChange(i):this.logger.error("Layout - Received invalid layout-mode-change event:",i)});this.layoutUnsubscribers.push(t),this.logger.debug("Successfully subscribed to layout context events")}handleLayoutReady(e){this.logger.debug("Layout context marked as ready",e&&typeof e=="object"&&e!==null?e.data:e),this.finalizeComponentCoordination()}finalizeComponentCoordination(){this.logger.debug("Finalizing component coordination...")}handleLayoutModeChange(e){const t=e.data;this.logger.debug("Received layout mode change",t),t?this.updateComponentCSSClasses(this.layoutContext):this.logger.error("Received undefined layout mode data in event",e)}updateComponentCSSClasses(e){const t=e.getModeType(),i=e.isLayoutMobile(),s=e.isLayoutTablet(),n=e.isLayoutDesktop(),r=e.getSidebar()?.isCompactMode();this.logger.info(`Layout - Updating component CSS classes for mode: ${t}`);const a={layout:document.querySelector(".app-layout"),sidebar:document.querySelector(".app-sidebar"),header:document.querySelector(".app-header"),content:document.querySelector(".app-content-scroll, .app-main"),footer:document.querySelector(".app-footer")},c={mobile:"layout-mode-mobile",tablet:"layout-mode-tablet",desktop:"layout-mode-desktop","desktop-compact":"layout-mode-desktop-compact"},l={compact:"layout-compact",mobile:"layout-mobile",tablet:"layout-tablet",desktop:"layout-desktop"};Object.values(a).forEach(g=>{g&&(Object.values(c).forEach(h=>{g.classList.remove(h)}),Object.values(l).forEach(h=>{g.classList.remove(h)}),g.classList.add(c[t]),r&&g.classList.add(l.compact),i&&g.classList.add(l.mobile),s&&g.classList.add(l.tablet),n&&g.classList.add(l.desktop))});const u=document.body;Object.values(c).forEach(g=>{u.classList.remove(g)}),Object.values(l).forEach(g=>{u.classList.remove(g)}),u.classList.add(c[t]),r&&u.classList.add(l.compact),i&&u.classList.add(l.mobile),s&&u.classList.add(l.tablet),n&&u.classList.add(l.desktop);const d=document.documentElement;d.style.setProperty("--layout-mode",t),d.style.setProperty("--is-compact",r?"1":"0"),d.style.setProperty("--is-mobile",i?"1":"0"),d.style.setProperty("--is-tablet",s?"1":"0"),d.style.setProperty("--is-desktop",n?"1":"0"),this.logger.info("Layout - CSS classes updated:",{mode:t,addedClasses:[c[t],...r?[l.compact]:[],...i?[l.mobile]:[],...s?[l.tablet]:[],...n?[l.desktop]:[]],components:Object.keys(a).filter(g=>a[g]!==null)})}setNavigationItems(e){this.navigationItems=[...e],this.logger.info("Layout - Navigation items updated:",this.navigationItems.length,"items");const t=this.layoutContext.getSidebar();t?(t.updateNavigation(this.navigationItems),this.logger.info("Layout - Navigation items applied to existing sidebar")):this.logger.info("Layout - Navigation items stored, will be applied when sidebar is registered")}getNavigationItems(){return[...this.navigationItems]}updateNavigationItem(e,t){const i=this.navigationItems.findIndex(s=>s.id===e);if(i!==-1){this.navigationItems[i]={...this.navigationItems[i],...t};const s=this.layoutContext.getSidebar();s&&s.updateNavigation(this.navigationItems),this.logger.info(`Layout - Navigation item '${e}' updated`)}else this.logger.warn(`Layout - Navigation item with id '${e}' not found`)}addNavigationItem(e,t){t!==void 0&&t>=0&&t<=this.navigationItems.length?this.navigationItems.splice(t,0,e):this.navigationItems.push(e);const i=this.layoutContext.getSidebar();i&&i.updateNavigation(this.navigationItems),this.logger.info(`Layout - Navigation item '${e.id}' added`)}removeNavigationItem(e){const t=this.navigationItems.findIndex(i=>i.id===e);if(t!==-1){this.navigationItems.splice(t,1);const i=this.layoutContext.getSidebar();i&&i.updateNavigation(this.navigationItems),this.logger.info(`Navigation item '${e}' removed`)}else this.logger.warn(`Navigation item with id '${e}' not found`)}setActiveNavigationItem(e){this.logger.warn(`Layout.setActiveNavigationItem is deprecated. Use NavigationService.setActiveItem('${e}') instead.`);const t=this.layoutContext.getService("navigation.service");t&&"setActiveItem"in t?t.setActiveItem(e):this.logger.error("NavigationService not available. Cannot set active navigation item.")}setUserMenuItems(e){this.userMenuItems=[...e],this.logger.info("User menu items updated:",this.userMenuItems.length,"items"),this.header?(this.header.updateUserMenuItems(this.userMenuItems),this.logger.info("User menu items applied to header")):this.logger.info("User menu items stored, will be applied when header is available")}getUserMenuItems(){return[...this.userMenuItems]}updateUserMenuItem(e,t){const i=this.userMenuItems.findIndex(s=>s.id===e);i!==-1?(this.userMenuItems[i]={...this.userMenuItems[i],...t},this.header&&this.header.updateUserMenuItems(this.userMenuItems),this.logger.info(`User menu item '${e}' updated`)):this.logger.warn(`User menu item with id '${e}' not found`)}addUserMenuItem(e,t){t!==void 0&&t>=0&&t<=this.userMenuItems.length?this.userMenuItems.splice(t,0,e):this.userMenuItems.push(e),this.header&&this.header.updateUserMenuItems(this.userMenuItems),this.logger.info(`User menu item '${e.id}' added`)}removeUserMenuItem(e){const t=this.userMenuItems.findIndex(i=>i.id===e);t!==-1?(this.userMenuItems.splice(t,1),this.header&&this.header.updateUserMenuItems(this.userMenuItems),this.logger.info(`User menu item '${e}' removed`)):this.logger.warn(`User menu item with id '${e}' not found`)}getNavigationForSidebar(){return this.getNavigationItems()}getUserMenuForHeader(){return this.getUserMenuItems()}getSidebarFooterConfig(){return{text:this.config.sidebar?.footer?.text||"© 2025 Opinion",showFooter:this.config.sidebar?.footer?.showFooter??!0}}getSidebarConfig(){return{defaultWidth:this.config.sidebar?.defaultWidth??280,compactWidth:this.config.sidebar?.compactWidth??80,footer:{text:this.config.sidebar?.footer?.text??"© 2025 Opinion",showFooter:this.config.sidebar?.footer?.showFooter??!0}}}getMessages(){return this.layoutContext.getMessages()}get isLayoutInitialized(){return this.isInitialized}onContextReady(e){const t=e;return this.setContextHandler(t,{enableLogging:!1,continueOnError:!0,timeout:5e3})}addHandler(e,t){return this.setContextHandler(e,{enableLogging:!1,continueOnError:!0,timeout:5e3})}addServiceRegistration(e,t,i=500){const s={id:t||"service-registration",priority:i,onContextReady:n=>{e.forEach(({name:r,factory:a,dependencies:c=[]})=>{const l=a(n);n.registerService(r,l)})}};return this.setContextHandler(s,{enableLogging:!0,continueOnError:!1,timeout:1e4})}setContextHandler(e,t={}){const i={timeout:5e3,continueOnError:!0,enableLogging:!0,...t},s={handler:e,config:i,registered:new Date};if(this.registeredHandlers.push(s),this.contextHandlers.push(e),i.enableLogging){const n=$(e)?"LifecycleHandler":"ContextHandler",r=$(e)?e.id:"anonymous";this.logger.debug(`Registered ${n} (${r})`)}return this.isInitialized&&this.layoutContext.isReady()&&this.executeHandler(s),this}setContextHandlers(e){return e.forEach(({handler:t,config:i})=>{this.setContextHandler(t,i)}),this}async executeHandler(e){const{handler:t,config:i}=e,s=Date.now(),n={success:!1,executionTime:0};try{$(t)?await this.executeLifecycleHandler(t,i):await this.executeContextHandler(t,i),n.success=!0}catch(r){if(n.error=r,i.enableLogging&&this.logger.error("Handler execution failed",r),$(t)&&t.onError)try{await t.onError(r,this.layoutContext)}catch(a){this.logger.error("Error handler also failed",a)}if(!i.continueOnError)throw r}finally{n.executionTime=Date.now()-s}return n}async executeLifecycleHandler(e,t){const i=e.id||"anonymous";t.enableLogging&&this.logger.debug(`Executing LifecycleHandler: ${i}`),e.onPreInit&&(t.enableLogging&&this.logger.debug(`Executing onPreInit for: ${i}`),await this.executeWithTimeout(e.onPreInit,t.timeout)),t.enableLogging&&this.logger.debug(`Executing onContextReady for: ${i}`),await this.executeWithTimeout(()=>e.onContextReady(this.layoutContext),t.timeout),e.onPostInit&&(t.enableLogging&&this.logger.debug(`Executing onPostInit for: ${i}`),await this.executeWithTimeout(()=>e.onPostInit(this.layoutContext),t.timeout)),t.enableLogging&&this.logger.debug(`Completed LifecycleHandler: ${i}`)}async executeContextHandler(e,t){t.enableLogging&&this.logger.debug("Executing ContextHandler"),await this.executeWithTimeout(()=>e(this.layoutContext),t.timeout)}async executeWithTimeout(e,t){return new Promise((i,s)=>{const n=setTimeout(()=>{s(new Error(`Handler execution timed out after ${t}ms`))},t);Promise.resolve(e()).then(r=>{clearTimeout(n),i(r)}).catch(r=>{clearTimeout(n),s(r)})})}async executeRegisteredHandlers(){if(this.registeredHandlers.length===0)return;this.logger.debug(`Executing ${this.registeredHandlers.length} registered handlers`);const e=[...this.registeredHandlers].sort((t,i)=>{const s=$(t.handler)&&t.handler.priority||0;return($(i.handler)&&i.handler.priority||0)-s});for(const t of e)await this.executeHandler(t);this.logger.debug("All registered handlers executed")}getRegisteredHandlers(){return this.registeredHandlers.map(({handler:e,registered:t})=>({type:$(e)?"LifecycleHandler":"ContextHandler",id:$(e)?e.id:void 0,priority:$(e)?e.priority:void 0,registered:t}))}destroy(){this.logger.info("Destroying..."),this.layoutUnsubscribers.forEach(i=>{try{i()}catch(s){this.logger.error("Error unsubscribing from layout context",s)}}),this.layoutUnsubscribers=[],this.registeredHandlers.length>0&&(this.logger.debug(`Clearing ${this.registeredHandlers.length} registered handlers`),this.registeredHandlers=[],this.contextHandlers=[]),this.layoutContext.unregisterAllComponents(),this.layoutContext&&this.layoutContext.destroy(),this.header&&this.header.destroy(),this.sidebar&&(this.layoutContext.unregisterSidebar(),this.sidebar.destroy(),this.sidebar=null),this.footer&&this.footer.destroy(),this.messagesComponent&&(this.messagesComponent.destroy(),this.messagesComponent=null);const e=document.documentElement;e.style.removeProperty("--sidebar-width"),e.style.removeProperty("--sidebar-right-border"),e.style.removeProperty("--content-margin-left"),e.style.removeProperty("--layout-mode"),e.style.removeProperty("--is-compact"),e.style.removeProperty("--is-mobile"),e.style.removeProperty("--is-tablet"),e.style.removeProperty("--is-desktop"),["layout-mode-mobile","layout-mode-tablet","layout-mode-desktop","layout-mode-desktop-compact","layout-compact","layout-mobile","layout-tablet","layout-desktop"].forEach(i=>{document.body.classList.remove(i)}),this.isInitialized=!1,this.logger.info("Destroyed")}}const de={USER_AUTHENTICATED:"user.authenticated"};function mi(o,e){return{name:o,payload:e}}const fi={userAuthenticated(o,e="authentication"){return mi(de.USER_AUTHENTICATED,{user:o,operation:e,timestamp:new Date})}};class fe{constructor(e,t={}){this._initialized=!1,this._destroyed=!1,this._context=e,this._config={autoInit:!0,allowReplace:!1,initTimeout:5e3,...t},this._logger=f.getInstance().getLogger(`Service:${this.getServiceId()}`),this._logger.debug("Service created")}async init(){if(this._initialized){this._log("⚠️","Service already initialized");return}if(this._destroyed)throw new H("Cannot initialize destroyed service",this.getServiceId(),"init");this._log("🚀","Initializing service...");const e=Date.now();try{await this.onInit(),this._initialized=!0;const t=Date.now()-e;this._log("✅",`Service initialized successfully in ${t}ms`),this._emitEvent("service:initialized",{service:this.getServiceId(),initTime:t})}catch(t){const i=Date.now()-e,s=new H(`Service initialization failed: ${t}`,this.getServiceId(),"init");throw this._log("❌",`Service initialization failed after ${i}ms:`,t),this._emitEvent("service:error",{service:this.getServiceId(),error:s,operation:"init"}),s}}async destroy(){if(this._destroyed){this._log("⚠️","Service already destroyed");return}this._log("🧹","Destroying service...");try{this._initialized&&await this.onDestroy(),this._destroyed=!0,this._initialized=!1,this._log("✅","Service destroyed successfully"),this._emitEvent("service:destroyed",{service:this.getServiceId()})}catch(e){const t=new H(`Service destruction failed: ${e}`,this.getServiceId(),"destroy");throw this._log("❌","Service destruction failed:",e),this._emitEvent("service:error",{service:this.getServiceId(),error:t,operation:"destroy"}),t}}isReady(){return this._initialized&&!this._destroyed}getContext(){return this._context}getEventBus(){return this._context.getEventBus()}getConfig(){return{...this._config}}getService(e){return this._context.getService(e)}hasService(e){return this._context.hasService(e)}log(e,t,...i){this._log(e,t,...i)}createError(e,t){return new H(e,this.getServiceId(),t)}async safeExecute(e,t){try{return await e()}catch(i){return this._log("❌",t,i),null}}_log(e,t,...i){this._logger.debug(t,...i)}_emitEvent(e,t){try{const i=this.getEventBus();typeof i.publish=="function"?i.publish(e,t):this._logger.warn("EventBus.publish method not available")}catch(i){this._logger.error(`Failed to publish event '${e}'`,i)}}}class ue{constructor(e,t,i=new Date){this.id=e.id,this.username=e.username,this.email=e.email,this.role=e.role,this.created=e.created,this.lastLogin=e.lastLogin,this.accountId=t,this.authenticatedAt=i}toUser(){return{id:this.id,username:this.username,email:this.email,role:this.role,created:this.created,lastLogin:this.lastLogin}}hasAccountContext(){return this.accountId!==void 0}static fromAuthResponse(e){return new ue(e.userInfo,e.accountId)}static isAuthenticatedUser(e){return e instanceof ue||e!==null&&typeof e=="object"&&typeof e.id=="number"&&typeof e.username=="string"&&typeof e.email=="string"&&e.authenticatedAt instanceof Date}}function D(o,e,t){const i=f.getInstance().getLogger("ServiceIdentity"),s=e.SERVICE_ID;o.registerService(s,t),i.debug("📝 Registered service: {}",s)}function be(o,e){const t=o;if(!t.SERVICE_ID||typeof t.SERVICE_ID!="string")throw new Error(`Service class must declare static SERVICE_ID constant. Found: ${t.name||"Unknown"}`);if(e&&typeof e.getServiceId!="function")throw new Error(`Service instance must implement getServiceId() method. Service: ${t.SERVICE_ID}`)}const ye=class oe{constructor(e,t={}){this.currentUser=null,this.currentAccountId=null,this.mockAccounts=[],this.initialized=!1,this.destroyed=!1,this.mockConfig={autoInit:!0,allowReplace:!1,initTimeout:5e3,authDelay:500,enableAccountSwitching:!0,mockAccountCount:3,...t},this.mockApiService=e,this.logger=f.getInstance().getLogger("MockSessionAuthProvider"),be(oe,this),this.log("🔐","MockSessionAuthProvider created",{serviceId:oe.SERVICE_ID,authDelay:this.mockConfig.authDelay,accountSwitching:this.mockConfig.enableAccountSwitching,accountCount:this.mockConfig.mockAccountCount})}getServiceId(){return oe.SERVICE_ID}async isAuthenticated(){return await this.simulateDelay(),this.currentUser!==null}async getCurrentUser(){await this.simulateDelay(),this.log("🔍","Getting current user...");try{const e=await this.mockApiService.validateUser(),t=e.userInfo;return this.currentUser=t,e.accountId&&(this.currentAccountId=e.accountId),this.log("✅","Current user retrieved successfully",{userId:t.id,username:t.username,email:t.email,accountId:e.accountId}),t}catch(e){this.currentUser=null,this.currentAccountId=null;const t=e instanceof p?e:new p("User validation failed",e);throw this.log("❌","Failed to get current user",{error:t.message}),t}}async login(){await this.simulateDelay(),this.log("🚪","Initiating mock login...");try{await this.getCurrentUser(),this.log("✅","Mock login completed successfully")}catch(e){const t=e instanceof p?e:new p("Mock login failed",e);throw this.log("❌","Mock login failed",{error:t.message}),t}}async logout(){await this.simulateDelay();const e=this.currentUser!==null,t=this.currentUser?.username;this.log("🚪","Performing mock logout...",{wasAuthenticated:e,previousUser:t});try{this.currentUser=null,this.currentAccountId=null,this.log("✅","Mock logout completed successfully",{previousUser:t})}catch(i){const s=new p("Mock logout failed",i);throw this.log("❌","Mock logout failed",{error:s.message}),s}}async getAccounts(){if(await this.simulateDelay(),!await this.isAuthenticated())throw new p("User not authenticated - cannot retrieve accounts");this.log("📋","Getting user accounts...");try{return this.log("✅","Accounts retrieved successfully",{accountCount:this.mockAccounts.length}),[...this.mockAccounts]}catch(e){const t=new p("Failed to retrieve accounts",e);throw this.log("❌","Account retrieval failed",{error:t.message}),t}}async switchAccount(e){if(await this.simulateDelay(),!await this.isAuthenticated())throw new p("User not authenticated - cannot switch accounts");if(!this.mockConfig.enableAccountSwitching)throw new p("Account switching is disabled in mock configuration");this.log("🔄","Switching account...",{accountId:e});try{const t=this.mockAccounts.find(i=>i.id===e);if(!t)throw new p(`Account with ID ${e} not found or access denied`);this.currentAccountId=e,this.log("✅","Account switch successful",{accountId:e,accountName:t.name})}catch(t){const i=t instanceof p?t:new p(`Account switch to ${e} failed`,t);throw this.log("❌","Account switch failed",{accountId:e,error:i.message}),i}}async getCurrentAccountId(){await this.simulateDelay(100);try{return this.currentAccountId}catch(e){return this.log("⚠️","Failed to get current account ID",{error:e}),null}}async init(){if(this.initialized){this.log("⚠️","MockSessionAuthProvider already initialized");return}this.log("🚀","Initializing MockSessionAuthProvider..."),this.generateMockAccounts(),this.mockAccounts.length>0&&(this.currentAccountId=this.mockAccounts[0].id),this.initialized=!0,this.log("✅","MockSessionAuthProvider initialized successfully",{accountCount:this.mockAccounts.length,defaultAccountId:this.currentAccountId})}async destroy(){if(this.destroyed){this.log("⚠️","MockSessionAuthProvider already destroyed");return}this.log("🧹","Destroying MockSessionAuthProvider..."),this.currentUser=null,this.currentAccountId=null,this.mockAccounts=[],this.destroyed=!0,this.initialized=!1,this.log("✅","MockSessionAuthProvider destroyed successfully")}isReady(){return this.initialized&&!this.destroyed}log(e,t,i){const s=this.getServiceId();i?this.logger.info(`${e} [${s}] ${t}`,i):this.logger.info(`${e} [${s}] ${t}`)}generateMockAccounts(){this.mockAccounts=[];for(let e=1;e<=this.mockConfig.mockAccountCount;e++)this.mockAccounts.push({id:e,name:this.getMockAccountName(e)});this.log("🏢","Generated mock accounts",{accounts:this.mockAccounts.map(e=>`${e.id}: ${e.name}`)})}getMockAccountName(e){return["Acme Corporation","Tech Innovations Ltd","Global Solutions Inc","Digital Ventures LLC","Enterprise Systems Co","Innovation Hub Ltd"][e-1]||`Test Account ${e}`}async simulateDelay(e){const t=e??this.mockConfig.authDelay;t>0&&await new Promise(i=>setTimeout(i,t))}static async getRegisteredReference(e,t){const{ServiceReference:i}=await he(async()=>{const{ServiceReference:s}=await Promise.resolve().then(()=>oi);return{ServiceReference:s}},void 0);return new i(e,"mock-session-auth-provider",t)}};ye.SERVICE_ID="mock.session-auth-provider";ye.SERVICE_DESCRIPTION="Mock session-based authentication provider for development";ye.SERVICE_DEPENDENCIES=[];let B=ye;const ve=class j extends fe{constructor(e,t={}){super(e,t),this.authProvider=null,this.currentUser=null,this.authServiceConfig={autoInit:!0,allowReplace:!1,initTimeout:5e3,authProviderServiceId:B.SERVICE_ID,autoValidate:!1,...t},be(j,this),this.log("🔐","AuthService created",{serviceId:j.SERVICE_ID,authProviderServiceId:this.authServiceConfig.authProviderServiceId,autoValidate:this.authServiceConfig.autoValidate,dependencies:j.SERVICE_DEPENDENCIES})}getServiceId(){return j.SERVICE_ID}getCurrentUser(){return this.currentUser}isAuthenticated(){return this.currentUser!==null}async validateAuthentication(e="validation"){this.log("🔍","Validating authentication...",{operation:e});try{if(!this.authProvider)throw new p("AuthProvider not available - service may not be initialized");const t=await this.authProvider.getCurrentUser(),i=this.createAuthenticatedUser(t);return this.currentUser=i,this.log("✅","Authentication validation successful",{userId:t.id,username:t.username,operation:e}),this.publishUserAuthenticatedEvent(i,e),i}catch(t){if(this.currentUser=null,t instanceof p)throw this.log("❌","Authentication validation failed",{operation:e,error:t.message}),t;{const i=new p("Authentication validation failed",t);throw this.log("❌","Authentication validation failed with unexpected error",{operation:e,error:t}),i}}}async login(){this.log("🚪","Initiating login...");try{if(!this.authProvider)throw new p("AuthProvider not available - service may not be initialized");await this.authProvider.login(),this.log("✅","Login initiated successfully")}catch(e){const t=e instanceof p?e:new p("Login initiation failed",e);throw this.log("❌","Login initiation failed",{error:t.message}),t}}async logout(){const e=this.isAuthenticated(),t=this.currentUser;this.log("🚪","Performing logout...",{wasAuthenticated:e});try{if(!this.authProvider)throw new p("AuthProvider not available - service may not be initialized");await this.authProvider.logout(),this.currentUser=null,this.log("✅","Logout completed successfully",{previousUser:t?.username})}catch(i){const s=i instanceof p?i:new p("Logout failed",i);throw this.log("❌","Logout failed",{error:s.message}),s}}createAuthenticatedUser(e){return new ue(e)}publishUserAuthenticatedEvent(e,t){try{const i=fi.userAuthenticated(e,t),s=this.getEventBus();typeof s.publish=="function"?(s.publish(de.USER_AUTHENTICATED,i.payload),this.log("📡","Published user authenticated event",{userId:e.id,operation:t})):this.log("❌","EventBus.publish method not available")}catch(i){this.log("❌","Failed to publish user authenticated event",{error:i})}}async onInit(){this.log("🚀","Initializing AuthService...");const e=this.authServiceConfig.authProviderServiceId;if(this.authProvider=this.getService(e),!this.authProvider)throw new p(`AuthProvider service '${e}' not found in LayoutContext. Available services: [${this.getContext().getServiceNames().join(", ")}]`);if(this.log("✅","AuthProvider resolved",{authProviderServiceId:e}),this.authServiceConfig.autoValidate)try{await this.validateAuthentication("initialization"),this.log("✅","Auto-validation successful during initialization")}catch(t){this.log("⚠️","Auto-validation failed during initialization (continuing)",{error:t})}this.log("✅","AuthService initialized successfully")}async onDestroy(){this.log("🧹","Destroying AuthService..."),this.currentUser=null,this.authProvider=null,this.log("✅","AuthService destroyed successfully")}static getRegisteredReference(e,t){return new G(e,j.SERVICE_ID,t)}};ve.SERVICE_ID="auth.service";ve.SERVICE_DESCRIPTION="Core authentication service - handles login/logout/validation";ve.SERVICE_DEPENDENCIES=[B.SERVICE_ID];let _=ve;class ct{constructor(e,t,i,s={}){this.cachedComponent=null,this.resolving=null,this.context=e,this.componentName=t,this.resolver=i,this.config={enableLogging:!1,retryInterval:100,maxRetries:20,timeout:5e3,...s},this.logger=f.getInstance().getLogger(`ComponentReference[${t}]`),this.config.enableLogging&&this.logger.debug("Created with config",this.config)}async get(){if(this.cachedComponent)return this.cachedComponent;if(this.resolving)return this.resolving;this.resolving=this.resolveComponent();const e=await this.resolving;return this.resolving=null,e}isAvailable(){return this.cachedComponent!==null}getCached(){return this.cachedComponent}clearCache(){this.config.enableLogging&&this.logger.debug("Cache cleared"),this.cachedComponent=null}getComponentName(){return this.componentName}async resolveComponent(){const e=Date.now();this.config.enableLogging&&this.logger.debug("Starting resolution...");for(let t=0;t<this.config.maxRetries;t++){if(Date.now()-e>this.config.timeout){this.config.enableLogging&&this.logger.warn(`Resolution timed out after ${this.config.timeout}ms`);break}const i=this.tryResolveComponent();if(i)return this.cachedComponent=i,this.config.enableLogging&&this.logger.debug(`Resolved successfully (attempt ${t+1})`),i;t<this.config.maxRetries-1&&await new Promise(s=>setTimeout(s,this.config.retryInterval))}return this.config.enableLogging&&this.logger.warn(`Failed to resolve after ${this.config.maxRetries} attempts`),null}tryResolveComponent(){try{return this.resolver()}catch(e){return this.config.enableLogging&&this.logger.error("Error during resolution",e),null}}}const dt=class ut{static getRegisteredReference(e,t){return new ct(e,ut.COMPONENT_ID,()=>e.getHeader(),t)}};dt.COMPONENT_ID="AppHeader";let bi=dt;const Ce=class Y extends fe{constructor(e,t,i={}){const s={autoInit:!0,allowReplace:!1,initTimeout:5e3,authServiceName:"auth",updateOnInit:!0,...i};super(t,s),this.eventConsumer=null,this.binderConfig=s,this.authServiceRef=e,this.appHeaderRef=bi.getRegisteredReference(t,{enableLogging:!1,retryInterval:100,maxRetries:50}),be(Y,this),this.log("🔗","AppHeaderBinderService created",{serviceId:Y.SERVICE_ID,authServiceName:this.binderConfig.authServiceName,updateOnInit:this.binderConfig.updateOnInit,dependencies:Y.SERVICE_DEPENDENCIES})}getServiceId(){return Y.SERVICE_ID}async updateAppHeader(e=!1){if(!await this.appHeaderRef.get()){this.log("⚠️","AppHeader not available - cannot update UI");return}const i=await this.authServiceRef.get();if(!i){this.log("⚠️","AuthService not available - cannot get authentication state");return}const s=i.getCurrentUser();s?await this.updateAppHeaderWithUser(s):e&&this.log("⚠️","No authenticated user available for AppHeader update")}async handleLogoutAction(){const e=await this.authServiceRef.get();if(!e){this.log("❌","AuthService not available - cannot perform logout");return}this.log("🚺","Handling logout action from UI...");try{await e.logout(),this.log("✅","Logout action completed successfully")}catch(t){this.log("❌","Logout action failed",{error:t}),console.error("Logout failed:",t)}}subscribeToAuthEvents(){const e=this.getEventBus();if(typeof e.consume!="function"){this.log("❌","EventBus.consume method not available - cannot subscribe to auth events");return}try{this.eventConsumer=e.consume(de.USER_AUTHENTICATED,t=>this.handleUserAuthenticated(t)),this.log("📡","Subscribed to authentication events",{event:de.USER_AUTHENTICATED,hasConsumer:this.eventConsumer!==null})}catch(t){this.log("❌","Failed to subscribe to authentication events",{error:t})}}async handleUserAuthenticated(e){this.log("📥","Received user authenticated event",{userId:e.user.id,username:e.user.username,operation:e.operation,accountId:e.user.accountId});try{await this.updateAppHeaderWithUser(e.user)}catch(t){this.log("❌","Failed to update AppHeader with authenticated user",{error:t})}}async updateAppHeaderWithUser(e){const t=await this.appHeaderRef.get();if(!t){this.log("⚠️","AppHeader not available - skipping UI update");return}const i={username:e.username,email:e.email,avatar:void 0};try{t.updateUser(i),this.log("✅","AppHeader updated with authenticated user",{userId:e.id,username:e.username,email:e.email,accountId:e.accountId})}catch(s){this.log("❌","Failed to update AppHeader with user data",{error:s})}}unsubscribeFromAuthEvents(){if(this.eventConsumer)try{this.eventConsumer.unregister(),this.log("📡","Unsubscribed from authentication events")}catch(e){this.log("❌","Failed to unsubscribe from authentication events",{error:e})}finally{this.eventConsumer=null}}async setupUserActionHandlers(){const e=await this.appHeaderRef.get();if(!e){this.log("⚠️","AppHeader not available - cannot setup user action handlers");return}e.setUserMenuHandler(t=>{this.log("🔧","Setting up UserMenu action handlers"),this.log("📝","UserMenu action handlers setup - integration point for logout actions")})}async onInit(){this.log("🚀","Initializing AppHeaderBinderService...");const e=await this.authServiceRef.get();if(!e)throw new p("AuthService could not be resolved via ServiceReference. Check that AuthService is properly registered in LayoutContext.");this.log("✅","AuthService resolved",{authServiceId:e.getServiceId()}),this.subscribeToAuthEvents(),await this.setupUserActionHandlers(),this.binderConfig.updateOnInit&&await this.updateAppHeader(!1),this.log("✅","AppHeaderBinderService initialized successfully")}async onDestroy(){this.log("🧹","Destroying AppHeaderBinderService..."),this.unsubscribeFromAuthEvents(),this.log("✅","AppHeaderBinderService destroyed successfully")}static getRegisteredReference(e,t){return new G(e,"auth.header-binder",t)}};Ce.SERVICE_ID="auth.header-binder";Ce.SERVICE_DESCRIPTION="Authentication UI binding service - bridges AuthService and AppHeader component";Ce.SERVICE_DEPENDENCIES=[_.SERVICE_ID];let $e=Ce;const yi=Object.freeze(Object.defineProperty({__proto__:null,AppHeaderBinderService:$e},Symbol.toStringTag,{value:"Module"})),we=class F extends fe{constructor(e,t={}){super(e,t),this.authService=null,this.sessionAuthProvider=null,this.userServiceConfig={autoInit:!0,allowReplace:!1,initTimeout:5e3,authServiceId:_.SERVICE_ID,sessionAuthProviderServiceId:B.SERVICE_ID,...t},be(F,this),this.log("👤","UserService created",{serviceId:F.SERVICE_ID,authServiceId:this.userServiceConfig.authServiceId,sessionAuthProviderServiceId:this.userServiceConfig.sessionAuthProviderServiceId,dependencies:F.SERVICE_DEPENDENCIES})}getServiceId(){return F.SERVICE_ID}getCurrentUser(){return this.authService?this.authService.getCurrentUser():(this.log("⚠️","AuthService not available - returning null"),null)}isAuthenticated(){return this.authService?this.authService.isAuthenticated():!1}async validateAuthentication(e="validation"){if(!this.authService)throw new p("AuthService not available - service may not be initialized");return this.authService.validateAuthentication(e)}async getAccounts(){if(!this.sessionAuthProvider)throw new p("SessionAuthProvider not available - service may not be initialized");if(!this.isAuthenticated())throw new p("User not authenticated - cannot retrieve accounts");this.log("📋","Retrieving user accounts...");try{const e=await this.sessionAuthProvider.getAccounts();return this.log("✅","Accounts retrieved successfully",{accountCount:e.length}),e}catch(e){const t=e instanceof p?e:new p("Failed to retrieve accounts",e);throw this.log("❌","Account retrieval failed",{error:t.message}),t}}async switchAccount(e){if(!this.sessionAuthProvider)throw new p("SessionAuthProvider not available - service may not be initialized");if(!this.isAuthenticated())throw new p("User not authenticated - cannot switch accounts");this.log("🔄","Switching account...",{accountId:e});try{await this.sessionAuthProvider.switchAccount(e),this.authService&&await this.authService.validateAuthentication("account-switch"),this.publishAccountSwitchedEvent(e),this.log("✅","Account switch successful",{accountId:e})}catch(t){const i=t instanceof p?t:new p("Account switch failed",t);throw this.log("❌","Account switch failed",{accountId:e,error:i.message}),i}}async getCurrentAccountId(){if(!this.sessionAuthProvider)return null;try{return await this.sessionAuthProvider.getCurrentAccountId()}catch(e){return this.log("⚠️","Failed to get current account ID",{error:e}),null}}publishAccountSwitchedEvent(e){try{const t=this.getEventBus();typeof t.publish=="function"?(t.publish("account.switched",{accountId:e,timestamp:new Date().toISOString(),serviceId:F.SERVICE_ID}),this.log("📡","Published account switched event",{accountId:e})):this.log("❌","EventBus.publish method not available")}catch(t){this.log("❌","Failed to publish account switched event",{error:t})}}async onInit(){this.log("🚀","Initializing UserService...");const e=this.userServiceConfig.authServiceId;if(this.authService=this.getService(e),!this.authService)throw new Error(`AuthService '${e}' not found in LayoutContext. Available services: [${this.getContext().getServiceNames().join(", ")}]`);const t=this.userServiceConfig.sessionAuthProviderServiceId,i=this.getService(t);if(i&&"getAccounts"in i&&"switchAccount"in i?this.sessionAuthProvider=i:this.sessionAuthProvider=null,!this.sessionAuthProvider)throw new Error(`SessionAuthProvider '${t}' not found in LayoutContext. Available services: [${this.getContext().getServiceNames().join(", ")}]`);this.log("✅","Dependencies resolved",{authServiceId:e,sessionAuthProviderServiceId:t}),this.log("✅","UserService initialized successfully")}async onDestroy(){this.log("🧹","Destroying UserService..."),this.authService=null,this.sessionAuthProvider=null,this.log("✅","UserService destroyed successfully")}static getRegisteredReference(e,t){return new G(e,F.SERVICE_ID,t)}};we.SERVICE_ID="user.service";we.SERVICE_DESCRIPTION="User account management service - handles multi-tenant account operations";we.SERVICE_DEPENDENCIES=[_.SERVICE_ID,B.SERVICE_ID];let Ye=we;/*! Path-to-RegExp | MIT License | https://github.com/pillarjs/path-to-regexp */const gt="/",ht=o=>o,vi=/^[$_\p{ID_Start}]$/u,Ci=/^[$\u200c\u200d\p{ID_Continue}]$/u,ge="https://git.new/pathToRegexpError",wi={"{":"{","}":"}","(":"(",")":")","[":"[","]":"]","+":"+","?":"?","!":"!"};function A(o){return o.replace(/[.+*?^${}()[\]|/\\]/g,"\\$&")}function*xi(o){const e=[...o];let t=0;function i(){let s="";if(vi.test(e[++t]))for(s+=e[t];Ci.test(e[++t]);)s+=e[t];else if(e[t]==='"'){let n=t;for(;t<e.length;){if(e[++t]==='"'){t++,n=0;break}e[t]==="\\"?s+=e[++t]:s+=e[t]}if(n)throw new TypeError(`Unterminated quote at ${n}: ${ge}`)}if(!s)throw new TypeError(`Missing parameter name at ${t}: ${ge}`);return s}for(;t<e.length;){const s=e[t],n=wi[s];if(n)yield{type:n,index:t++,value:s};else if(s==="\\")yield{type:"ESCAPED",index:t++,value:e[t++]};else if(s===":"){const r=i();yield{type:"PARAM",index:t,value:r}}else if(s==="*"){const r=i();yield{type:"WILDCARD",index:t,value:r}}else yield{type:"CHAR",index:t,value:e[t++]}}return{type:"END",index:t,value:""}}class Si{constructor(e){this.tokens=e}peek(){if(!this._peek){const e=this.tokens.next();this._peek=e.value}return this._peek}tryConsume(e){const t=this.peek();if(t.type===e)return this._peek=void 0,t.value}consume(e){const t=this.tryConsume(e);if(t!==void 0)return t;const{type:i,index:s}=this.peek();throw new TypeError(`Unexpected ${i} at ${s}, expected ${e}: ${ge}`)}text(){let e="",t;for(;t=this.tryConsume("CHAR")||this.tryConsume("ESCAPED");)e+=t;return e}}class pt{constructor(e){this.tokens=e}}function Ei(o,e={}){const{encodePath:t=ht}=e,i=new Si(xi(o));function s(r){const a=[];for(;;){const c=i.text();c&&a.push({type:"text",value:t(c)});const l=i.tryConsume("PARAM");if(l){a.push({type:"param",name:l});continue}const u=i.tryConsume("WILDCARD");if(u){a.push({type:"wildcard",name:u});continue}if(i.tryConsume("{")){a.push({type:"group",tokens:s("}")});continue}return i.consume(r),a}}const n=s("END");return new pt(n)}function Ii(o,e={}){const{decode:t=decodeURIComponent,delimiter:i=gt}=e,{regexp:s,keys:n}=Mi(o,e),r=n.map(a=>t===!1?ht:a.type==="param"?t:c=>c.split(i).map(t));return function(c){const l=s.exec(c);if(!l)return!1;const u=l[0],d=Object.create(null);for(let g=1;g<l.length;g++){if(l[g]===void 0)continue;const h=n[g-1],S=r[g-1];d[h.name]=S(l[g])}return{path:u,params:d}}}function Mi(o,e={}){const{delimiter:t=gt,end:i=!0,sensitive:s=!1,trailing:n=!0}=e,r=[],a=[],c=s?"":"i",u=(Array.isArray(o)?o:[o]).map(h=>h instanceof pt?h:Ei(h,e));for(const{tokens:h}of u)for(const S of re(h,0,[])){const E=Li(S,t,r);a.push(E)}let d=`^(?:${a.join("|")})`;return n&&(d+=`(?:${A(t)}$)?`),d+=i?"$":`(?=${A(t)}|$)`,{regexp:new RegExp(d,c),keys:r}}function*re(o,e,t){if(e===o.length)return yield t;const i=o[e];if(i.type==="group"){const s=t.slice();for(const n of re(i.tokens,0,s))yield*re(o,e+1,n)}else t.push(i);yield*re(o,e+1,t)}function Li(o,e,t){let i="",s="",n=!0;for(let r=0;r<o.length;r++){const a=o[r];if(a.type==="text"){i+=A(a.value),s+=a.value,n||(n=a.value.includes(e));continue}if(a.type==="param"||a.type==="wildcard"){if(!n&&!s)throw new TypeError(`Missing text after "${a.name}": ${ge}`);a.type==="param"?i+=`(${ki(e,n?"":s)}+)`:i+="([\\s\\S]+)",t.push(a),s="",n=!1;continue}}return i}function ki(o,e){return e.length<2?o.length<2?`[^${A(o+e)}]`:`(?:(?!${A(o)})[^${A(e)}])`:o.length<2?`(?:(?!${A(e)})[^${A(o)}])`:`(?:(?!${A(e)}|${A(o)})[\\s\\S])`}function Ai(o){try{return decodeURIComponent(o)}catch{return o}}function mt(o,e,t,i,s){let n,r,a=0;return{next(c){if(o===c)return{done:!0,value:!1};if(!n){const l=o,u=!l.children;if(l.match||(l.match=Ii(l.path||"",{end:u,...t})),n=l.match(i),n){const{path:d}=n;return n.path=!u&&d.charAt(d.length-1)==="/"?d.substr(1):d,n.params={...s,...n.params},{done:!1,value:{route:o,baseUrl:e,path:n.path,params:n.params}}}}if(n&&o.children)for(;a<o.children.length;){if(!r){const u=o.children[a];u.parent=o,r=mt(u,e+n.path,t,i.substr(n.path.length),n.params)}const l=r.next(c);if(!l.done)return{done:!1,value:l.value};r=null,a++}return{done:!0,value:!1}}}}function Ti(o,e){if(typeof o.route.action=="function")return o.route.action(o,e)}function Pi(o,e){let t=e;for(;t;)if(t=t.parent,t===o)return!0;return!1}class $i{constructor(e,t){if(!e||typeof e!="object")throw new TypeError("Invalid routes");this.options={decode:Ai,...t},this.baseUrl=this.options.baseUrl||"",this.root=Array.isArray(e)?{path:"",children:e,parent:null}:e,this.root.parent=null}resolve(e){const t={router:this,...this.options.context,...typeof e=="string"?{pathname:e}:e},i=mt(this.root,this.baseUrl,this.options,t.pathname.substr(this.baseUrl.length)),s=this.options.resolveRoute||Ti;let n,r,a=t;function c(l,u=!n.done&&n.value.route,d){const g=d===null&&!n.done&&n.value.route;if(n=r||i.next(g),r=null,!l&&(n.done||!Pi(u,n.value.route)))return r=n,Promise.resolve(null);if(n.done){const h=new Error("Route not found");return h.status=404,Promise.reject(h)}return a={...t,...n.value},Promise.resolve(s(a,n.value.params)).then(h=>h??c(l,u,h))}return t.next=c,Promise.resolve().then(()=>c(!0,this.root)).catch(l=>{if(this.options.errorHandler)return this.options.errorHandler(l,a);throw l})}}class Qe{constructor(e,t,i,s,n){this._failed=!1,this._failure=null,this.path=e,this.basePath=n||"/",this.params=t,this.layoutContext=i,this.accountId=s}getPath(){return this.path}getBasePath(){return this.basePath}getParams(){return{...this.params}}getParam(e){return this.params[e]}hasParam(e){return e in this.params}getAccountId(){return this.accountId}getLayoutContext(){return this.layoutContext}fail(e){this._failed=!0,this._failure=e}failed(){return this._failed}failure(){return this._failure}}class Xe{constructor(e,t,i=!1){this.layoutContext=e,this.activePage=t,this.enableLogging=i,this.logger=f.getInstance().getLogger("HierarchicalBreadcrumbs")}getBreadcrumbsComponent(){return this.layoutContext.getHeader()?.getBreadcrumbsComponent()||null}findPageScopeIndex(){const e=this.getBreadcrumbsComponent();if(!e)return-1;const t=e.getBreadcrumbs(),i=this.activePage.getPageId();for(let r=0;r<t.length;r++)if(t[r].id===i)return r;const s=i.toLowerCase();for(let r=0;r<t.length;r++)if(t[r].id.toLowerCase()===s)return this.enableLogging&&this.logger.debug(`Found case-insensitive match for ${i}: ${t[r].id} at index ${r}`),r;const n=t.length;return this.enableLogging&&this.logger.warn(`Page ID "${i}" not found in breadcrumbs. Scope limited to append-only after index ${n}`,{currentBreadcrumbs:t.map(r=>r.id),pageId:i,fallbackScope:"append-only"}),n}getScopedBreadcrumbs(){const e=this.getBreadcrumbsComponent();if(!e)return null;const t=e.getBreadcrumbs(),i=this.findPageScopeIndex();if(i===-1)return null;const s=t.slice(0,i),n=t.slice(i);return{parentItems:s,scopedItems:n,scopeIndex:i}}applyScopedChanges(e){const t=this.getScopedBreadcrumbs();if(!t){this.enableLogging&&this.logger.warn("Component not available for applying changes");return}const{parentItems:i}=t,s=[...i,...e],n=this.getBreadcrumbsComponent();n&&(n.setBreadcrumbs(s),this.enableLogging&&this.logger.debug(`Applied scoped changes for ${this.activePage.getPageId()}: ${e.length} scoped items`))}set(e){this.applyScopedChanges(e)}clear(){this.applyScopedChanges([])}add(e){const t=this.getScopedBreadcrumbs();if(!t){this.enableLogging&&this.logger.warn("Component not available for add operation");return}const{scopedItems:i}=t,s=[...i,e];this.applyScopedChanges(s),this.enableLogging&&this.logger.debug(`Added: ${e.text}`)}remove(e){const t=this.getScopedBreadcrumbs();if(!t){this.enableLogging&&this.logger.warn("Component not available for remove operation");return}const{scopedItems:i}=t,s=i.filter(n=>n.id!==e);if(s.length===i.length){this.enableLogging&&this.logger.debug(`Item ${e} not in scope, ignoring`);return}this.applyScopedChanges(s),this.enableLogging&&this.logger.debug(`Removed: ${e}`)}update(e,t){const i=this.getScopedBreadcrumbs();if(!i){this.enableLogging&&this.logger.warn("Component not available for update operation");return}const{scopedItems:s}=i,n=s.findIndex(a=>a.id===e);if(n===-1){this.enableLogging&&this.logger.debug(`Item ${e} not in scope for update, ignoring`);return}const r=[...s];r[n]={...r[n],...t},this.applyScopedChanges(r),this.enableLogging&&this.logger.debug(`Updated: ${e}`)}get(){const e=this.getScopedBreadcrumbs();return e?e.scopedItems:(this.enableLogging&&this.logger.warn("Component not available for get operation"),[])}isAvailable(){return this.getBreadcrumbsComponent()!==null}getDebugInfo(){const e=this.getScopedBreadcrumbs();if(!e)return null;const t=this.getBreadcrumbsComponent();if(!t)return null;const i=t.getBreadcrumbs(),s=e.scopeIndex===i.length,n=s?"append-only":"hierarchical";return{pageId:this.activePage.getPageId(),scopeIndex:e.scopeIndex,parentCount:e.parentItems.length,scopedCount:e.scopedItems.length,totalCount:e.parentItems.length+e.scopedItems.length,isFallbackMode:s,scopeType:n}}}class Di{constructor(e,t,i={},s){if(this.ready=!1,this.page=s||null,this.routeContext=e,this.layoutContext=t,this.createdAt=Date.now(),this.config={initializeBreadcrumbs:i.initializeBreadcrumbs??!0,breadcrumbInitDelay:i.breadcrumbInitDelay??0,enableDebugLogging:i.enableDebugLogging??!1},this.logger=f.getInstance().getLogger("PageContext"),this.breadcrumbsManager=this.createBreadcrumbsManager(),this.config.breadcrumbInitDelay>0?setTimeout(()=>{this.initialize()},this.config.breadcrumbInitDelay):setTimeout(()=>{this.initialize()},0),this.config.enableDebugLogging){const n=this.page?`page: ${this.page.getPageId()}`:"no page yet";this.logger.debug(`Created (${n})`,{config:this.config,createdAt:this.createdAt})}}initialize(){if(this.config.initializeBreadcrumbs)if(this.breadcrumbsManager.isAvailable()){if(this.ready=!0,this.config.enableDebugLogging){const e=this.page?this.page.getPageId():"no page yet";this.logger.debug(`Initialized successfully (${e})`)}}else this.config.enableDebugLogging&&this.logger.warn("Breadcrumbs not available yet, retrying..."),setTimeout(()=>{this.initialize()},50);else if(this.ready=!0,this.config.enableDebugLogging){const e=this.page?this.page.getPageId():"no page yet";this.logger.debug(`Initialized (breadcrumbs disabled) (${e})`)}}getPage(){return this.page}getRouteContext(){return this.routeContext}setPage(e){this.page=e,this.breadcrumbsManager=this.createBreadcrumbsManager(),this.config.enableDebugLogging&&this.logger.debug(`Page associated: ${e.getPageId()}`)}createPage(e,t){const i=e(t,this);return this.setPage(i),this.config.enableDebugLogging&&this.logger.debug(`Created and associated page: ${i.getPageId()}`),i}breadcrumbs(){return this.breadcrumbsManager}isReady(){return this.ready}getCreatedAt(){return this.createdAt}getConfig(){return{...this.config}}getLayoutContext(){return this.layoutContext}setDebugLogging(e){this.config.enableDebugLogging=e,this.breadcrumbsManager instanceof Xe&&(this.breadcrumbsManager.enableLogging=e)}createBreadcrumbsManager(){return this.page?new Xe(this.layoutContext,this.page,this.config.enableDebugLogging):{set:()=>{},clear:()=>{},add:()=>{},remove:()=>{},update:()=>{},get:()=>[],isAvailable:()=>!1}}}class V extends lt{constructor(e,t,i={}){super(),this.initialized=!1,this.destroyed=!1,this.eventListeners=[],this.params={},this.chainProviderUnsubscriber=null,this.logger=f.getInstance().getLogger(`PageComponent:${this.constructor.name}`),this.mainContent=e,this.pageContext=t,this.config=i;const s=t.getRouteContext();this.pagePath=s.getPath(),this.params=s.getParams(),this.pageTitle=i.pageTitle||"Page",this.pageId=i.pageId||this.constructor.name}async init(){if(!this.mainContent.isReady()){this.logger.warn("mainContent not ready");return}if(this.initialized||this.destroyed){this.logger.warn("Cannot initialize - already initialized or destroyed");return}try{this.logger.debug("Initializing..."),document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e,{once:!0})}),await this.onInit(),this.setupEventListeners(),this.setupKeyboardShortcuts(),this.logger.debug("Registering as chain hotkey provider..."),this.chainProviderUnsubscriber=this.layoutContext.registerChainProvider(this),this.logger.debug("Chain provider registered successfully"),this.layoutContext.setActivePage(this),this.initialized=!0,this.logger.info("Initialized successfully"),await this.onPostInit()}catch(e){throw this.logger.error("Initialization failed",e),e}}async destroy(){if(this.destroyed){this.logger.warn("Already destroyed");return}try{this.logger.debug("Destroying..."),this.cleanupChainProvider(),this.layoutContext.deactivatePage(this);try{this.onDestroy()}catch(e){this.logger.error("onDestroy failed",e)}this.removeAllEventListeners(),this.clearTimers(),this.destroyed=!0,this.initialized=!1,this.logger.info("Destroyed successfully")}catch(e){this.logger.error("Destruction failed",e),this.destroyed=!0,this.initialized=!1}}addEventListener(e,t,i,s){e.addEventListener(t,i,s),this.eventListeners.push({element:e,event:t,handler:i})}removeAllEventListeners(){this.eventListeners.forEach(({element:e,event:t,handler:i})=>{e.removeEventListener(t,i)}),this.eventListeners=[]}setupEventDelegation(){const e=this.mainContent.getElement();e?this.addEventListener(e,"click",t=>{const s=t.target.closest("[data-action]");if(s){const n=s.getAttribute("data-action");n&&(t.preventDefault(),this.handleAction(n,s,t))}}):this.logger.warn("{}: Cannot setup event delegation - MainContent container not available",this.constructor.name)}handleAction(e,t,i){const s=`handle${this.capitalizeFirst(e)}`;typeof this[s]=="function"?this[s](t,i):this.logger.warn('{}: No handler found for action "{}" ({})',this.constructor.name,e,s)}setupKeyboardShortcuts(){this.logger.debug("{}: Page-specific hotkeys will be registered via HotkeyProvider interface",this.constructor.name)}handleEscape(e){document.querySelectorAll('[aria-expanded="true"]').forEach(i=>{i.setAttribute("aria-expanded","false")})}capitalizeFirst(e){return e.charAt(0).toUpperCase()+e.slice(1)}clearTimers(){}updatePageTitle(e){this.pageTitle=e,document.title=e;const t=document.getElementById("current_page_title");t&&(t.textContent=e)}showLoading(e){const t=e||"Loading...";this.logger.info("{}: {}",this.constructor.name,t)}hideLoading(){this.logger.info("{}: Loading complete",this.constructor.name)}showError(e,t){this.logger.error("{}: {}",this.constructor.name,e,t)}getElement(e,t=!0){const i=document.querySelector(e);return!i&&t&&this.logger.error("{}: Required element not found: {}",this.constructor.name,e),i}getElements(e){return document.querySelectorAll(e)}get isInitialized(){return this.initialized}get isDestroyed(){return this.destroyed}get getPageTitle(){return this.pageTitle}setParams(e){this.params=e}getParams(){return this.params}get layoutContext(){return this.mainContent.getLayoutContext()}getPageContext(){return this.pageContext}hasPageContext(){return!0}getHotkeyProviderId(){return this.constructor.name}getProviderPriority(){return 200}getChainHotkeys(){const e=new Map;return e.set("Escape",{key:"Escape",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🔤 {} - ESC key pressed via chain system",this.constructor.name),this.handleEscape(t.event),t.next()},description:`ESC key handling for ${this.constructor.name}`,priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e}getDefaultChainBehavior(){return"next"}cleanupChainProvider(){this.chainProviderUnsubscriber&&(this.chainProviderUnsubscriber(),this.chainProviderUnsubscriber=null,this.logger.debug("{} - Chain provider unregistered",this.constructor.name))}getPageInfo(){return{id:this.pageId,name:this.pageTitle,path:this.pagePath,metadata:{className:this.constructor.name,initialized:this.initialized,destroyed:this.destroyed}}}getPageId(){return this.pageId}}class ft extends V{constructor(e,t){super(e,t,{pageTitle:"Dashboard - Opinion",pageId:"dashboard"}),this.apiService=null,this.state={surveys:[],selectedSurveyId:0,statusFilter:1,comparisonFilter:0},this.logger=f.getInstance().getLogger("DashboardPage")}async onInit(){try{this.logger.info("Initializing..."),document.readyState==="loading"&&await new Promise(i=>{document.addEventListener("DOMContentLoaded",i,{once:!0})});const e=this.layoutContext;if(this.apiService=e.getService(Te.SERVICE_ID),!this.apiService)throw new Error("MockApiService not available in LayoutContext");this.createDashboardContent();const t=await this.authenticateUser();this.state.user=t.userInfo,this.state.accountId=this.getAccountId(t),this.updateUserInterface(),await this.loadSurveys(),this.initializeDateRange(),await this.loadActivityChart(),this.checkWelcomeMessage(),document.title="Dashboard - Opinion",this.logger.info("Ready")}catch(e){const t=e instanceof Error?e:new Error(String(e));this.logError("Dashboard initialization failed",t),this.handleError(e)}}createDashboardContent(){try{this.mainContent.setContent(`
        <div class="page-content">
          <!-- Dashboard Header (outside page border) -->
          <div class="dashboard-header" style="background: #f8f9fa; padding: 20px; margin-bottom: 20px; border-radius: 8px;">
            <h1 style="margin: 0 0 10px 0; color: #333;">📊 Dashboard</h1>
            <p style="margin: 0; color: #666;">Welcome to your Opinion Dashboard. Manage your surveys and view analytics from here.</p>
          </div>

          <!-- Dashboard Content (inside page border) -->
          <div class="main-content-card">
            <!-- Quick Actions Section -->
            <div class="content-container" style="margin-bottom: 24px;">
              <h3 style="margin-bottom: 16px; color: #333;">Quick Actions</h3>
              <div class="main-content-flex-row">
                <button id="button_create_survey" class="button-green">Create Survey</button>
              </div>
            </div>

          <!-- Chart Section -->
          <div class="content-container" style="margin-bottom: 24px;">
            <h3 style="margin-bottom: 12px;">Survey Analytics</h3>
            
            <!-- Survey Selection -->
            <div class="main-content-flex-row" style="margin-bottom: 16px; align-items: center;">
              <label for="select_surveys" style="margin-right: 12px;">Survey:</label>
              <select id="select_surveys" style="margin-right: 16px;">
                <option value="0">All surveys</option>
              </select>
              
              <div id="datepicker_date_range_value" style="margin-left: auto; color: #666;">Today</div>
            </div>
            
            <!-- Statistics Row -->
            <div class="main-content-flex-row" style="margin-bottom: 16px; gap: 24px;">
              <div style="text-align: center;">
                <div class="label-started" style="font-size: 24px; font-weight: bold; color: #007bff;">0</div>
                <div style="font-size: 14px; color: #666;">Started</div>
              </div>
              <div style="text-align: center;">
                <div class="label-completed" style="font-size: 24px; font-weight: bold; color: #28a745;">0</div>
                <div style="font-size: 14px; color: #666;">Completed</div>
              </div>
              <div style="text-align: center;">
                <div class="label-partial" style="font-size: 24px; font-weight: bold; color: #ffc107;">0</div>
                <div style="font-size: 14px; color: #666;">Partial</div>
              </div>
              <div style="text-align: center;">
                <div class="label-completion-rate" style="font-size: 24px; font-weight: bold; color: #17a2b8;">0.00%</div>
                <div style="font-size: 14px; color: #666;">Completion Rate</div>
              </div>
            </div>
            
            <!-- Chart Container -->
            <div id="chart" style="height: 400px; border: 1px solid #ddd; border-radius: 4px; display: flex; align-items: center; justify-content: center; color: #666;">
              Chart will be displayed here
            </div>
          </div>

          <!-- Recent Surveys Section -->
          <div class="content-container">
            <h3 style="margin-bottom: 12px;">Recent Surveys</h3>
            <div style="overflow-x: auto;">
              <table style="width: 100%; border-collapse: collapse;">
                <thead>
                  <tr style="background-color: #f8f9fa; border-bottom: 2px solid #dee2e6;">
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">ID</th>
                    <th style="padding: 12px 8px; text-align: center; font-weight: 600;">Status</th>
                    <th style="padding: 12px 8px; text-align: left; font-weight: 600;">Title</th>
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">Started</th>
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">Completed</th>
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">Rate</th>
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">Partial</th>
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">DQ</th>
                    <th style="padding: 12px 8px; text-align: right; font-weight: 600;">Avg Time</th>
                    <th style="padding: 12px 8px; text-align: left; font-weight: 600;">Status</th>
                    <th style="padding: 12px 8px; text-align: left; font-weight: 600;">Modified</th>
                  </tr>
                </thead>
                <tbody id="survey_table_body">
                  <tr>
                    <td colspan="11" style="padding: 20px; text-align: center; color: #666;">Loading surveys...</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>

          <!-- Welcome container (for new users with no surveys) -->
          <div id="container_welcome" style="display: none; text-align: center; padding: 40px; background-color: #f8f9fa; border-radius: 8px; margin-top: 24px;">
            <h3 style="color: #333; margin-bottom: 16px;">Welcome to Opinion!</h3>
            <p style="color: #666; margin-bottom: 24px;">You haven't created any surveys yet. Get started by creating your first survey.</p>
            <button class="button-green">Create Your First Survey</button>
          </div>
          </div>
        </div>
      `),this.logger.debug("Dashboard content created programmatically"),this.setupEventListeners(),this.logger.info("Dashboard content ready")}catch(e){const t=e instanceof Error?e:new Error(String(e));throw this.logError("Failed to create dashboard content",t),e}}setupEventListeners(){this.setupDashboardEventListeners(),this.logger.debug("Dashboard-specific event listeners setup")}setupDashboardEventListeners(){const e=document.getElementById("select_surveys");e&&e.addEventListener("change",s=>{const n=s.target;this.state.selectedSurveyId=parseInt(n.value),this.loadActivityChart()});const t=document.getElementById("button_status");t&&t.addEventListener("click",()=>{const s=parseInt(t.dataset.value||"1");this.state.statusFilter=s,this.loadActivityChart()});const i=document.getElementById("button_create_survey");i&&i.addEventListener("click",s=>{s.preventDefault(),this.createSurvey()})}onDestroy(){if(this.chartInstance)try{this.chartInstance.destroy()}catch(e){this.logger.warn("Error destroying chart:",e instanceof Error?e:new Error(String(e)))}this.logger.info("Dashboard page destroyed")}async authenticateUser(){if(!this.apiService)throw new Error("API service not available");try{return await this.apiService.validateUser()}catch(e){throw e instanceof Error&&e.message.includes("NotSignedIn")&&this.redirectToLogin(),e}}getAccountId(e){const t=this.getCookie("aid");if(t&&e.accounts){const i=e.accounts.find(s=>s.id.toString()===t);if(i)return i.id}return e.accountId||e.userInfo.id}async loadSurveys(){if(!(!this.state.accountId||!this.apiService))try{const e=await this.apiService.getOpinionsList({accountId:this.state.accountId,top:100,orderByRecent:!1});this.state.surveys=e.list,this.updateSurveysList(),this.updateRecentSurveysTable()}catch(e){const t=e instanceof Error?e:new Error(String(e));this.logError("Failed to load surveys",t),this.state.surveys=[]}}async loadActivityChart(){if(!(!this.state.accountId||!this.apiService))try{const e=await this.apiService.getActivityChart({accountId:this.state.accountId,opinionId:this.state.selectedSurveyId||void 0,fromDate:this.state.fromDate,toDate:this.state.toDate,graphBy:3});this.updateStatistics(e),this.renderChart(e)}catch(e){const t=e instanceof Error?e:new Error(String(e));this.logError("Failed to load chart data",t)}}updateSurveysList(){const e=document.getElementById("select_surveys");e&&(e.innerHTML='<option value="0">All surveys</option>',this.state.surveys.forEach(t=>{const i=document.createElement("option");i.value=t.id.toString(),i.textContent=t.title,e.appendChild(i)}))}updateRecentSurveysTable(){const e=document.getElementById("survey_table_body");if(!e)return;e.innerHTML="",[...this.state.surveys].sort((i,s)=>new Date(s.updated||s.created).getTime()-new Date(i.updated||i.created).getTime()).slice(0,5).forEach(i=>{const s=document.createElement("tr");s.innerHTML=`
        <td style="text-align: right;">${i.id}</td>
        <td><span class="survey-status ${i.status||"draft"}">&nbsp;</span></td>
        <td><a href="/surveys/${i.id}/edit" title="Edit Survey">${i.title}</a></td>
        <td style="text-align: right;">0</td>
        <td style="text-align: right;">0</td>
        <td style="text-align: right;">0.00%</td>
        <td style="text-align: right;">0</td>
        <td style="text-align: right;">0</td>
        <td style="text-align: right;">--</td>
        <td>--</td>
        <td>${this.formatDate(new Date(i.updated||i.created))}</td>
      `,e.appendChild(s)})}initializeDateRange(){const e=new Date;this.state.fromDate=this.formatDate(e),this.state.toDate=this.formatDate(e);const t=document.getElementById("datepicker_date_range_value");t&&(t.textContent=e.toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"}))}checkWelcomeMessage(){if(this.state.surveys.length===0){const e=document.getElementById("container_welcome");e&&(e.style.display="block")}}updateUserInterface(){if(!this.state.user)return;document.querySelectorAll(".username, #label_username, #user_menu_name").forEach(t=>{t.textContent=this.state.user?.username||"User"}),this.updateSidebarCounts()}updateStatistics(e){const t=e.charts.totals.completed+e.charts.totals.partial,i=t>0?(e.charts.totals.completed/t*100).toFixed(2):"0.00";this.updateElement(".label-started",this.addCommas(t)),this.updateElement(".label-completed",this.addCommas(e.charts.totals.completed)),this.updateElement(".label-partial",this.addCommas(e.charts.totals.partial)),this.updateElement(".label-completion-rate",`${i}%`)}renderChart(e){const t=document.getElementById("chart");t&&(t.innerHTML=`
      <div style="background: #f8f9fa; padding: 20px; border-radius: 4px; text-align: center;">
        <p>Chart data loaded successfully</p>
        <p>Started: ${e.charts.totals.completed+e.charts.totals.partial}</p>
        <p>Completed: ${e.charts.totals.completed}</p>
        <p>Partial: ${e.charts.totals.partial}</p>
      </div>
    `)}updateSidebarCounts(){}formatDate(e){return e.toISOString().split("T")[0]}addCommas(e){return e.toString().replace(/\B(?=(\d{3})+(?!d))/g,",")}updateElement(e,t){const i=document.querySelector(e);i&&(i.textContent=t)}getCookie(e){const i=`; ${document.cookie}`.split(`; ${e}=`);return i.length===2&&i.pop()?.split(";").shift()||null}redirectToLogin(){const e=encodeURIComponent(window.location.href);window.location.href=`/login?ret=${e}`}handleError(e){const t=e instanceof Error?e:new Error(String(e));this.logError("Dashboard error",t),alert(`An error occurred while loading the dashboard: ${t.message}`)}createSurvey(){window.location.href="/surveys/create"}logError(e,t){this.logger.error(`${e}: ${t.message}`),console.group(`🔥 ${e}`),console.error("Error message:",t.message),console.error("Error stack:",t.stack),console.error("Error object:",t),console.groupEnd()}}window.feedback=function(){console.log("Feedback function called - implement modal")};class Ue extends V{constructor(e,t){super(e,t,{pageId:"debug",pageTitle:"Debug"}),this.logger=f.getInstance().getLogger(Ue),this.responsiveModeUnsubscribe=null,this.eventMonitoringActive=!1,this.layoutEventUnsubscribers=[],this.eventStats={totalEvents:0,eventCounts:new Map,startTime:0,lastEventTime:0}}async onInit(){try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),await this.loadTemplate(),this.setupPageHandlers(),document.title="Debug - Opinion"}catch(e){throw this.logger.error("❌ DEBUGPAGE - Initialization failed:",e),e}}async onPostInit(){this.updateViewportInfoFromContext(this.mainContent.getLayoutContext()),this.updateLayoutStatus(),this.updateComponentStatusDetails(),this.updateHotkeyStatus(),this.setInitialBreadcrumb()}onDestroy(){this.responsiveModeUnsubscribe&&(this.responsiveModeUnsubscribe(),this.responsiveModeUnsubscribe=null),this.stopEventMonitoring()}setupEventListeners(){}async loadTemplate(){this.createFallbackTemplate()}createFallbackTemplate(){const e=this.mainContent,t=e?.getElement()||document.getElementById("app");if(t){const i=`
        <div class="page-content">
          <div class="debug-header" style="background: #f8f9fa; padding: 20px; margin-bottom: 20px; border-radius: 8px;">
            <h1 style="margin: 0 0 10px 0; color: #333;">🛠️ Debug Page</h1>
            <p style="margin: 0; color: #666;">This page uses the regular app layout system with global header, sidebar, and footer components.</p>
          </div>


          <div class="debug-content" style="background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <h2 style="margin-top: 0; color: #333;">Debug Information</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin: 20px 0;">
              <div>
                <h4 style="margin: 0 0 10px 0; color: #555;">📱 Viewport & Layout:</h4>
                <div id="viewport_info" style="font-family: monospace; background: #f1f3f4; padding: 10px; border-radius: 4px; font-size: 12px;">Loading...</div>
              </div>
              <div>
                <h4 style="margin: 0 0 10px 0; color: #555;">📊 LayoutContext Status:</h4>
                <div id="layout_status" style="font-family: monospace; background: #f1f3f4; padding: 10px; border-radius: 4px; font-size: 12px;">Checking...</div>
              </div>
              <div>
                <h4 style="margin: 0 0 10px 0; color: #555;">⌨️ Hotkey System Status:</h4>
                <div id="hotkey_status" style="font-family: monospace; background: #f1f3f4; padding: 10px; border-radius: 4px; font-size: 12px;">Checking...</div>
              </div>
            </div>


            <div style="margin: 30px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">Test Console</h3>
              <div id="test_console" style="background: #1e1e1e; color: #fff; padding: 15px; border-radius: 4px; font-family: monospace; font-size: 13px; height: 200px; overflow-y: auto;"></div>
            </div>

            <div style="margin: 30px 0;">
              <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                <h3 style="color: #333; margin: 0;">🏗️ Component Status Details</h3>
                <div style="display: flex; gap: 8px;">
                  <button id="toggle_all_components" style="padding: 8px 12px; background: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500; font-size: 11px; transition: all 0.2s ease;" onmouseover="this.style.background='#545b62'; this.style.transform='scale(1.05)'" onmouseout="this.style.background='#6c757d'; this.style.transform='scale(1)'">🔽 Expand All</button>
                  <button id="refresh_component_status" style="padding: 8px 16px; background: #17a2b8; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500; font-size: 12px; transition: all 0.2s ease;" onmouseover="this.style.background='#138496'; this.style.transform='scale(1.05)'" onmouseout="this.style.background='#17a2b8'; this.style.transform='scale(1)'">🔄 Refresh</button>
                </div>
              </div>
              <div id="component_status_details" style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; font-family: monospace; font-size: 12px;">Loading component status...</div>
            </div>

            <div style="margin: 30px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">📡 Layout Events Monitor</h3>
              <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">Event Controls:</h4>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="start_event_monitor" style="padding: 8px 12px; background: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">▶️ Start Monitor</button>
                    <button id="stop_event_monitor" style="padding: 8px 12px; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">⏹️ Stop Monitor</button>
                    <button id="clear_event_log" style="padding: 8px 12px; background: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🗑️ Clear Events</button>
                    <button id="trigger_layout_test" style="padding: 8px 12px; background: #fd7e14; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🔄 Trigger Test Event</button>
                  </div>
                </div>
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">Event Log:</h4>
                  <div id="layout_events_console" style="background: #1a1a1a; color: #00ff00; padding: 15px; border-radius: 4px; font-family: monospace; font-size: 12px; height: 300px; overflow-y: auto; border: 1px solid #333;"></div>
                </div>
                <div>
                  <h4 style="margin: 0 0 10px 0; color: #555;">Event Statistics:</h4>
                  <div id="event_stats" style="background: #e9ecef; padding: 10px; border-radius: 4px; font-family: monospace; font-size: 13px;">Monitoring stopped. Click 'Start Monitor' to begin tracking events.</div>
                </div>
                <div style="margin-top: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">Layout Constraints:</h4>
                  <div style="background: #fff3cd; padding: 10px; border-radius: 4px; font-size: 12px; color: #856404; border: 1px solid #ffeaa7;">
                    📱 <strong>Mobile Layout:</strong> Compact mode is disabled on mobile layout. Mobile uses overlay sidebar mode instead of compact/expanded states.
                  </div>
                </div>
              </div>
            </div>

            <div style="margin: 30px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">⌨️ Chain Hotkey Test Guide</h3>
              <div style="background: #fff3cd; padding: 20px; border-radius: 8px; border-left: 4px solid #ffc107; margin-bottom: 20px;">
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #856404;">🎯 Debug Page Hotkeys (Active Now):</h4>
                  <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; margin: 10px 0; font-size: 13px;">
                    <div style="background: rgba(255,255,255,0.7); padding: 10px; border-radius: 4px;">
                      <strong style="color: #495057;">📊 Event Monitoring:</strong><br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+S</code> Start Monitor<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+X</code> Stop Monitor<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+C</code> Clear Log<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+T</code> Test Event<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+R</code> Refresh Status<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+E</code> Expand/Collapse
                    </div>
                    <div style="background: rgba(255,255,255,0.7); padding: 10px; border-radius: 4px;">
                      <strong style="color: #495057;">💬 Message Testing:</strong><br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Shift+1 (!)</code> Error Message<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Shift+2 (@)</code> Warning Message<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Shift+3 (#)</code> Info Message<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Shift+4 ($)</code> Success Message
                    </div>
                    <div style="background: rgba(255,255,255,0.7); padding: 10px; border-radius: 4px;">
                      <strong style="color: #495057;">🛠️ Utilities:</strong><br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Shift+Backspace</code> Clear Messages<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+L</code> Clear Console<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Ctrl+Shift+H</code> Hotkey Help<br>
                      <code style="background: #f8f9fa; padding: 2px 4px; border-radius: 2px;">Escape</code> Stop Monitoring
                    </div>
                  </div>
                </div>
                
                
                <div style="margin-bottom: 10px;">
                  <h4 style="margin: 0 0 10px 0; color: #856404;">🧪 Quick Chain System Test:</h4>
                  <div style="background: rgba(255,255,255,0.8); padding: 12px; border-radius: 4px; font-size: 13px;">
                    <ol style="margin: 0; padding-left: 20px; line-height: 1.6;">
                      <li><strong>Test Debug Hotkeys:</strong> Press <code style="background: #e9ecef; padding: 1px 3px;">Ctrl+Shift+S</code> to start monitoring, then <code style="background: #e9ecef; padding: 1px 3px;">Shift+1</code> (!) for an error message</li>
                      <li><strong>Test Message Hotkeys:</strong> Try <code style="background: #e9ecef; padding: 1px 3px;">Shift+2</code> (@), <code style="background: #e9ecef; padding: 1px 3px;">Shift+3</code> (#), <code style="background: #e9ecef; padding: 1px 3px;">Shift+4</code> ($) for different message types</li>
                      <li><strong>Test Chain Priority:</strong> Press <code style="background: #e9ecef; padding: 1px 3px;">Ctrl+Shift+H</code> to see debug help, then <code style="background: #e9ecef; padding: 1px 3px;">Escape</code> to test cooperative handling</li>
                      <li><strong>Check Logs:</strong> Watch the Test Console and Layout Events log for hotkey execution details</li>
                    </ol>
                  </div>
                </div>
                
                <div style="background: #d1ecf1; padding: 10px; border-radius: 4px; font-size: 12px; color: #0c5460;">
                  📝 <strong>Chain System Notes:</strong> All hotkeys above are fully functional and working. Debug page hotkeys (priority 200) run alongside PageComponent ESC handling. Use <code style="background: rgba(255,255,255,0.7); padding: 1px 3px;">Ctrl+Shift+H</code> anytime to see the complete hotkey reference.<br>
                  🌍 <strong>Browser Compatibility:</strong> Using Ctrl+Shift+ and actual character codes (!, @, #, $) for maximum compatibility across Firefox, Chrome, and Safari.
                </div>
              </div>
            </div>

            <div style="margin: 30px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">🍞 Breadcrumbs Test Console</h3>
              
              <!-- PageContext Breadcrumbs Tests (Hierarchical/Scoped) -->
              <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #17a2b8;">
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">📋 PageContext Tests (Hierarchical/Scoped):</h4>
                  <div style="background: #d1ecf1; padding: 10px; border-radius: 4px; font-size: 12px; color: #0c5460; margin-bottom: 15px;">
                    <strong>🎯 Scope:</strong> These tests work through PageContext with hierarchical scoping. DebugPage can only modify breadcrumbs at or below its scope position.
                  </div>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="breadcrumb_single" style="padding: 8px 12px; background: #17a2b8; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">📄 Single Page</button>
                    <button id="breadcrumb_multi" style="padding: 8px 12px; background: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">📚 Multi-level</button>
                    <button id="breadcrumb_links" style="padding: 8px 12px; background: #fd7e14; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🔗 With Links</button>
                    <button id="breadcrumb_actions" style="padding: 8px 12px; background: #6f42c1; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">⚡ With Actions</button>
                    <button id="breadcrumb_clear" style="padding: 8px 12px; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🗑️ Clear</button>
                  </div>
                </div>
                
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">Dynamic PageContext Tests:</h4>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="breadcrumb_add" style="padding: 8px 12px; background: #198754; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">➕ Add Item</button>
                    <button id="breadcrumb_remove" style="padding: 8px 12px; background: #e83e8c; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">➖ Remove Item</button>
                    <button id="breadcrumb_update" style="padding: 8px 12px; background: #20c997; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🔄 Update Item</button>
                    <button id="breadcrumb_status" style="padding: 8px 12px; background: #495057; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">📊 Show Status</button>
                  </div>
                </div>
              </div>
              
              <!-- HeaderComponent Direct Tests (Global/Unrestricted) -->
              <div style="background: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #ffc107;">
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #856404;">🏗️ HeaderComponent Tests (Direct/Global):</h4>
                  <div style="background: #ffeaa7; padding: 10px; border-radius: 4px; font-size: 12px; color: #856404; margin-bottom: 15px;">
                    <strong>⚠️ Unrestricted:</strong> These tests bypass PageContext and work directly with BreadcrumbsComponent. No hierarchical scoping - full control over entire breadcrumb trail.
                  </div>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="header_breadcrumb_basic" style="padding: 8px 12px; background: #f39c12; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🏠 Basic Trail</button>
                    <button id="header_breadcrumb_complex" style="padding: 8px 12px; background: #e67e22; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🌐 Complex Trail</button>
                    <button id="header_breadcrumb_interactive" style="padding: 8px 12px; background: #d35400; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">⚡ Interactive</button>
                    <button id="header_breadcrumb_component_status" style="padding: 8px 12px; background: #a0522d; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🔍 Component Status</button>
                  </div>
                </div>
                
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #856404;">Direct Component Operations:</h4>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="header_breadcrumb_direct_add" style="padding: 8px 12px; background: #27ae60; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">➕ Direct Add</button>
                    <button id="header_breadcrumb_direct_remove" style="padding: 8px 12px; background: #e74c3c; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">➖ Direct Remove</button>
                    <button id="header_breadcrumb_direct_update" style="padding: 8px 12px; background: #8e44ad; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🔄 Direct Update</button>
                    <button id="header_breadcrumb_direct_clear" style="padding: 8px 12px; background: #c0392b; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🗑️ Direct Clear</button>
                  </div>
                </div>
              </div>
              
              <div style="background: #fff; padding: 15px; border-radius: 4px; border: 1px solid #dee2e6; font-size: 13px;">
                <strong>📝 Current Breadcrumbs:</strong> Look at the header above to see the breadcrumbs in action. They will update dynamically as you test different scenarios.<br>
                <strong>🔄 Comparison:</strong> Use PageContext tests to see hierarchical scoping vs HeaderComponent tests for direct unrestricted access.
              </div>
            </div>

            <div style="margin: 30px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">Test Console</h3>
              <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">Basic Messages:</h4>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="msg_error" style="padding: 8px 12px; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">❌ Error</button>
                    <button id="msg_warning" style="padding: 8px 12px; background: #fd7e14; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">⚠️ Warning</button>
                    <button id="msg_info" style="padding: 8px 12px; background: #0dcaf0; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">ℹ️ Info</button>
                    <button id="msg_success" style="padding: 8px 12px; background: #198754; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">✅ Success</button>
                  </div>
                </div>

                <div style="margin-bottom: 15px;">
                  <h4 style="margin: 0 0 10px 0; color: #555;">Advanced Messages:</h4>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px; margin-bottom: 15px;">
                    <button id="msg_with_action" style="padding: 8px 12px; background: #6f42c1; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🔧 With Action</button>
                    <button id="msg_persistent" style="padding: 8px 12px; background: #495057; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">📌 Persistent</button>
                    <button id="msg_auto_hide" style="padding: 8px 12px; background: #20c997; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">⏰ Auto-hide</button>
                    <button id="msg_sequence" style="padding: 8px 12px; background: #e83e8c; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🎬 Sequence</button>
                  </div>
                </div>

                <div>
                  <h4 style="margin: 0 0 10px 0; color: #555;">Message Management:</h4>
                  <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                    <button id="clear_all_messages" style="padding: 8px 12px; background: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">🗑️ Clear All</button>
                    <button id="clear_errors_only" style="padding: 8px 12px; background: #adb5bd; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">❌ Clear Errors</button>
                    <button id="clear_persistent" style="padding: 8px 12px; background: #343a40; color: white; border: none; border-radius: 4px; cursor: pointer; font-weight: 500;">📌 Clear Persistent</button>
                  </div>
                </div>
              </div>
            </div>

            <div style="margin: 20px 0;">
              <h3 style="color: #333; margin-bottom: 15px;">Quick Tests</h3>
              <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                <button id="test_compact_mode" style="padding: 10px 16px; background: #28a745; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">📎 Toggle Compact Mode</button>
                <button id="test_user_menu" style="padding: 10px 16px; background: #6f42c1; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">👤 Toggle User Menu</button>
                <button id="test_viewport_info" style="padding: 10px 16px; background: #007bff; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">📊 Refresh Debug Info</button>
                <button id="test_mobile_toggle" style="padding: 10px 16px; background: #fd7e14; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">📱 Test Mobile Menu</button>
                <button id="clear_console" style="padding: 10px 16px; background: #6c757d; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">🧙 Clear Console</button>
                <button id="test_hotkeys_manual" style="padding: 10px 16px; background: #e83e8c; color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 500;">🧪 Test Hotkeys</button>
              </div>
            </div>
          </div>
        </div>
      `;e?e.setContent(i):t.innerHTML=i}else this.logger.error("DebugPage - No target element found for content")}setupPageHandlers(){this.setupTestControls(),this.setupResponsiveHandlers()}setupTestControls(){const e=document.getElementById("test_compact_mode");e&&e.addEventListener("click",()=>{const a=this.mainContent.getLayoutContext();a.isLayoutMobile()?this.logToConsole("📱 Compact mode not available on mobile layout (uses overlay mode)"):(a.emit("sidebar-compact-request",{requestedAction:"toggle",trigger:"debug-page"}),this.logToConsole("📎 Compact mode request event emitted"))});const t=document.getElementById("test_user_menu");if(t){let a=!1;t.addEventListener("click",c=>{if(c.preventDefault(),c.stopPropagation(),a){this.logToConsole("👤 User menu toggle already in progress, ignoring click");return}a=!0;const l=this.mainContent.getLayoutContext();setTimeout(()=>{l.emit("user-menu-request",{requestedAction:"toggle",trigger:"debug-page"}),this.logToConsole("👤 User menu request event emitted"),setTimeout(()=>{a=!1},100)},50)})}const i=document.getElementById("test_viewport_info");i&&i.addEventListener("click",()=>{this.updateViewportInfoFromContext(this.mainContent.getLayoutContext()),this.updateLayoutStatus(),this.updateHotkeyStatus(),this.logToConsole("📊 Debug info updated (viewport, layout, hotkeys)")});const s=document.getElementById("test_mobile_toggle");s&&s.addEventListener("click",()=>{window.innerWidth<768?(this.mainContent.getLayoutContext().emit("mobile-menu-request",{requestedAction:"toggle",trigger:"debug-page"}),this.logToConsole("📱 Mobile menu toggle event emitted")):this.logToConsole("ℹ️ Mobile menu only available on mobile viewports (<768px)")});const n=document.getElementById("clear_console");n&&n.addEventListener("click",()=>{const a=document.getElementById("test_console");a&&(a.innerHTML="")});const r=document.getElementById("test_hotkeys_manual");r&&r.addEventListener("click",()=>{this.testHotkeySystem()}),this.setupMessageSimulationControls(),this.setupBreadcrumbTestControls(),this.setupLayoutEventsMonitoring()}setupMessageSimulationControls(){this.setupBasicMessageControls(),this.setupAdvancedMessageControls(),this.setupMessageManagementControls()}setupBasicMessageControls(){const e=document.getElementById("msg_error");e&&e.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();if(n)n.showError("Connection Failed","Unable to connect to the server. Please check your internet connection."),this.logToConsole("❌ Error message displayed");else{const r=this.mainContent?.getLayoutContext()?.getMessages();r?(r.showError("Connection Failed","Unable to connect to the server. Please check your internet connection."),this.logToConsole("❌ Error message displayed via alternative access")):this.logToConsole("❌ No messages component available")}}catch(n){const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}});const t=document.getElementById("msg_warning");t&&t.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();n?(n.showWarning("Session Expiring","Your session will expire in 5 minutes. Save your work to avoid losing data."),this.logToConsole("⚠️ Warning message displayed")):this.logToConsole("❌ No messages component available")}catch(n){const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}});const i=document.getElementById("msg_info");i&&i.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();n?(n.showInfo("New Feature Available","Check out the new dashboard features in the sidebar navigation."),this.logToConsole("ℹ️ Info message displayed")):this.logToConsole("❌ No messages component available")}catch(n){const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}});const s=document.getElementById("msg_success");s&&s.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();n?(n.showSuccess("Data Saved","Your changes have been saved successfully to the server."),this.logToConsole("✅ Success message displayed")):this.logToConsole("❌ No messages component available")}catch(n){const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}})}setupAdvancedMessageControls(){const e=document.getElementById("msg_with_action");e&&e.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();n?(n.showError("Network Error","Failed to load data. Check your connection and try again."),this.logToConsole("🔧 Error message with action displayed")):this.logToConsole("❌ Unable to access Messages component")}catch(n){const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}});const t=document.getElementById("msg_persistent");t&&t.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();n?(n.showWarning("Persistent Warning",'This message persists across page navigation. Use "Clear Persistent" to remove it.'),this.logToConsole("📌 Persistent warning message displayed")):this.logToConsole("❌ Unable to access Messages component")}catch(n){const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}});const i=document.getElementById("msg_auto_hide");i&&i.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const n=this.layoutContext.getMessages();n?(n.showInfo("Auto-Hide Message","This message will automatically disappear after 3 seconds."),this.logToConsole("⏰ Auto-hide info message displayed (3s delay)")):this.logToConsole("❌ Unable to access Messages component")}catch(n){this.logger.error("🎯 DEBUGPAGE - Error in auto-hide message handler:",n);const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message handling: "+r)}});const s=document.getElementById("msg_sequence");s&&s.addEventListener("click",()=>{try{this.showMessageSequence(),this.logToConsole("🎬 Message sequence started")}catch(n){this.logger.error("🎯 DEBUGPAGE - Error in sequence handler:",n);const r=n instanceof Error?n.message:"Unknown error";this.logToConsole("❌ Error in message sequence: "+r)}})}setupMessageManagementControls(){const e=document.getElementById("clear_all_messages");e&&e.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const s=this.layoutContext.getMessages();s&&typeof s.clearAll=="function"?(s.clearAll(),this.logToConsole("🗑️ All messages cleared via Messages API")):this.logToConsole("❌ clearAll method not available")}catch(s){this.logger.error("🎯 DEBUGPAGE - Error in clear all handler:",s);const n=s instanceof Error?s.message:"Unknown error";this.logToConsole("❌ Error in message clearing: "+n)}});const t=document.getElementById("clear_errors_only");t&&t.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const s=this.layoutContext.getMessages();s&&typeof s.clearByType=="function"?(s.clearByType("error"),this.logToConsole("❌ Error messages cleared via Messages API")):this.logToConsole("❌ clearByType method not available")}catch(s){this.logger.error("🎯 DEBUGPAGE - Error in clear errors handler:",s);const n=s instanceof Error?s.message:"Unknown error";this.logToConsole("❌ Error in message clearing: "+n)}});const i=document.getElementById("clear_persistent");i&&i.addEventListener("click",()=>{try{if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available");return}const s=this.layoutContext.getMessages();s&&typeof s.clearAll=="function"?(s.clearAll(!0),this.logToConsole("📌 Persistent messages cleared via Messages API")):this.logToConsole("❌ clearAll method not available")}catch(s){this.logger.error("🎯 DEBUGPAGE - Error in clear persistent handler:",s);const n=s instanceof Error?s.message:"Unknown error";this.logToConsole("❌ Error in message clearing: "+n)}})}showMessageSequence(){if(!this.layoutContext){this.logToConsole("❌ LayoutContext not available for sequence");return}const e=this.layoutContext.getMessages();if(!e){this.logToConsole("❌ No messages component available for sequence");return}let t=0;const i=[()=>{e.showInfo("Step 1","Starting data validation process...")},()=>{e.showInfo("Step 2","Validating user permissions...")},()=>{e.showWarning("Step 3","Found 2 validation warnings that need attention.")},()=>{e.showError("Step 4",'Validation failed: Missing required field "email".')},()=>{e.showSuccess("Step 5","Process completed! All issues resolved.")}],s=()=>{t<i.length&&(i[t](),t++,setTimeout(s,2e3))};s()}setupResponsiveHandlers(){this.logger.debug("🎯 DebugPage - Setting up responsive mode subscriptions...");const e=this.mainContent.getLayoutContext();e.subscribe("layout-mode-change",t=>{this.logger.debug("event:",t);const i=t.data?.viewport,s=t.data?.modeType,n=e.getSidebar(),r=n?.isCompactMode(),a=n?.isVisible(),c=new Date().toLocaleTimeString();this.updateLayoutStatus(),this.updateComponentStatusDetails(),this.updateHotkeyStatus(),this.logToConsole(`<span style="color: #8e44ad; font-weight: bold;">[${c}] 🏗️ LAYOUT MODE CHANGE</span>`),this.logToConsole(`└─ Type: ${s.toUpperCase()}`),this.logToConsole(`└─ Compact: ${r?"YES":"NO"}`),this.logToConsole(`└─ Sidebar: ${n?.getDimensions().width}px ${a?"(visible)":"(hidden)"}`),this.logToConsole(`└─ Viewport: ${i.width}x${i.height}`)}),this.logToConsole("✅ Subscribed to LayoutContext layout mode changes"),this.logToConsole(`📊 Initial layout mode: ${this.layoutContext?.getModeType()}${this.layoutContext?.getSidebar()?.isCompactMode()?" (compact)":""}`)}updateViewportInfoFromContext(e){const t=document.getElementById("viewport_info");if(t){const i=e.getViewport(),s=e.getModeType(),n=e.getSidebar(),r=n?.getDimensions(),a=e.isLayoutMobile(),c=s==="tablet",l=n?.isCompactMode()??!1,u=()=>a?"📱 Mobile (≤768px)":c?"📺 Tablet (769-1024px)":"💻 Desktop (≥1025px)",d=window.devicePixelRatio||1,g=`${Math.round(i.width*d)}x${Math.round(i.height*d)}`,h=a?"#e74c3c":c?"#f39c12":"#27ae60",S=a?"Overlay mode":l?"Compact (64px)":`Expanded (${r?.width}px)`;t.innerHTML=`
        <div style="color: ${h}; font-weight: bold; margin-bottom: 6px;">${u()}</div>
        <div style="margin-bottom: 6px;">
          📏 Viewport: ${i.width} x ${i.height}px<br>
          🔍 Ratio: ${(i.width/i.height).toFixed(2)} ${i.width>i.height?"(landscape)":"(portrait)"}<br>
          ${d!==1?`📷 Actual: ${g} (@${d}x)<br>`:""}
        </div>
        <div style="padding-top: 6px; border-top: 1px solid #ddd; font-size: 11px;">
          📋 Sidebar: ${S}<br>
          👁 Visible: ${n?.isVisible()?"✅ Yes":"❌ Hidden"}<br>
          🌐 User Agent: ${navigator.userAgent.includes("Mobile")?"📱 Mobile":"💻 Desktop"}
        </div>
      `}}updateHotkeyStatus(){const e=document.getElementById("hotkey_status");if(e){const t=this.getChainHotkeys(),i=t?t.size:0;let s="Unknown",n="Unknown",r="Unknown";try{const d=this.layoutContext;d.chainHotkeyManager?(s="✅ Active",d.chainHotkeyManager.providers&&(n=d.chainHotkeyManager.providers.size||"N/A"),r="✅ Registered"):s="❌ Not Found"}catch{s="Error"}const a=!!this.chainProviderUnsubscriber,c=this.initialized,l=a&&c?"✅ Registered":"❌ Not Registered";let u="None";if(t&&t.size>0){const d={"Ctrl+Shift":Array.from(t.keys()).filter(g=>g.startsWith("Ctrl+Shift")).length,Shift:Array.from(t.keys()).filter(g=>g.startsWith("Shift+")&&!g.startsWith("Shift+Shift")).length,Escape:Array.from(t.keys()).filter(g=>g==="Escape").length};u=`${d["Ctrl+Shift"]} Ctrl+Shift, ${d.Shift} Shift+, ${d.Escape} ESC`}e.innerHTML=`
        <div style="margin-bottom: 6px; font-weight: bold; color: #27ae60;">⌨️ Chain Hotkey System</div>
        <div style="margin-bottom: 6px;">
          🌎 Chain Manager: ${s}<br>
          🏠 DebugPage Provider: ${l}<br>
          🔑 Our Hotkeys: ${i} registered<br>
          📊 Breakdown: ${u}
        </div>
        <div style="padding-top: 6px; border-top: 1px solid #ddd; font-size: 11px; color: #666;">
          🌍 Global Listener: ${r}<br>
          💬 Total Providers: ${n}<br>
          🔄 Browser Support: Ctrl+Shift + Shift+chars<br>
          ✅ Status: All ${i} hotkeys functional
        </div>
      `}}updateLayoutStatus(){const e=document.getElementById("layout_status");if(e&&this.layoutContext){const t=this.layoutContext.getRegisteredComponents(),i=this.layoutContext.getMessages(),s=this.layoutContext.getSidebar();let n="N/A",r="N/A";try{const w=this.layoutContext;if(w.getEventBusDebugInfo&&typeof w.getEventBusDebugInfo=="function"){const x=w.getEventBusDebugInfo();n=x.totalConsumers.toString(),r=x.eventCount.toString()}}catch{n="Error",r="Error"}const a=t.header?"✅ Registered":"❌ Missing",c=t.sidebar?"✅ Registered":"❌ Missing",l=t.messages?"✅ Registered":"❌ Missing",u=t.mainContent?"✅ Registered":"❌ Missing";let d="❌ Missing",g="";t.footer?d="✅ Registered":document.getElementById("app-footer")?g=" (DOM exists but not registered)":g=" (DOM element missing)";const h=s?s.isVisible()!==void 0&&s.isCompactMode()!==void 0&&s.getDimensions().width>0:!1,S=i?typeof i.showError=="function"&&typeof i.showSuccess=="function":!1;let E;try{const w=this.layoutContext;w.getEventBus&&typeof w.getEventBus=="function"?E="Available":w.eventBus?E="Available (direct)":E="Not Found"}catch{E="Error"}e.innerHTML=`
        <div style="margin-bottom: 6px; font-weight: bold; color: #27ae60;">📊 Context Integration</div>
        <div style="margin-bottom: 6px;">
          🏠 Main Content: ${u}<br>
          📋 Sidebar: ${c} ${h?"(💪 Functional)":"(⚠️ Limited)"}<br>
          💬 Messages: ${l} ${S?"(💪 Functional)":"(⚠️ Limited)"}<br>
          📊 Header: ${a}<br>
          📄 Footer: ${d}${g}
        </div>
        <div style="padding-top: 6px; border-top: 1px solid #ddd; font-size: 11px; color: #666;">
          📧 Event Subscribers: ${n}<br>
          📨 EventBus Events: ${r}<br>
          📡 EventBus Status: ${E}<br>
          🔍 Mode Detection: ${this.layoutContext.isLayoutMobile()?"📱 Mobile":"💻 Desktop"}<br>
          🔄 Auto Updates: ${this.eventMonitoringActive?"✅ Active":"❌ Stopped"}
        </div>
      `}}updateComponentStatusDetails(){const e=document.getElementById("component_status_details");if(!e||!this.layoutContext)return;const t=this.layoutContext.getRegisteredComponents();let i='<div style="margin-bottom: 15px; font-weight: bold; color: #495057;">🔍 Detailed Component Diagnostics</div>';const s=(a,c)=>{if(!c||typeof c.getStatus!="function")return`<div style="background: #fff3cd; padding: 10px; border-radius: 4px; margin-bottom: 10px; border-left: 3px solid #ffc107;">
          <strong style="color: #856404;">${a}:</strong> ❌ No status method available
        </div>`;try{const l=c.getStatus(),u=l.uptime?`${Math.floor(l.uptime/1e3)}s`:"N/A",d=l.currentState?.lastActionAgo?`${Math.floor(l.currentState.lastActionAgo/1e3)}s ago`:"Never",g=l.issues&&l.issues.length>0,h=g?"#f8d7da":"#d1edff",S=g?"#dc3545":"#0dcaf0",E=g?"#721c24":"#055160",w=l.id||a.toLowerCase().replace(/\s+/g,"-"),x=[];l.initialized&&x.push("✅ Init"),l.domElement&&x.push("🏠 DOM"),l.eventListeners?.layoutSubscriptions>0&&x.push(`📡 ${l.eventListeners.layoutSubscriptions}`),l.issues&&l.issues.length>0&&x.push(`⚠️ ${l.issues.length}`);const Pt=x.length>0?` | ${x.join(" ")}`:"";let y=`<div style="background: ${h}; padding: 12px; border-radius: 4px; margin-bottom: 15px; border-left: 3px solid ${S};">
          <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; cursor: pointer;" onclick="debugPageToggleComponent('${w}')">
            <div style="color: ${E}; font-weight: bold;">${a} (${l.componentType})<span style="font-weight: normal; font-size: 11px; opacity: 0.8;">${Pt}</span></div>
            <div style="color: ${E}; font-size: 14px; user-select: none;" id="toggle-${w}">▶</div>
          </div>
          <div id="details-${w}" style="display: none;">`;if(y+='<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px; margin-bottom: 8px;">',y+=`<div>📊 <strong>Status:</strong> ${l.initialized?"✅ Initialized":"❌ Not Initialized"}</div>`,y+=`<div>⏱️ <strong>Uptime:</strong> ${u}</div>`,y+=`<div>🔄 <strong>Last Action:</strong> ${d}</div>`,y+=`<div>🏠 <strong>DOM ID:</strong> ${l.domElement?.id||"N/A"}</div>`,y+="</div>",l.eventListeners){y+='<div style="margin: 8px 0;"><strong>Event Listeners:</strong> ';const b=[];l.eventListeners.domEvents&&b.push(`DOM: ${l.eventListeners.domEvents}`),l.eventListeners.layoutSubscriptions&&b.push(`Layout: ${l.eventListeners.layoutSubscriptions}`),l.eventListeners.eventBusSubscriptions&&b.push(`EventBus: ${l.eventListeners.eventBusSubscriptions}`),l.eventListeners.compactModeListeners&&b.push(`Compact: ${l.eventListeners.compactModeListeners}`),l.eventListeners.closeButtonListeners&&b.push(`Close Buttons: ${l.eventListeners.closeButtonListeners}`),y+=b.join(", ")||"None",y+="</div>"}if(l.currentState){const b=l.currentState;y+='<div style="margin: 8px 0;"><strong>Current State:</strong> ';const v=[];if(a.includes("Sidebar"))v.push(`Mode: ${b.compactMode?"Compact":"Expanded"}`),v.push(`Mobile: ${b.isMobile?"Yes":"No"}`),v.push(`Nav Items: ${l.configuration?.navigationItemsCount||0}`);else if(a.includes("Header"))v.push(`User Menu: ${b.userMenuInitialized?"Ready":"Not Ready"}`),v.push(`Updates: ${b.updateCount||0}`);else if(a.includes("MainContent"))v.push(`Content Updates: ${b.contentUpdateCount||0}`),v.push(`Loading: ${b.isLoading?"Yes":"No"}`);else if(a.includes("Footer"))v.push(`Nav Clicks: ${b.navigationClickCount||0}`),v.push(`Layout Updates: ${b.layoutUpdateCount||0}`);else if(a.includes("Messages")&&(v.push(`Active: ${b.activeMessagesCount||0}`),v.push(`Timers: ${b.activeAutoHideTimers||0}`),b.messagesByType)){const Fe=Object.entries(b.messagesByType).filter(([qe,xe])=>xe>0);Fe.length>0&&v.push(`Types: ${Fe.map(([qe,xe])=>`${qe}:${xe}`).join(", ")}`)}y+=v.join(", ")||"Default",y+="</div>"}if(l.issues&&l.issues.length>0?(y+='<div style="margin: 8px 0; color: #721c24;"><strong>⚠️ Issues:</strong><ul style="margin: 4px 0 0 20px; padding: 0;">',(Array.isArray(l.issues)?l.issues:[]).forEach(v=>{y+=`<li>${v}</li>`}),y+="</ul></div>"):y+=`<div style="margin: 8px 0; color: ${E};"><strong>✅ Status:</strong> No issues detected</div>`,l.performance){const b=l.performance;y+='<div style="margin: 8px 0; font-size: 11px; color: #666;"><strong>Performance:</strong> ';const v=[];b.initDuration&&v.push(`Init: ${b.initDuration}ms`),b.dimensions&&v.push(`Dimensions: ${b.dimensions.width}px`),b.averageMessageLifetime&&v.push(`Avg Message Life: ${Math.floor(b.averageMessageLifetime/1e3)}s`),y+=v.join(", ")||"N/A",y+="</div>"}return y+="</div></div>",y}catch(l){return`<div style="background: #f8d7da; padding: 10px; border-radius: 4px; margin-bottom: 10px; border-left: 3px solid #dc3545;">
          <strong style="color: #721c24;">${a}:</strong> ❌ Error getting status: ${l instanceof Error?l.message:"Unknown error"}
        </div>`}};i+=s("Header Component",t.header),i+=s("Sidebar Component",t.sidebar),i+=s("Main Content",t.mainContent),i+=s("Footer Component",t.footer),i+=s("Messages Component",t.messages);const n=[t.header,t.sidebar,t.mainContent,t.footer,t.messages].filter(a=>a).length,r=[t.header,t.sidebar,t.mainContent,t.footer,t.messages].filter(a=>a&&typeof a.getStatus=="function").length;i+=`<div style="background: #e2e3e5; padding: 10px; border-radius: 4px; margin-top: 15px; border-left: 3px solid #6c757d;">
      <strong style="color: #495057;">📋 Summary:</strong> ${r}/${n} components provide detailed status information
    </div>`,e.innerHTML=i,window.debugPageToggleComponent=this.toggleComponentDetails.bind(this),setTimeout(()=>this.updateToggleAllButtonState(),10)}refreshComponentStatus(){const e=document.getElementById("component_status_details"),t=document.getElementById("refresh_component_status");t&&(t.disabled=!0,t.innerHTML="⏳ Refreshing...",t.style.opacity="0.7"),e&&(e.innerHTML='<div style="text-align: center; color: #666; padding: 20px;">🔄 Refreshing component status...</div>'),setTimeout(()=>{this.updateComponentStatusDetails(),t&&(t.disabled=!1,t.innerHTML="🔄 Refresh",t.style.opacity="1"),this.logToConsole("🔄 Component status refreshed")},100)}toggleComponentDetails(e){const t=document.getElementById(`details-${e}`),i=document.getElementById(`toggle-${e}`);if(t&&i){const s=t.style.display!=="none";t.style.display=s?"none":"block",i.textContent=s?"▶":"▼",this.updateToggleAllButtonState()}}toggleAllComponents(){const e=["app-header","app-sidebar","main-content","app-footer","app-error-messages"],i=e.some(s=>{const n=document.getElementById(`details-${s}`);return n&&n.style.display==="none"});e.forEach(s=>{const n=document.getElementById(`details-${s}`),r=document.getElementById(`toggle-${s}`);n&&r&&(n.style.display=i?"block":"none",r.textContent=i?"▼":"▶")}),this.updateToggleAllButtonState(),this.logToConsole(`🔽 ${i?"Expanded":"Collapsed"} all component details`)}updateToggleAllButtonState(){const e=document.getElementById("toggle_all_components");if(!e)return;const t=["app-header","app-sidebar","main-content","app-footer","app-error-messages"],i=t.some(n=>{const r=document.getElementById(`details-${n}`);return r&&r.style.display==="none"});t.every(n=>{const r=document.getElementById(`details-${n}`);return r&&r.style.display==="none"})||i?e.innerHTML="🔽 Expand All":e.innerHTML="🔽 Collapse All"}logToConsole(e){const t=document.getElementById("test_console");if(t){const i=new Date().toLocaleTimeString(),s=document.createElement("div");s.innerHTML=`<span style="color: #888;">[${i}]</span> ${e}`,t.appendChild(s),t.scrollTop=t.scrollHeight}this.logger.debug("DebugPage: {}",e)}setupLayoutEventsMonitoring(){const e=document.getElementById("start_event_monitor"),t=document.getElementById("stop_event_monitor"),i=document.getElementById("clear_event_log"),s=document.getElementById("trigger_layout_test"),n=document.getElementById("refresh_component_status"),r=document.getElementById("toggle_all_components");e&&e.addEventListener("click",()=>this.startEventMonitoring()),t&&t.addEventListener("click",()=>this.stopEventMonitoring()),i&&i.addEventListener("click",()=>this.clearLayoutEventsLog()),s&&s.addEventListener("click",()=>this.triggerLayoutTestEvent()),n&&n.addEventListener("click",()=>this.refreshComponentStatus()),r&&r.addEventListener("click",()=>this.toggleAllComponents()),setTimeout(()=>this.startEventMonitoring(),500)}startEventMonitoring(){if(this.eventMonitoringActive){this.logLayoutEvent("ℹ️ Event monitoring is already active");return}const e=this.mainContent.getLayoutContext();this.eventMonitoringActive=!0,this.eventStats={totalEvents:0,eventCounts:new Map,startTime:Date.now(),lastEventTime:0};const t=s=>{const n=e.subscribe(s,r=>this.handleLayoutEvent(r));this.layoutEventUnsubscribers.push(n)};t("layout-ready"),t("layout-mode-change"),t("sidebar-compact-mode-change"),t("sidebar-compact-request"),t("mobile-menu-request"),t("mobile-menu-mode-change"),t("user-menu-request"),t("user-menu-mode-change"),this.updateEventStatsDisplay(),this.logLayoutEvent("✅ Layout event monitoring started"),this.updateLayoutStatus(),this.mainContent.getLayoutContext().isLayoutMobile()&&this.logLayoutEvent("📱 Mobile layout active - compact mode changes will be blocked")}stopEventMonitoring(){this.eventMonitoringActive&&(this.layoutEventUnsubscribers.forEach(e=>{try{e()}catch{}}),this.layoutEventUnsubscribers=[],this.eventMonitoringActive=!1,this.logLayoutEvent("⏹️ Layout event monitoring stopped"),this.updateLayoutStatus())}handleLayoutEvent(e){if(!this.eventMonitoringActive)return;const t=Date.now();this.eventStats.totalEvents++,this.eventStats.lastEventTime=t,this.eventStats.eventCounts.set(e.type,(this.eventStats.eventCounts.get(e.type)||0)+1);const i=this.formatEventData(e);this.logLayoutEvent(`${this.badgeForEvent(e.type)} ${e.type} ${i}`),this.updateEventStatsDisplay()}formatEventData(e){try{const t=e;return P.formatEventDataForLogging(t)}catch{try{return e.data?`→ data=${JSON.stringify(e.data)}`:""}catch{return"→ [complex data]"}}}badgeForEvent(e){return P.getEventBadge(e)}logLayoutEvent(e){const t=document.getElementById("layout_events_console");if(t){const i=new Date().toLocaleTimeString(),s=document.createElement("div");s.textContent=`[${i}] ${e}`,t.appendChild(s),t.scrollTop=t.scrollHeight}this.logToConsole(e)}updateEventStatsDisplay(){const e=document.getElementById("event_stats");if(!e)return;if(!this.eventMonitoringActive){e.textContent="Monitoring stopped. Click 'Start Monitor' to begin tracking events.";return}const i=[`⏱️ Duration: ${((Date.now()-this.eventStats.startTime)/1e3).toFixed(1)}s`,`📈 Total events: ${this.eventStats.totalEvents}`],s=[];this.eventStats.eventCounts.forEach((n,r)=>{s.push(`${r}: ${n}`)}),i.push(`📊 By type: { ${s.join(", ")} }`),e.textContent=i.join(" | ")}clearLayoutEventsLog(){const e=document.getElementById("layout_events_console");e&&(e.innerHTML=""),this.logToConsole("🧹 Event log cleared")}triggerLayoutTestEvent(){try{this.mainContent.getLayoutContext().emit("layout-ready",{source:"DebugPage",at:Date.now()}),this.logToConsole("🔄 Triggered synthetic 'layout-ready' event")}catch{this.logToConsole("❌ Failed to trigger test event")}}getChainHotkeys(){const e=new Map;return e.set("Ctrl+Shift+S",{key:"Ctrl+Shift+S",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.startEventMonitoring(),this.logToConsole("🎯 Hotkey: Started event monitoring (Ctrl+Shift+S)"),t.preventDefault(),t.break()},description:"Start layout event monitoring",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+X",{key:"Ctrl+Shift+X",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.stopEventMonitoring(),this.logToConsole("🎯 Hotkey: Stopped event monitoring (Ctrl+Shift+X)"),t.preventDefault(),t.break()},description:"Stop layout event monitoring",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+C",{key:"Ctrl+Shift+C",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.clearLayoutEventsLog(),this.logToConsole("🎯 Hotkey: Cleared event log (Ctrl+Shift+C)"),t.preventDefault(),t.break()},description:"Clear event log",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+T",{key:"Ctrl+Shift+T",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.triggerLayoutTestEvent(),this.logToConsole("🎯 Hotkey: Triggered test event (Ctrl+Shift+T)"),t.preventDefault(),t.break()},description:"Trigger layout test event",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+R",{key:"Ctrl+Shift+R",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.refreshComponentStatus(),this.logToConsole("🎯 Hotkey: Refreshed component status (Ctrl+Shift+R)"),t.preventDefault(),t.break()},description:"Refresh component status",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+E",{key:"Ctrl+Shift+E",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.toggleAllComponents(),this.logToConsole("🎯 Hotkey: Toggled all component details (Ctrl+Shift+E)"),t.preventDefault(),t.break()},description:"Toggle all component details",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Shift+!",{key:"Shift+!",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Shift+! pressed - Show error message"),this.showErrorMessage(),this.logToConsole("🎯 Hotkey: Showed error message (Shift+1/!)"),t.preventDefault(),t.break()},description:"Show error message (Shift+1)",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Shift+@",{key:"Shift+@",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Shift+@ pressed - Show warning message"),this.showWarningMessage(),this.logToConsole("🎯 Hotkey: Showed warning message (Shift+2/@)"),t.preventDefault(),t.break()},description:"Show warning message (Shift+2)",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Shift+#",{key:"Shift+#",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Shift+# pressed - Show info message"),this.showInfoMessage(),this.logToConsole("🎯 Hotkey: Showed info message (Shift+3/#)"),t.preventDefault(),t.break()},description:"Show info message (Shift+3)",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Shift+$",{key:"Shift+$",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Shift+$ pressed - Show success message"),this.showSuccessMessage(),this.logToConsole("🎯 Hotkey: Showed success message (Shift+4/$)"),t.preventDefault(),t.break()},description:"Show success message (Shift+4)",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Shift+Backspace",{key:"Shift+Backspace",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Shift+Backspace pressed - Clear all messages"),this.clearAllMessages(),this.logToConsole("🎯 Hotkey: Cleared all messages (Shift+Backspace)"),t.preventDefault(),t.break()},description:"Clear all messages",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+L",{key:"Ctrl+Shift+L",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Ctrl+Shift+L pressed - Clear test console"),this.clearTestConsole(),this.logToConsole("🎯 Hotkey: Cleared test console (Ctrl+Shift+L)"),t.preventDefault(),t.break()},description:"Clear test console",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Ctrl+Shift+H",{key:"Ctrl+Shift+H",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Ctrl+Shift+H pressed - Show hotkey help"),this.showHotkeyHelp(),this.logToConsole("🎯 Hotkey: Showed hotkey help (Ctrl+Shift+H)"),t.preventDefault(),t.break()},description:"Show hotkey help",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),e.set("Escape",{key:"Escape",providerId:this.getHotkeyProviderId(),enabled:!0,handler:t=>{this.logger.debug("🎯 DebugPage: Escape pressed - Debug page ESC handling"),this.handleDebugPageEscape(t)&&this.logToConsole("🎯 Hotkey: Debug page handled ESC"),t.next()},description:"Debug page specific ESC handling",priority:this.getProviderPriority(),enable:()=>{},disable:()=>{},isEnabled:()=>this.initialized&&!this.destroyed}),this.logger.debug("🔑 DebugPage: Registered {} chain hotkeys: {}",e.size,Array.from(e.keys())),e}showErrorMessage(){const t=this.mainContent.getLayoutContext().getMessages();t&&t.showError("Debug Error Message","This is a test error message triggered by hotkey (Shift+1)",{id:"debug-error-hotkey"})}showWarningMessage(){const t=this.mainContent.getLayoutContext().getMessages();t&&t.showWarning("Debug Warning Message","This is a test warning message triggered by hotkey (Shift+2)",{id:"debug-warning-hotkey"})}showInfoMessage(){const t=this.mainContent.getLayoutContext().getMessages();t&&t.showInfo("Debug Info Message","This is a test info message triggered by hotkey (Shift+3)",{id:"debug-info-hotkey"})}showSuccessMessage(){const t=this.mainContent.getLayoutContext().getMessages();t&&t.showSuccess("Debug Success Message","This is a test success message triggered by hotkey (Shift+4)",{id:"debug-success-hotkey"})}clearAllMessages(){const t=this.mainContent.getLayoutContext().getMessages();t&&t.clearAll()}clearTestConsole(){const e=document.getElementById("test_console");e&&(e.innerHTML="")}showHotkeyHelp(){this.logToConsole(`
🎯 Debug Page Hotkeys (Firefox/Browser-friendly):

📊 Event Monitoring:
  Ctrl+Shift+S - Start event monitoring
  Ctrl+Shift+X - Stop event monitoring
  Ctrl+Shift+C - Clear event log
  Ctrl+Shift+T - Trigger test event

💬 Message Testing:
  Shift+1 (!) - Show error message
  Shift+2 (@) - Show warning message
  Shift+3 (#) - Show info message
  Shift+4 ($) - Show success message
  Shift+Backspace - Clear all messages

🔧 Console Controls:
  Ctrl+Shift+L - Clear test console
  Ctrl+Shift+H - Show this help

⌨️ Chain System:
  ESC - Cooperative escape handling
  
🌍 Browser Note: Using Ctrl+Shift+ combinations for
  maximum compatibility across Firefox, Chrome, and Safari.
    `),this.logLayoutEvent("📖 Hotkey help displayed - see test console for full list")}handleDebugPageEscape(e){let t=!1;return this.eventMonitoringActive&&(this.stopEventMonitoring(),this.logToConsole("🎯 ESC: Stopped event monitoring"),t=!0),t}testHotkeySystem(){this.logger.debug("🧪 Manual hotkey system test started..."),this.logToConsole("🧪 Testing hotkey handlers manually...");try{this.startEventMonitoring(),this.logToConsole("✅ Manual start monitoring: SUCCESS"),setTimeout(()=>{this.stopEventMonitoring(),this.logToConsole("✅ Manual stop monitoring: SUCCESS"),this.logToConsole("📝 Hotkey system test complete. If you see this, handlers work but key detection may be the issue."),this.showRegisteredHotkeys(),this.addDebugKeyListener()},1e3)}catch(e){const t=e instanceof Error?e.message:"Unknown error";this.logToConsole("❌ Manual hotkey test failed: "+t)}}addDebugKeyListener(){this.logToConsole("🔍 Adding debug key listener. Try pressing Ctrl+Shift+S now...");const e=t=>{if(t.ctrlKey&&t.shiftKey){const i=[];t.ctrlKey&&i.push("Ctrl"),t.metaKey&&i.push("Meta"),t.altKey&&i.push("Alt"),t.shiftKey&&i.push("Shift");const s=i.length>0?`${i.join("+")}+${t.key}`:t.key;if(this.logToConsole(`🎯 Key detected: Ctrl+Shift+${t.key}`),this.logToConsole(`🔄 Normalized key: "${s}"`),this.logger.debug("🎯 Key event details: {}",{key:t.key,code:t.code,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,altKey:t.altKey,metaKey:t.metaKey,normalizedKey:s}),t.key.toLowerCase()==="s"){this.logToConsole("✅ Detected Ctrl+Shift+S - this should trigger start monitoring!");const n=this.getChainHotkeys();if(n&&n.has(s))this.logToConsole("✅ Normalized key MATCHES our registered hotkey!");else if(this.logToConsole("❌ Normalized key does NOT match our registered hotkey"),this.logToConsole(`🔍 Looking for: "${s}"`),n){const r=Array.from(n.keys()).filter(a=>a.includes("Ctrl+Shift"));this.logToConsole(`🔍 Registered Ctrl+Shift keys: ${r.join(", ")}`)}}}if(t.shiftKey&&!t.ctrlKey&&!t.altKey&&!t.metaKey){const i=[];t.shiftKey&&i.push("Shift");const s=i.length>0?`${i.join("+")}+${t.key}`:t.key;this.logToConsole(`🎯 Shift-only key detected: ${s}`),this.logger.debug("🎯 Shift-only key event details: {}",{key:t.key,code:t.code,ctrlKey:t.ctrlKey,shiftKey:t.shiftKey,altKey:t.altKey,metaKey:t.metaKey,normalizedKey:s});const n=this.getChainHotkeys();if(n&&n.has(s))this.logToConsole("✅ Shift-only key MATCHES our registered hotkey!");else if(this.logToConsole("❌ Shift-only key does NOT match our registered hotkey"),this.logToConsole(`🔍 Looking for: "${s}"`),n){const r=Array.from(n.keys()).filter(a=>a.startsWith("Shift+"));this.logToConsole(`🔍 Registered Shift keys: ${r.join(", ")}`)}}};document.addEventListener("keydown",e),setTimeout(()=>{document.removeEventListener("keydown",e),this.logToConsole("🚪 Debug key listener removed after 30 seconds")},3e4)}showRegisteredHotkeys(){const e=this.getChainHotkeys();if(e){this.logToConsole(`🗺️ Registered hotkeys (${e.size}):`);for(const[t,i]of Array.from(e))this.logToConsole(`  - ${t}: ${i.description}`)}else this.logToConsole("❌ No hotkeys registered!")}setupBreadcrumbTestControls(){this.setupBasicBreadcrumbTests(),this.setupDynamicBreadcrumbTests(),this.setupHeaderComponentBreadcrumbTests()}setupBasicBreadcrumbTests(){const e=document.getElementById("breadcrumb_single");e&&e.addEventListener("click",()=>{this.testSinglePageBreadcrumb()});const t=document.getElementById("breadcrumb_multi");t&&t.addEventListener("click",()=>{this.testMultiLevelBreadcrumb()});const i=document.getElementById("breadcrumb_links");i&&i.addEventListener("click",()=>{this.testBreadcrumbsWithLinks()});const s=document.getElementById("breadcrumb_actions");s&&s.addEventListener("click",()=>{this.testBreadcrumbsWithActions()});const n=document.getElementById("breadcrumb_clear");n&&n.addEventListener("click",()=>{this.clearBreadcrumbs()})}setupDynamicBreadcrumbTests(){const e=document.getElementById("breadcrumb_add");e&&e.addEventListener("click",()=>{this.addBreadcrumbItem()});const t=document.getElementById("breadcrumb_remove");t&&t.addEventListener("click",()=>{this.removeBreadcrumbItem()});const i=document.getElementById("breadcrumb_update");i&&i.addEventListener("click",()=>{this.updateBreadcrumbItem()});const s=document.getElementById("breadcrumb_status");s&&s.addEventListener("click",()=>{this.showBreadcrumbStatus()})}setupHeaderComponentBreadcrumbTests(){const e=document.getElementById("header_breadcrumb_basic");e&&e.addEventListener("click",()=>{this.testHeaderBreadcrumbBasic()});const t=document.getElementById("header_breadcrumb_complex");t&&t.addEventListener("click",()=>{this.testHeaderBreadcrumbComplex()});const i=document.getElementById("header_breadcrumb_interactive");i&&i.addEventListener("click",()=>{this.testHeaderBreadcrumbInteractive()});const s=document.getElementById("header_breadcrumb_component_status");s&&s.addEventListener("click",()=>{this.showHeaderBreadcrumbComponentStatus()});const n=document.getElementById("header_breadcrumb_direct_add");n&&n.addEventListener("click",()=>{this.testHeaderBreadcrumbDirectAdd()});const r=document.getElementById("header_breadcrumb_direct_remove");r&&r.addEventListener("click",()=>{this.testHeaderBreadcrumbDirectRemove()});const a=document.getElementById("header_breadcrumb_direct_update");a&&a.addEventListener("click",()=>{this.testHeaderBreadcrumbDirectUpdate()});const c=document.getElementById("header_breadcrumb_direct_clear");c&&c.addEventListener("click",()=>{this.testHeaderBreadcrumbDirectClear()})}async getBreadcrumbsManager(){try{return this.hasPageContext()?(await this.getPageContext()).breadcrumbs():(this.logger.warn("🍞 DebugPage - PageContext not available"),null)}catch(e){return this.logger.error("🍞 DebugPage - Error getting PageContext:",e),null}}async testSinglePageBreadcrumb(){const e=await this.getBreadcrumbsManager();if(e){const t=[{id:"DebugPage",text:"Debug Page"}];e.set(t),this.logToConsole("🍞 PageContext - Single page breadcrumb set")}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async testMultiLevelBreadcrumb(){const e=await this.getBreadcrumbsManager();if(e){const t=[{id:"DebugPage",text:"Debug Page"},{id:"dashboard",text:"Dashboard"},{id:"reports",text:"Reports"},{id:"analytics",text:"Analytics"}];e.set(t),this.logToConsole("🍞 PageContext - Multi-level breadcrumb set")}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async testBreadcrumbsWithLinks(){const e=await this.getBreadcrumbsManager();if(e){const t=[{id:"DebugPage",text:"Debug Page"},{id:"home",text:"Home",href:"/",caption:"Go to homepage"},{id:"dashboard",text:"Dashboard",href:"/dashboard",caption:"View dashboard"}];e.set(t),this.logToConsole("🍞 PageContext - Breadcrumbs with links set")}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async testBreadcrumbsWithActions(){const e=await this.getBreadcrumbsManager();if(e){const t=[{id:"DebugPage",text:"Debug Page"},{id:"dashboard",text:"Dashboard",clickHandler:i=>{this.logToConsole(`🍞 Breadcrumb action clicked: ${i.text}`)},caption:"Click to test action"},{id:"settings",text:"Settings",clickHandler:i=>{this.logToConsole(`🍞 Settings breadcrumb clicked: ${i.text}`),alert(`Breadcrumb action executed: ${i.text}`)},caption:"Click to show alert"}];e.set(t),this.logToConsole("🍞 PageContext - Breadcrumbs with actions set")}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async clearBreadcrumbs(){const e=await this.getBreadcrumbsManager();e?(e.clear(),this.logToConsole("🍞 PageContext - All breadcrumbs cleared")):this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async addBreadcrumbItem(){const e=await this.getBreadcrumbsManager();if(e){const t=Date.now(),i={id:`dynamic-${t}`,text:`Item ${t%1e3}`,caption:"Dynamically added",clickHandler:s=>{this.logToConsole(`🍞 Dynamic item clicked: ${s.text}`)}};e.add(i),this.logToConsole(`🍞 PageContext - Added dynamic breadcrumb: ${i.text}`)}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async removeBreadcrumbItem(){const e=await this.getBreadcrumbsManager();if(e){const t=e.get();if(t.length>0){const i=t[t.length-1];e.remove(i.id),this.logToConsole(`🍞 PageContext - Removed breadcrumb: ${i.text}`)}else this.logToConsole("🍞 PageContext - No breadcrumbs to remove")}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async updateBreadcrumbItem(){const e=await this.getBreadcrumbsManager();if(e){const t=e.get();if(t.length>0){const i=t[0],s=Date.now();e.update(i.id,{text:`Updated ${s%1e3}`,caption:"Recently updated"}),this.logToConsole(`🍞 PageContext - Updated breadcrumb: ${i.id}`)}else this.logToConsole("🍞 PageContext - No breadcrumbs to update")}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async showBreadcrumbStatus(){const e=await this.getBreadcrumbsManager();if(e){const t=e.get();this.logToConsole("🍞 PageContext - Breadcrumb Status:"),this.logToConsole(`  Available: ${e.isAvailable()}`),this.logToConsole(`  Count: ${t.length}`),t.length>0&&(this.logToConsole("  Current breadcrumbs:"),t.forEach(i=>{this.logToConsole(`    - ${i.id}: ${i.text}`)}))}else this.logToConsole("❌ PageContext - Breadcrumbs manager not available")}async setInitialBreadcrumb(){try{const t=(await this.getPageContext()).breadcrumbs();if(t&&t.isAvailable()){const i=[{id:"DebugPage",text:"Debug & Testing",caption:"Development tools"}];t.set(i),this.logger.debug("🍞 DebugPage - Initial breadcrumbs set via PageContext")}else this.logger.warn("🍞 DebugPage - BreadcrumbsManager not available for initial setup")}catch(e){this.logger.error("🍞 DebugPage - Error setting initial breadcrumbs:",e)}}getBreadcrumbsComponent(){try{return this.mainContent.getLayoutContext().getHeader()?.getBreadcrumbsComponent()||null}catch(e){return this.logger.error("🍞 DebugPage - Error getting BreadcrumbsComponent:",e),null}}testHeaderBreadcrumbBasic(){const e=this.getBreadcrumbsComponent();if(e){const t=[{id:"home",text:"Home",href:"/"},{id:"admin",text:"Administration"},{id:"debug",text:"Debug Tools"}];e.setBreadcrumbs(t),this.logToConsole("🏗️ HeaderComponent - Basic trail set")}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available")}testHeaderBreadcrumbComplex(){const e=this.getBreadcrumbsComponent();if(e){const t=[{id:"root",text:"System",href:"/system",caption:"System root"},{id:"workspace",text:"Workspace",href:"/workspace",caption:"User workspace"},{id:"projects",text:"Projects",href:"/projects",caption:"All projects"},{id:"current-project",text:"Opinion Frontend",caption:"Current project"},{id:"tools",text:"Development Tools",caption:"Development utilities"},{id:"debug-console",text:"Debug Console",caption:"Debug and testing interface"}];e.setBreadcrumbs(t),this.logToConsole("🌐 HeaderComponent - Complex trail set")}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available")}testHeaderBreadcrumbInteractive(){const e=this.getBreadcrumbsComponent();if(e){const t=[{id:"dashboard",text:"Dashboard",clickHandler:i=>{this.logToConsole(`🏗️ HeaderComponent - Dashboard clicked: ${i.text}`),alert(`HeaderComponent Direct Access: ${i.text} clicked!`)},caption:"Click to test dashboard action"},{id:"analytics",text:"Analytics",clickHandler:i=>{this.logToConsole(`📊 HeaderComponent - Analytics clicked: ${i.text}`),confirm("HeaderComponent Test: Open Analytics in new tab?")&&this.logToConsole("📊 Analytics - User confirmed action")},caption:"Click to test analytics action"},{id:"reports",text:"Reports",href:"/reports",caption:"Link to reports page"},{id:"current",text:"Debug Interface",caption:"Current page (display only)"}];e.setBreadcrumbs(t),this.logToConsole("⚡ HeaderComponent - Interactive breadcrumbs set")}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available")}showHeaderBreadcrumbComponentStatus(){const e=this.getBreadcrumbsComponent();if(e){const t=e.getStatus();this.logToConsole("🔍 HeaderComponent - BreadcrumbsComponent Status:"),this.logToConsole(`  Component Type: ${t.componentType}`),this.logToConsole(`  ID: ${t.id}`),this.logToConsole(`  Initialized: ${t.initialized}`),this.logToConsole(`  Init Time: ${t.initTime?new Date(t.initTime).toLocaleTimeString():"N/A"}`),this.logToConsole(`  Uptime: ${t.uptime?Math.round(t.uptime/1e3)+"s":"N/A"}`),t.domElement&&(this.logToConsole(`  DOM Element: ${t.domElement.tagName}#${t.domElement.id||"no-id"}.${t.domElement.className||"no-class"}`),this.logToConsole(`  Child Elements: ${t.domElement.childCount}`),this.logToConsole(`  Has Content: ${t.domElement.hasContent}`)),t.eventListeners&&this.logToConsole(`  Event Listeners: ${t.eventListeners?.count||0} (${t.eventListeners?.types?.join?.(", ")||"none"})`),t.configuration&&this.logToConsole(`  Has LayoutContext: ${t.configuration?.hasLayoutContext}`),t.currentState&&this.logToConsole(`  Current Breadcrumbs: ${t.currentState?.breadcrumbsCount||0}`),t.currentState?.breadcrumbs?.length>0&&(this.logToConsole("  Breadcrumb Details:"),t.currentState?.breadcrumbs?.forEach?.(i=>{this.logToConsole(`    - ${i.id}: "${i.text}" (href: ${i.hasHref}, action: ${i.hasClickHandler})`)}))}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available for status")}testHeaderBreadcrumbDirectAdd(){const e=this.getBreadcrumbsComponent();if(e){const t=Date.now(),i={id:`header-direct-${t}`,text:`Direct Item ${t%1e3}`,caption:"Added via HeaderComponent direct access",clickHandler:s=>{this.logToConsole(`🏗️ HeaderComponent Direct - Item clicked: ${s.text}`)}};e.addBreadcrumb(i),this.logToConsole(`🏗️ HeaderComponent (Direct) - Added breadcrumb: ${i.text}`)}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available for direct add")}testHeaderBreadcrumbDirectRemove(){const e=this.getBreadcrumbsComponent();if(e){const t=e.getBreadcrumbs();if(t.length>0){const i=t[t.length-1];e.removeBreadcrumb(i.id),this.logToConsole(`🏗️ HeaderComponent (Direct) - Removed breadcrumb: ${i.text}`)}else this.logToConsole("🏗️ HeaderComponent (Direct) - No breadcrumbs to remove")}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available for direct remove")}testHeaderBreadcrumbDirectUpdate(){const e=this.getBreadcrumbsComponent();if(e){const t=e.getBreadcrumbs();if(t.length>0){const i=t[0],s=Date.now();e.updateBreadcrumb(i.id,{text:`Updated ${s%1e3}`,caption:"Updated via HeaderComponent direct access"}),this.logToConsole(`🏗️ HeaderComponent (Direct) - Updated breadcrumb: ${i.id}`)}else this.logToConsole("🏗️ HeaderComponent (Direct) - No breadcrumbs to update")}else this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available for direct update")}testHeaderBreadcrumbDirectClear(){const e=this.getBreadcrumbsComponent();e?(e.clearBreadcrumbs(),this.logToConsole("🏗️ HeaderComponent (Direct) - All breadcrumbs cleared")):this.logToConsole("❌ HeaderComponent - BreadcrumbsComponent not available for direct clear")}}class Ne extends V{constructor(e,t){super(e,t,{pageTitle:"Account",pageId:"account-root"}),this.logger=f.getInstance().getLogger(Ne)}async onInit(){try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),await this.loadMainContent(),document.title="Account Overview - Opinion"}catch(e){throw this.logger.error("❌ AccountRootPage - Initialization failed:",e),e}}onDestroy(){}setupEventListeners(){this.setupEventDelegation()}async loadMainContent(){const e=this.mainContent.getElement();e&&(e.innerHTML=`
      <div class="account-root-page">
        <div class="page-header">
          <h1>Account Overview</h1>
        </div>
        <div class="account-content">
          <div class="account-overview">
            <div class="profile-section">
              <h2>Profile</h2>
              <div class="profile-info loading-placeholder">
                Loading profile information...
              </div>
              <button class="edit-profile-btn" data-action="editProfile">
                Edit Profile
              </button>
            </div>

            <div class="usage-section">
              <h2>Account Usage</h2>
              <div class="usage-stats loading-placeholder">
                Loading usage statistics...
              </div>
            </div>

            <div class="billing-section">
              <h2>Billing</h2>
              <div class="billing-info loading-placeholder">
                Loading billing information...
              </div>
              <button class="manage-billing-btn" data-action="manageBilling">
                Manage Billing
              </button>
            </div>

            <div class="team-section">
              <h2>Team Members</h2>
              <div class="team-list loading-placeholder">
                Loading team members...
              </div>
              <button class="manage-team-btn" data-action="manageTeam">
                Manage Team
              </button>
            </div>
          </div>
        </div>
      </div>
    `,await this.loadAccountData())}async loadAccountData(){try{await Promise.all([this.loadProfileInfo(),this.loadUsageStats(),this.loadBillingInfo(),this.loadTeamMembers()])}catch(e){this.logger.error("Failed to load account data:",e)}}async loadProfileInfo(){try{await new Promise(t=>setTimeout(t,800));const e=this.mainContent.getElement()?.querySelector(".profile-info");e&&(e.innerHTML=`
          <div class="info-row">
            <span class="label">Name:</span>
            <span class="value">John Doe</span>
          </div>
          <div class="info-row">
            <span class="label">Email:</span>
            <span class="value">john@example.com</span>
          </div>
          <div class="info-row">
            <span class="label">Role:</span>
            <span class="value">Administrator</span>
          </div>
        `)}catch(e){console.error("Failed to load profile info:",e)}}async loadUsageStats(){try{await new Promise(t=>setTimeout(t,1e3));const e=this.mainContent.getElement()?.querySelector(".usage-stats");e&&(e.innerHTML=`
          <div class="stat-row">
            <span class="label">Active Surveys:</span>
            <span class="value">5</span>
          </div>
          <div class="stat-row">
            <span class="label">Total Responses:</span>
            <span class="value">1,234</span>
          </div>
          <div class="stat-row">
            <span class="label">Storage Used:</span>
            <span class="value">45%</span>
          </div>
        `)}catch(e){console.error("Failed to load usage stats:",e)}}async loadBillingInfo(){try{await new Promise(t=>setTimeout(t,1200));const e=this.mainContent.getElement()?.querySelector(".billing-info");e&&(e.innerHTML=`
          <div class="info-row">
            <span class="label">Plan:</span>
            <span class="value">Professional</span>
          </div>
          <div class="info-row">
            <span class="label">Next Billing:</span>
            <span class="value">Jan 1, 2024</span>
          </div>
          <div class="info-row">
            <span class="label">Payment Method:</span>
            <span class="value">•••• 4242</span>
          </div>
        `)}catch(e){console.error("Failed to load billing info:",e)}}async loadTeamMembers(){try{await new Promise(t=>setTimeout(t,900));const e=this.mainContent.getElement()?.querySelector(".team-list");e&&(e.innerHTML=`
          <div class="team-member">
            <span class="name">John Doe</span>
            <span class="role">Owner</span>
          </div>
          <div class="team-member">
            <span class="name">Jane Smith</span>
            <span class="role">Admin</span>
          </div>
          <div class="team-member">
            <span class="name">Bob Johnson</span>
            <span class="role">Member</span>
          </div>
        `)}catch(e){console.error("Failed to load team members:",e)}}handleEditProfile(){console.log("Edit profile clicked"),window.location.href="/account/profile"}handleManageBilling(){console.log("Manage billing clicked"),window.location.href="/account/billing"}handleManageTeam(){console.log("Manage team clicked"),window.location.href="/account/team"}}class _i extends V{constructor(e,t){super(e,t,{pageTitle:"Account Settings",pageId:"account-settings"})}async onInit(){try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),await this.loadMainContent(),document.title="Account Settings - Opinion"}catch(e){throw console.error("❌ AccountSettingsPage - Initialization failed:",e),e}}onDestroy(){}setupEventListeners(){this.setupEventDelegation()}async loadMainContent(){const e=this.mainContent.getElement();e&&(e.innerHTML=`
      <div class="account-settings-page">
        <div class="page-header">
          <h1>Account Settings</h1>
          <button class="save-settings-btn" data-action="saveSettings">
            Save Changes
          </button>
        </div>
        <div class="settings-content">
          <form class="settings-form" data-action="submitSettings">
            <div class="settings-section">
              <h2>Profile Information</h2>
              <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" />
              </div>
              <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" />
              </div>
            </div>

            <div class="settings-section">
              <h2>Password</h2>
              <div class="form-group">
                <label for="current-password">Current Password</label>
                <input type="password" id="current-password" name="currentPassword" />
              </div>
              <div class="form-group">
                <label for="new-password">New Password</label>
                <input type="password" id="new-password" name="newPassword" />
              </div>
              <div class="form-group">
                <label for="confirm-password">Confirm New Password</label>
                <input type="password" id="confirm-password" name="confirmPassword" />
              </div>
            </div>

            <div class="settings-section">
              <h2>Preferences</h2>
              <div class="form-group">
                <label>
                  <input type="checkbox" name="emailNotifications" />
                  Receive email notifications
                </label>
              </div>
              <div class="form-group">
                <label>Time Zone</label>
                <select name="timezone" id="timezone">
                  <option value="UTC">UTC</option>
                  <!-- Add more timezone options -->
                </select>
              </div>
            </div>
          </form>
        </div>
      </div>
    `,await this.loadAccountSettings())}async loadAccountSettings(){try{await new Promise(i=>setTimeout(i,1e3));const e={name:"John Doe",email:"john@example.com",emailNotifications:!0,timezone:"UTC"},t=this.mainContent.getElement()?.querySelector(".settings-form");if(t){const i=t.elements.namedItem("name"),s=t.elements.namedItem("email"),n=t.elements.namedItem("emailNotifications"),r=t.elements.namedItem("timezone");i&&(i.value=e.name),s&&(s.value=e.email),n&&(n.checked=e.emailNotifications),r&&(r.value=e.timezone)}}catch(e){console.error("Failed to load account settings:",e)}}async handleSubmitSettings(e,t){t.preventDefault();try{const i=new FormData(e),s={name:i.get("name"),email:i.get("email"),emailNotifications:i.get("emailNotifications")==="on",timezone:i.get("timezone"),...i.get("newPassword")?{currentPassword:i.get("currentPassword"),newPassword:i.get("newPassword"),confirmPassword:i.get("confirmPassword")}:{}};console.log("Updating settings:",s),await new Promise(n=>setTimeout(n,1e3)),alert("Settings updated successfully")}catch(i){console.error("Failed to update settings:",i)}}}class Ri extends V{constructor(e,t){super(e,t,{pageTitle:"Login",pageId:"login"})}async onInit(){try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),await this.loadMainContent(),document.title="Login - Opinion"}catch(e){throw this.logger.error("❌ LoginPage - Initialization failed:",e),e}}onDestroy(){}setupEventListeners(){this.setupEventDelegation()}async loadMainContent(){const e=this.mainContent.getElement();e&&(e.innerHTML=`
      <div class="login-page">
        <div class="login-container">
          <h1>Login</h1>
          <form class="login-form" data-action="submitLogin">
            <div class="form-group">
              <label for="email">Email</label>
              <input type="email" id="email" name="email" required />
            </div>
            <div class="form-group">
              <label for="password">Password</label>
              <input type="password" id="password" name="password" required />
            </div>
            <div class="form-actions">
              <button type="submit" class="login-btn">Login</button>
              <a href="/forgot-password" class="forgot-password-link">Forgot Password?</a>
            </div>
          </form>
          <div class="signup-prompt">
            <p>Don't have an account? <a href="/signup">Sign Up</a></p>
          </div>
        </div>
      </div>
    `)}async handleSubmitLogin(e,t){t.preventDefault();const s=new FormData(e).get("email");try{this.logger.info("Login attempted with:",s),await new Promise(n=>setTimeout(n,1e3)),window.location.href="/dashboard"}catch(n){this.logger.error("Login failed:",n)}}}class Hi{constructor(e,t){this.layoutContext=e,this.entityName=t,this.routes=[],this._isInitialized=!1,this.serviceId=`${t}.router`,this.logger=f.getInstance().getLogger(`EntityRouter(${t})`)}getServiceId(){return this.serviceId}async init(){this.registerRoutes(),await this.mount(),this._isInitialized=!0}async destroy(){this._isInitialized=!1}async mount(){this.logger.info(`EntityRouter '${this.entityName}' mounted with ${this.routes.length} routes`)}async handle(e){if(!this._isInitialized)throw new Error(`${this.entityName} router not initialized`);const t=e.getPath(),i=this.findMatchingRoute(t,this.routes);if(!i)throw new Error(`No route found for path: ${t} in ${this.entityName} router`);return await i.action(e)}findMatchingRoute(e,t){for(const i of t){if(this.matchesPath(e,i.path))return i;if(i.children&&i.children.length>0){const s=this.findMatchingRoute(e,i.children);if(s)return s}}return null}matchesPath(e,t){const i=t.replace(/:[^/]+/g,"[^/]+").replace(/\*/g,".*");return new RegExp(`^${i}$`).test(e)}}class Bi extends V{constructor(e,t){super(e,t,{pageTitle:"Surveys",pageId:"surveys"})}async onInit(){try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),await this.loadMainContent(),document.title="Surveys - Opinion"}catch(e){throw this.logger.error("Initialization failed",e),e}}onDestroy(){}setupEventListeners(){this.setupEventDelegation()}async loadMainContent(){const e=this.mainContent.getElement();e&&(e.innerHTML=`
      <div class="survey-list-page">
        <div class="content-center" style="
          height: 80vh;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          text-align: center;
          padding: 2rem;
        ">
          <h1 style="
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: #2d3748;
          ">Survey List Page</h1>
          <p style="
            font-size: 1.25rem;
            color: #4a5568;
            max-width: 600px;
            line-height: 1.6;
          ">This page will display the list of all surveys. The implementation is coming soon.</p>
          <div style="margin-top: 2rem;">
            <button class="create-survey-btn" data-action="createSurvey" style="
              padding: 0.75rem 1.5rem;
              background-color: #4299e1;
              color: white;
              border: none;
              border-radius: 0.375rem;
              font-size: 1rem;
              cursor: pointer;
              transition: background-color 0.2s;
            ">
              Create New Survey
            </button>
          </div>
        </div>
      </div>
    `,await this.loadSurveyList())}async loadSurveyList(){const e=this.mainContent.getElement()?.querySelector(".survey-list");e&&(e.innerHTML="<p>Survey list implementation coming soon</p>")}handleCreateSurvey(){this.logger.debug("Create survey clicked")}}class ze extends V{constructor(e,t){super(e,t,{pageTitle:"Survey Details",pageId:"surveys"}),this.logger=f.getInstance().getLogger(ze);const i=t.getRouteContext();this.surveyId=i.getParam("surveyId")||"unknown"}async onInit(){try{document.readyState==="loading"&&await new Promise(e=>{document.addEventListener("DOMContentLoaded",e)}),await this.loadMainContent(),document.title="Survey Details - Opinion"}catch(e){throw this.logger.error("❌ SurveyDetailPage - Initialization failed:",e),e}}onDestroy(){}setupEventListeners(){this.setupEventDelegation()}async loadMainContent(){const e=this.mainContent.getElement();e&&(e.innerHTML=`
      <div class="survey-detail-page">
        <div class="page-header">
          <h1>Survey Details</h1>
          <div class="header-actions">
            <button class="edit-btn" data-action="editSurvey">
              Edit Survey
            </button>
            <button class="preview-btn" data-action="previewSurvey">
              Preview
            </button>
            <button class="collectors-btn" data-action="manageCollectors">
              Collectors
            </button>
            <button class="delete-btn" data-action="deleteSurvey">
              Delete Survey
            </button>
          </div>
        </div>
        <div class="survey-content">
          <!-- Survey details will be loaded here -->
          <div class="loading-placeholder">Loading survey details...</div>
        </div>
      </div>
    `,await this.loadSurveyDetails())}async loadSurveyDetails(){const e=this.mainContent.getElement()?.querySelector(".survey-content");e&&(e.innerHTML=`<p>Survey ${this.surveyId} details implementation coming soon</p>`)}handleEditSurvey(){this.logger.debug("Edit survey {} clicked",this.surveyId)}handlePreviewSurvey(){this.logger.debug("Preview survey {} clicked",this.surveyId),window.open(`/surveys/${this.surveyId}/preview`,"_blank")}handleManageCollectors(){this.logger.debug("Manage collectors for survey {} clicked",this.surveyId),window.location.href=`/surveys/${this.surveyId}/collectors`}handleDeleteSurvey(){this.logger.debug("Delete survey {} clicked",this.surveyId)}}const bt=class yt extends Hi{constructor(e,t){super(e,t),this.serviceId=yt.SERVICE_ID}registerRoutes(){this.logger.info("🔍 SURVEYS ROUTER - Starting route registration..."),this.routes=[{path:"/",action:async e=>({pageProvider:(i,s)=>new Bi(i,s),routeInfo:{path:e.getPath(),params:e.getParams()}})},{path:"/:surveyId",action:async e=>({pageProvider:(i,s)=>new ze(i,s),routeInfo:{path:e.getPath(),params:e.getParams()}})}]}};bt.SERVICE_ID="surveys.router";let De=bt;class Ui{constructor(e,t,i){this.originalContext=e,this.wrappedPath=t,this.wrappedBasePath=i}getPath(){return this.wrappedPath}getBasePath(){return this.wrappedBasePath}getParams(){return this.originalContext.getParams()}getParam(e){return this.originalContext.getParam(e)}hasParam(e){return this.originalContext.hasParam(e)}getAccountId(){return this.originalContext.getAccountId()}getLayoutContext(){return this.originalContext.getLayoutContext()}fail(e){return this.originalContext.fail(e)}failed(){return this.originalContext.failed()}failure(){return this.originalContext.failure()}}const Ni=f.getInstance().getLogger("Routes"),vt=[{path:"/login",action:async o=>({pageProvider:(t,i)=>new Ri(t,i),routeInfo:{path:o.getPath(),params:o.getParams()}})}],zi=[{path:"/dashboard",action:async o=>({pageProvider:(t,i)=>new ft(t,i),routeInfo:{path:o.getPath(),params:o.getParams()}})},{path:"/debug",action:async o=>({pageProvider:(t,i)=>new Ue(t,i),routeInfo:{path:o.getPath(),params:o.getParams()}})},{path:"/surveys",children:[],action:async o=>{try{const t=await o.getLayoutContext().getServiceReference(De.SERVICE_ID).get();if(!t)throw new Error("SurveysRouter service not found");const s=o.getPath().replace(/^\/surveys/,"")||"/",n=new Ui(o,s,"/surveys");return await t.handle(n)}catch(e){Ni.error("❌ Surveys routing error:",e?.message);const t=(await he(async()=>{const{default:s}=await import("./ErrorPage-DZdoLA9a.js");return{default:s}},[])).default;return{pageProvider:(s,n)=>{const r=new t(s,n);return r.setParams({code:"500",message:"Surveys Service Error",details:`Error in surveys routing: ${e?.message}`}),r},routeInfo:{path:o.getPath(),params:o.getParams()}}}}}],Oi=[{path:"/account/:accountId/settings",action:async o=>({pageProvider:(t,i)=>new _i(t,i),routeInfo:{path:o.getPath(),params:o.getParams()}})},{path:"/account/:accountId",action:async o=>({pageProvider:(t,i)=>new Ne(t,i),routeInfo:{path:o.getPath(),params:o.getParams()}})}],Fi=[...vt,...zi,...Oi,{path:"/",action:async o=>({pageProvider:(t,i)=>new ft(t,i),routeInfo:{path:o.getPath(),params:o.getParams()}})}];async function qi(o,e){const{pathname:t}=o;return vt.some(s=>{if(s.path.endsWith("*")){const n=s.path.slice(0,-1);return t.startsWith(n)}return s.path===t}),e()}const Ct=class wt{constructor(e){this.layoutContext=e,this.router=null,this.navigationState={currentPath:"/",currentPage:null,isNavigating:!1},this.handlePopState=()=>{const t=Ie(window.location.pathname);this.handleRoute(t)},this.serviceId=wt.SERVICE_ID,this.eventBus=e.getEventBus(),this.logger=f.getInstance().getLogger("RouterService")}async init(){this.initializeRouter(Fi);{let e=Ie(window.location.pathname);if(q.enableSpaRouting&&window.location.search.startsWith("?/")){e="/"+window.location.search.slice(2).replace(/~and~/g,"&");const s=ee(e);window.history.replaceState(null,"",s)}try{await this.handleRoute(e)}catch(t){throw this.logger.error("RouterService - Initial route failed:",t),t}}window.addEventListener("popstate",this.handlePopState)}async destroy(){window.removeEventListener("popstate",this.handlePopState)}getServiceId(){return this.serviceId}initializeRouter(e){const t=e.map(n=>({...n,path:n.path.startsWith("/")?n.path:`/${n.path}`})),i=n=>({path:n.path.startsWith("/")?n.path:`/${n.path}`,action:async(r,a)=>{const c=r.pathname||r.path||"/",l={};if(a)for(const[d,g]of Object.entries(a))l[d]=Array.isArray(g)?g[0]:String(g);const u=new Qe(c,l,this.layoutContext);return qi(r,async()=>n.action(u))},children:n.children?.map(i)}),s=t.map(i);this.router=new $i(s)}async handleRoute(e){if(!this.router||!this.layoutContext)throw new Error("Router or Layout not initialized");this.navigationState.isNavigating=!0;try{this.navigationState.currentPage&&"destroy"in this.navigationState.currentPage&&typeof this.navigationState.currentPage.destroy=="function"&&await this.navigationState.currentPage.destroy(),this.navigationState.currentPage=null;const t=await this.navigate(e);if(!t||!t.pageProvider)throw new Error(`No page provider found for route ${e}`);const i=this.extractBasePath(t.routeInfo.path),s=new Qe(t.routeInfo.path,t.routeInfo.params,this.layoutContext,void 0,i);t.routeInfo.params&&"errorCode"in t.routeInfo.params&&s.fail({code:t.routeInfo.params.errorCode,message:t.routeInfo.params.errorMessage,details:t.routeInfo.params.errorDetails});const n=new Di(s,this.layoutContext),r=this.layoutContext.getMainContent();if(!r)throw new Error("MainContent not available from LayoutContext");const a=t.pageProvider(r,n);n.setPage(a),this.setupRouteBreadcrumbs(n),await a.init(),this.navigationState.currentPage=a,this.navigationState.currentPath=s.getPath()}catch(t){throw this.logger.error("Failed to load page for route: "+e,t),this.navigationState.isNavigating=!1,t}finally{this.navigationState.isNavigating=!1}}async navigate(e){if(!this.router)throw new Error("Router not initialized");const t=e.startsWith("/")?e:`/${e}`;try{this.eventBus.publish("router:navigationStart",{from:this.navigationState.currentPath,to:t});try{const s=await this.router.resolve(t),n=ee(t);return window.history.pushState(null,"",n),this.navigationState.currentPath=t,this.eventBus.publish("router:navigationEnd",{path:t}),s}catch(i){if(i instanceof Error&&i.message.includes("Route not found"))return await this.createErrorPageResult(t,"404","Page Not Found",`The page '${t}' does not exist.`);if(i instanceof Error)return await this.createErrorPageResult(t,"503","Service Unavailable",`Routing service is temporarily unavailable: ${i.message}`);throw i}}catch(i){throw this.eventBus.publish("router:error",{error:i}),i}}getCurrentPath(){return this.navigationState.currentPath}getCurrentPage(){return this.navigationState.currentPage}isNavigating(){return this.navigationState.isNavigating}async push(e){await this.handleRoute(e)}async navigateToUrl(e){const t=typeof e=="string"?new URL(e):e,i=Ie(t.pathname);await this.push(i)}isInternalUrl(e){try{return(typeof e=="string"?new URL(e):e).origin===window.location.origin}catch{return!1}}async replace(e){const t=window.history.pushState;window.history.pushState=(i,s,n)=>window.history.replaceState(i,s,n);try{await this.handleRoute(e)}finally{window.history.pushState=t}}back(){window.history.back()}forward(){window.history.forward()}go(e){window.history.go(e)}async reload(){await this.handleRoute(this.navigationState.currentPath)}extractBasePath(e){if(e==="/")return"/";const t=e.split("/").filter(i=>i.length>0);return t.length===0?"/":"/"+t[0]}setupRouteBreadcrumbs(e){try{const t=e.breadcrumbs();if(!t?.isAvailable())return;const i=e.getPage();if(!i)return;const s=i.getPageInfo(),n=[];!ui(s.id)&&s.id!=="debug"&&n.push({id:"home",text:"Home",href:"/"}),s.id!=="debug"&&n.push({id:s.id,text:s.name.replace(" - Opinion",""),caption:this.getBreadcrumbCaption(s.id)}),n.length>0&&(t.set(n),this.logger.info(`🍞 RouterService - Set breadcrumbs for ${s.id}:`,n.map(a=>a.text)))}catch(t){this.logger.error("🍞 RouterService - Error setting up breadcrumbs:",t)}}getBreadcrumbCaption(e){return{dashboard:"Main dashboard view",surveys:"Survey management",account:"Account settings","error-page":"Error information"}[e]}async createErrorPageResult(e,t="404",i="Page Not Found",s){const n=(await he(async()=>{const{default:c}=await import("./ErrorPage-DZdoLA9a.js");return{default:c}},[])).default,r={errorCode:t,errorMessage:i,errorDetails:s||`The page '${e}' could not be found.`};return{pageProvider:(c,l)=>new n(c,l),routeInfo:{path:e,params:r}}}};Ct.SERVICE_ID="router";let Vi=Ct;const Wi=[{id:"dashboard",text:"Dashboard",icon:"dashboard",href:"/dashboard",caption:"Main dashboard - view analytics, reports and key metrics",active:!1},{id:"surveys",text:"Surveys",icon:"poll",href:"/surveys",caption:"Create and manage survey questionnaires",active:!1},{id:"debug",text:"Debug",icon:"bug_report",href:"/debug",caption:"Development tools and troubleshooting",active:!1}],xt=class St{static getRegisteredReference(e,t){return new ct(e,St.COMPONENT_ID,()=>e.getSidebar(),t)}};xt.COMPONENT_ID="Sidebar";let Me=xt;const Et=class Q extends fe{constructor(e,t){super(e,t),this.items=[],this.activeId=null,this.expandedIds=new Set,this.activePageConsumerUnsubscriber=null}static getRegisteredReference(e,t){return new G(e,Q.SERVICE_ID,t)}static register(e,t){const i=new Q(e,t);return e.registerService(Q.SERVICE_ID,i),i}getServiceId(){return Q.SERVICE_ID}async onInit(){const e=this.getConfig(),t=e.initialItems||Wi;this.items=[...t],e.activeId&&this.findItemById(e.activeId)&&(this.activeId=e.activeId),this.syncState(),this.activePageConsumerUnsubscriber=this.getContext().registerActivePageConsumer(this),this.log("✅","Registered as active page consumer");const i=this.getContext().getActivePage();i&&this.onActivePageChanged(i,null);try{const n=await Me.getRegisteredReference(this.getContext(),{maxRetries:1,retryInterval:0,timeout:0}).get();n&&(n.updateNavigation(this.getSidebarStructure()),this.log("✅","Synchronized with sidebar"))}catch(s){this.log("⚠️","Failed to sync with sidebar:",s)}this.log("✅","NavigationService initialized")}async onDestroy(){this.log("👋","Destroying NavigationService"),this.activePageConsumerUnsubscriber&&(this.activePageConsumerUnsubscriber(),this.activePageConsumerUnsubscriber=null,this.log("✅","Unregistered from active page consumer"))}getItems(){return[...this.items]}setItems(e){this.items=[...e],this.syncState()}setActiveItem(e){if(!this.findItemById(e))throw new Error(`NavigationService.setActiveItem: Item with id '${e}' not found in navigation items. Available items: ${this.items.map(i=>i.id).join(", ")}`);this.log("🎯",`Setting active item: ${e}`),this.activeId=e,this.syncState();try{Me.getRegisteredReference(this.getContext(),{maxRetries:0,retryInterval:0,timeout:0}).get().then(s=>{s&&this.syncWithSidebar(s)}).catch(s=>{this.log("⚠️","Failed to sync with sidebar immediately:",s)})}catch(i){this.log("⚠️","Failed to get sidebar reference for immediate sync:",i)}}getActiveItem(){return this.activeId}isActive(e){return this.activeId===e}toggleExpanded(e){this.expandedIds.has(e)?this.expandedIds.delete(e):this.expandedIds.add(e),this.syncState()}isExpanded(e){return this.expandedIds.has(e)}getSidebarStructure(){return this.items.map(e=>({...e,active:e.id===this.activeId,expanded:this.expandedIds.has(e.id),children:e.children?.map(t=>({...t,active:t.id===this.activeId}))}))}syncWithSidebar(e){if(!this.isReady())throw new Error("NavigationService.syncWithSidebar: Service is not ready. Call init() first.");if(!e)throw new Error("NavigationService.syncWithSidebar: Sidebar parameter is null or undefined");this.log("🔄","Syncing with sidebar...",{activeId:this.activeId,itemsCount:this.items.length,expandedCount:this.expandedIds.size});const t=this.getSidebarStructure();e.updateNavigation(t),this.activeId?(e.setActivePage(this.activeId),this.log("📍",`Set active page on sidebar: ${this.activeId}`)):this.log("⚠️","No active ID to set on sidebar"),this.log("✅","Synchronized state with sidebar",{activeId:this.activeId})}async syncWithSidebarAsync(){try{const t=await Me.getRegisteredReference(this.getContext(),{maxRetries:1,retryInterval:0,timeout:0}).get();t&&this.syncWithSidebar(t)}catch(e){this.log("⚠️","Failed to sync with sidebar async:",e)}}findItemById(e){const t=this.items.find(i=>i.id===e);if(t)return t;for(const i of this.items)if(i.children){const s=i.children.find(n=>n.id===e);if(s)return s}return null}onActivePageChanged(e,t){if(this.log("🔄","Active page changed:",{current:e?.getPageId()||"none",previous:t?.getPageId()||"none"}),!e)this.activeId=null,this.log("📍","Cleared active navigation item (no active page)");else{const i=e.getPageId(),s=this.mapPageIdToNavigationItem(i);s&&this.findItemById(s)?(this.activeId=s,this.log("📍",`Mapped active page '${i}' to navigation item '${s}'`)):(this.activeId=null,this.log("⚠️",`No navigation item found for active page '${i}'`))}this.syncState(),this.syncWithSidebarAsync()}mapPageIdToNavigationItem(e){const t={DashboardPage:"dashboard",SurveyListPage:"surveys",SurveyDetailPage:"surveys",AccountRootPage:"account",AccountSettingsPage:"account",LoginPage:"auth",DebugPage:"debug",ErrorPage:"debug"};if(t[e])return t[e];for(const[i,s]of Object.entries(t))if(e.toLowerCase().includes(i.toLowerCase().replace("page","")))return s;return this.findItemById(e)?e:null}syncState(){this.activeId&&!this.findItemById(this.activeId)&&(this.activeId=null);const e=new Set(this.items.map(t=>t.id));for(const t of this.expandedIds)e.has(t)||this.expandedIds.delete(t)}};Et.SERVICE_ID="navigation.service";let Le=Et;const It=class Mt{constructor(e){this.isInitialized=!1,this.handleClick=t=>{const i=t,n=i.target.closest("a[href]");if(!n||i.ctrlKey||i.metaKey||i.shiftKey||i.altKey||i.button!==0||this.shouldSkipLink(n))return;const r=this.layoutContext.getService("router");if(!r||!("navigateToUrl"in r)||!("isInternalUrl"in r))return;const a=r;a.isInternalUrl(n.href)&&(t.preventDefault(),t.stopPropagation(),this.logger.info("LinkInterceptionService - Intercepted navigation to:",n.href),a.navigateToUrl(n.href).catch(c=>{this.logger.error("LinkInterceptionService - Navigation failed:",c),window.location.href=n.href}))},this.serviceId=Mt.SERVICE_ID,this.layoutContext=e,this.logger=f.getInstance().getLogger("LinkInterceptionService")}async init(){this.isInitialized||(document.addEventListener("click",this.handleClick,!0),this.isInitialized=!0,this.logger.info("LinkInterceptionService - Initialized"))}async destroy(){this.isInitialized&&(document.removeEventListener("click",this.handleClick,!0),this.isInitialized=!1,this.logger.info("LinkInterceptionService - Destroyed"))}getServiceId(){return this.serviceId}shouldSkipLink(e){return!!(e.hasAttribute("download")||e.target&&e.target!=="_self"||e.rel&&e.rel.includes("external")||e.hasAttribute("data-no-spa"))}};It.SERVICE_ID="linkInterception";let Ze=It;class ji{constructor(e){this.levelMapping={INFO:"info",WARN:"warning",ERROR:"error",FATAL:"error"},this.messages=e}async consume(e){if(["MessagesComponent","MessagesLogAdapter","LoggerFactory","AsyncConsumerLogChannel","ChannelFactory"].includes(e.logName)||["DEBUG","TRACE"].includes(e.level.toUpperCase()))return;const s=this.levelMapping[e.level.toUpperCase()]||"info",n=this.formatTitle(e.logName,e.level),r=this.formatDescription(e),a=this.getMessageOptions(e.level);switch(s){case"error":this.messages.showError(n,r,a);break;case"warning":this.messages.showWarning(n,r,a);break;case"info":this.messages.showInfo(n,r,a);break;case"success":this.messages.showSuccess(n,r,a);break}}onError(e,t){console.error("MessagesLogAdapter: Failed to process log message:",e),console.error("Original log message:",t);try{this.messages.showError("Logging Error","Failed to display a log message. See console for details.",{autoHide:!0,autoHideDelay:3e3})}catch(i){console.error("MessagesLogAdapter: Even fallback message failed:",i)}}formatTitle(e,t){const i=t.toUpperCase(),s=e.replace(/([A-Z])/g," $1").replace(/^\s+/,"").replace(/\b\w/g,n=>n.toUpperCase());switch(i){case"ERROR":case"FATAL":return`Error in ${s}`;case"WARN":return`Warning from ${s}`;case"INFO":return`Info: ${s}`;default:return`${s}: ${i}`}}formatDescription(e){let t=e.message||"";if(e.exception&&(t+=`

Error details: ${e.exception}`),e.args&&e.args.length>0){const i=e.args.map(s=>{if(typeof s=="object"&&s!==null)try{return JSON.stringify(s,null,2)}catch{return String(s)}return String(s)}).join(", ");i.length<200&&(t+=`

Details: ${i}`)}return t||"No message details available"}getMessageOptions(e){switch(e.toUpperCase()){case"ERROR":case"FATAL":return{dismissible:!0,autoHide:!1,persistent:!0};case"WARN":return{dismissible:!0,autoHide:!1,persistent:!0};case"INFO":return{dismissible:!0,autoHide:!0,autoHideDelay:5e3,persistent:!1};default:return{dismissible:!0,autoHide:!0,autoHideDelay:4e3,persistent:!1}}}}const Oe=class Lt{constructor(){this.initialized=!1,this.routerService=null,this.appHeader=null,this.appFooter=null,this.mainContent=null,this.layout=null,this.apiService=new Te,this.logger=f.getInstance().getLogger("OpinionApp"),this.errorHandler=e=>{const t=e instanceof Error?e:new Error(String(e));this.logger.error("OpinionApp error",t)}}async init(){if(!this.initialized)try{this.setupEventListeners(),await this.initializeGlobalLayout(),this.initialized=!0}catch(e){this.handleError(e)}}setupEventListeners(){window.addEventListener("message",e=>{if(!Lt.TRUSTED_MESSAGE_ORIGINS.includes(e.origin)){this.logger.warn("Blocked postMessage from untrusted origin:",e.origin);return}if(e.data&&e.data.action)switch(e.data.action){case"showErrorMessage":this.handleTestErrorMessage(e.data);break;case"clearErrorMessages":this.handleClearMessages();break;default:this.logger.warn("Unknown postMessage action:",e.data.action)}})}async initializeGlobalLayout(){this.layout=new pi,this.layout.onContextReady(e=>{this.setErrorHandler(i=>{e.fail(i instanceof Error?i:String(i))});const t=e.getMessages();if(t){const i=new ji(t);f.getInstance().messagesConsumer(i),this.logger.info("LoggerFactory integrated with Messages system")}else this.logger.warn("Messages system not available for LoggerFactory integration")}),await this.layout.setContextHandler({id:"app-layout-configuration",priority:700,onContextReady:async e=>{await this.configureLayout(e)}},{enableLogging:!0,continueOnError:!1,timeout:5e3}).setContextHandler({id:"app-service-registration",priority:800,onContextReady:async e=>{await this.registerServices(e),await this.validateInitialAuthentication(e)}},{enableLogging:!0,continueOnError:!1,timeout:15e3}).init()}async registerServices(e){D(e,Te,this.apiService);const t=new B(this.apiService,{authDelay:300,enableAccountSwitching:!0,mockAccountCount:3});D(e,B,t);const i=new _(e,{authProviderServiceId:B.SERVICE_ID,autoValidate:!1});D(e,_,i);const s=new Ye(e,{authServiceId:_.SERVICE_ID,sessionAuthProviderServiceId:B.SERVICE_ID});D(e,Ye,s);const n=_.getRegisteredReference(e),r=new $e(n,e,{updateOnInit:!0});D(e,$e,r);const a=new Le(e);D(e,Le,a);const c=new De(e,"surveys");D(e,De,c);const l=new Ze(e);D(e,Ze,l),await this.apiService.init(),await t.init(),await i.init(),await s.init(),await r.init(),await a.init(),await c.init(),this.routerService=new Vi(e),await this.routerService.init(),await l.init()}async configureLayout(e){try{const i=await Le.getRegisteredReference(e).get(),s=e.getSidebar();if(!i)throw new Error("NavigationService not available after registration");if(!s)throw new Error("Sidebar not available in LayoutContext");i.syncWithSidebar(s),i.setActiveItem("dashboard")}catch(t){throw this.handleError(t),t}e.getHeader()?.setUserMenuHandler(t=>{t.updateMenuItems([{id:"account",text:"Account Settings",icon:"settings",href:"/account",type:"link"},{id:"feedback",text:"Send Feedback",icon:"feedback",action:"feedback",type:"action"},{id:"divider1",text:"",icon:"",type:"divider"},{id:"logout",text:"Sign Out",icon:"logout",action:"logout",type:"action",className:"user-menu-signout",style:"color: #dc3545;"}])})}handleTestErrorMessage(e){if(!this.layout){this.logger.warn("Layout not initialized, cannot show error message");return}const{type:t,title:i,description:s}=e;this.layout.onContextReady(n=>{switch(t){case"error":n.getMessages()?.showError(i||"Test Error",s||"This is a test error message from iframe testing.");break;case"warning":n.getMessages()?.showWarning(i||"Test Warning",s||"This is a test warning message from iframe testing.");break;case"info":n.getMessages()?.showInfo(i||"Test Info",s||"This is a test info message from iframe testing.");break;case"success":n.getMessages()?.showSuccess(i||"Test Success",s||"This is a test success message from iframe testing.");break;default:this.logger.warn("Unknown message type:",t),n.getMessages()?.showInfo("Test Message","Unknown message type: "+t)}})}handleClearMessages(){if(!this.layout){this.logger.warn("Layout not initialized, cannot clear messages");return}this.layout.onContextReady(e=>{e.getMessages()?.clearAll()})}async validateInitialAuthentication(e){await _.getRegisteredReference(e).get().then(i=>i.validateAuthentication("app-startup"))}setErrorHandler(e){this.errorHandler=e}handleError(e){this.errorHandler(e)}getErrorHandler(){return this.errorHandler}};Oe.TRUSTED_MESSAGE_ORIGINS=["http://localhost:3000","https://your-production-domain.com"];Oe.DEFAULT_ERROR_HANDLER=o=>{const e=o instanceof Error?o:new Error(String(o));console.error("OpinionApp error (default handler):",e)};let Gi=Oe;const kt=f.getInstance().getLogger("Main"),At=o=>{kt.error("Global JavaScript error (before app init)",o.error)},Tt=o=>{kt.error("Unhandled promise rejection (before app init)",o.reason)};window.addEventListener("error",At);window.addEventListener("unhandledrejection",Tt);document.readyState==="loading"?document.addEventListener("DOMContentLoaded",et):document.readyState==="interactive"?et():_e();function et(){document.readyState!=="complete"?window.addEventListener("load",()=>{setTimeout(_e,50)}):setTimeout(_e,10)}async function _e(){const o=new Gi;await o.init(),window.app=o;const e=o.getErrorHandler();window.removeEventListener("error",At),window.removeEventListener("unhandledrejection",Tt),window.addEventListener("error",t=>{e(t.error)}),window.addEventListener("unhandledrejection",t=>{e(t.reason)})}export{V as P,ee as g};
//# sourceMappingURL=index-CKGkQ-vx.js.map
