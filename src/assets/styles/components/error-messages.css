/**
 * Error Messages Component Styles - Clean Start
 * 
 * Simple, clean error message styles without complex positioning
 */

/* Container - Overlay positioning for messages that don't affect layout */
.app-error-messages {
  display: none;
  position: fixed;
  top: 80px; /* Below header */
  right: 36px; /* Moved 20px further left (16px + 20px) */
  width: 800px; /* Doubled from 400px for desktop */
  max-width: calc(100vw - 52px); /* Adjusted for new right position */
  z-index: 1000;
  pointer-events: none; /* Allow clicks to pass through empty areas */
}

.app-error-messages:not(:empty) {
  display: block;
  animation: slideInFromTop 0.3s ease-out;
  pointer-events: auto; /* Enable interactions when messages are present */
}

/* Smooth slide-in animation */
@keyframes slideInFromTop {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Message styling for overlay deck effect */
.error-message {
  padding: 12px 16px;
  border-radius: 6px;
  border: 1px solid;
  border-left: 4px solid;
  background: white;
  display: flex;
  align-items: center;
  gap: 12px;
  width: 100%;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.1);
  position: absolute;
  top: 0;
  left: 0;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  animation: messageSlideIn 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  direction: ltr;
  pointer-events: auto;
  backdrop-filter: blur(8px);
}

/* Individual message slide-in animation for overlay */
@keyframes messageSlideIn {
  from {
    opacity: 0;
    transform: translateX(30px) translateY(-10px) scale(0.95);
  }
  50% {
    opacity: 0.8;
    transform: translateX(-2px) translateY(1px) scale(1.01);
  }
  to {
    opacity: 1;
    transform: translateX(0) translateY(0) scale(1);
  }
}

/* Deck stacking effect - using CSS custom properties for dynamic positioning */
.error-message {
  --deck-offset-x: 0px;
  --deck-offset-y: 0px;
  --deck-z-index: 10;
  --deck-overflow: visible; /* Default overflow behavior */
  transform: translate(var(--deck-offset-x), var(--deck-offset-y));
  z-index: var(--deck-z-index);
  overflow: var(--deck-overflow);
}

.error-message:hover {
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(0, 0, 0, 0.15);
  transform: translate(0, -2px) !important; /* Override deck positioning on hover */
  z-index: 50 !important; /* Bring to front on hover */
  scale: 1.02;
}

/* Message types with border and background colors - left aligned */
.error-message.error {
  border-left-color: #ef4444;
  border-color: #fecaca;
  background: #fef2f2;
}

.error-message.warning {
  border-left-color: #f59e0b;
  border-color: #fed7aa;
  background: #fffbeb;
}

.error-message.info {
  border-left-color: #3b82f6;
  border-color: #bfdbfe;
  background: #eff6ff;
}

.error-message.success {
  border-left-color: #10b981;
  border-color: #bbf7d0;
  background: #f0fdf4;
}

/* Message content - compact */
.error-content {
  flex: 1;
  line-height: 1.2;
  text-align: left;
  direction: ltr;
  padding: 10px;
  margin: 0;
}

.error-title {
  font-weight: 600;
  margin: 0;
  color: #1f2937;
  font-size: 13px;
  line-height: 1.2;
}

.error-description {
  margin: 2px 0 0 0;
  color: #6b7280;
  font-size: 12px;
  line-height: 1.2;
}

/* Single line layout for compact display */
.error-message:not(:has(.error-description)) .error-content {
  display: flex;
  align-items: center;
}

/* Compact close button */
.error-close {
  background: none;
  border: none;
  cursor: pointer;
  padding: 1px;
  color: #9ca3af;
  font-size: 16px;
  font-weight: 600;
  line-height: 1;
  border-radius: 3px;
  min-width: 20px;
  min-height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  transition: all 0.15s ease;
  opacity: 0.7;
}

.error-close:hover {
  color: #6b7280;
  background: rgba(0, 0, 0, 0.06);
  opacity: 1;
  transform: scale(1.05);
}

.error-close:active {
  transform: scale(0.95);
}

.error-close:focus {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
  opacity: 1;
}

/* Close button hover animation */
.error-message:hover .error-close {
  opacity: 1;
}

/* Fade-out animation for message dismissal */
@keyframes messageFadeOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: translateX(30px) translateY(-10px) scale(0.9);
  }
}

/* Mobile responsive positioning */
@media (max-width: 768px) {
  .app-error-messages {
    top: 70px;
    left: 28px; /* Moved 20px to the left from original 8px */
    right: 28px; /* Moved 20px to the left from original 8px */
    width: auto;
    max-width: none;
  }
  
  .error-message {
    padding: 10px 12px;
    border-radius: 4px;
  }
  
  /* Mobile uses CSS custom properties - no need for separate rules */
}
