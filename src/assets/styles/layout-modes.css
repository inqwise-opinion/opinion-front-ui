/**
 * Layout Mode CSS Classes - Example Usage
 * 
 * This file demonstrates how to use the automatically managed CSS classes
 * that are applied based on the current layout mode.
 */

/* ====================================
   LAYOUT MODE-SPECIFIC STYLES
   ==================================== */

/* Layout mode-specific styles - removed conflicting padding/sizing rules */
/* All layout positioning and padding is handled by app-layout.css */

.layout-mode-mobile .app-sidebar {
  /* Mobile sidebar overlay behavior */
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

/* Desktop Compact Layout Mode */
.layout-mode-desktop-compact .app-sidebar {
  /* Compact sidebar width defined in sidebar.css */
}

.layout-mode-desktop-compact .app-sidebar .nav-text,
.layout-mode-desktop-compact .app-sidebar .nav-caption {
  /* Hide text in compact mode */
  display: none;
}

/* Compact mode navigation adjustments */
.layout-compact .nav-item {
  justify-content: center;
}

/* Layout states are handled by app-layout.css - removed duplicates */

/* ====================================
   COMPONENT-SPECIFIC MODE STYLING
   ==================================== */

/* Component-specific mode styling - only non-conflicting rules */

.app-sidebar.layout-mode-desktop-compact .sidebar-brand .brand-title {
  /* Hide brand title in compact mode */
  display: none;
}

.app-sidebar.layout-mode-desktop-compact .sidebar-brand::before {
  /* Show icon instead of title */
  content: "O";
  display: block;
  font-weight: 600;
  font-size: 18px;
  color: #3b82f6;
}

/* ====================================
   CSS CUSTOM PROPERTIES USAGE
   ==================================== */

/* Using the CSS custom properties set by the layout context */
.responsive-component {
  /* Example component that adapts to layout mode */
  width: calc(100% - var(--sidebar-width, 0px));
  margin-left: var(--sidebar-width, 0px);
  
  /* Conditional styling based on mode */
  padding: calc(var(--is-mobile, 0) * 16px + var(--is-desktop, 0) * 24px);
  
  /* Animation duration based on compact state */
  transition-duration: calc(var(--is-compact, 0) * 0.3s + 0.2s);
}

/* Advanced responsive component */
.advanced-responsive {
  /* Grid columns based on layout mode */
  display: grid;
  grid-template-columns: repeat(
    calc(var(--is-mobile, 0) * 1 + var(--is-tablet, 0) * 2 + var(--is-desktop, 0) * 3), 
    1fr
  );
  gap: calc(var(--is-mobile, 0) * 16px + var(--is-desktop, 0) * 24px);
}

/* ====================================
   UTILITY CLASSES
   ==================================== */

/* Show/hide based on layout mode */
.show-mobile-only {
  display: none;
}
.layout-mobile .show-mobile-only {
  display: block;
}

.show-tablet-only {
  display: none;
}
.layout-tablet .show-tablet-only {
  display: block;
}

.show-desktop-only {
  display: none;
}
.layout-desktop .show-desktop-only {
  display: block;
}

.show-compact-only {
  display: none;
}
.layout-compact .show-compact-only {
  display: block;
}

.hide-mobile {
  display: block;
}
.layout-mobile .hide-mobile {
  display: none;
}

.hide-compact {
  display: block;
}
.layout-compact .hide-compact {
  display: none;
}

/* ====================================
   ANIMATION CLASSES
   ==================================== */

/* Mode transition animations - transitions handled by app-layout.css and component CSS */
.layout-mode-transition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* ====================================
   DEBUGGING STYLES (OPTIONAL)
   ==================================== */

/* Visual indicators for layout modes during development */
.debug-layout-mode::before {
  content: "Mode: " var(--layout-mode, "unknown");
  position: fixed;
  top: 10px;
  right: 10px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  z-index: 9999;
  pointer-events: none;
}

/* Color-coded borders for different modes */
.debug-layout-borders .layout-mode-mobile {
  border: 2px solid #ef4444;
}

.debug-layout-borders .layout-mode-tablet {
  border: 2px solid #f59e0b;
}

.debug-layout-borders .layout-mode-desktop {
  border: 2px solid #10b981;
}

.debug-layout-borders .layout-mode-desktop-compact {
  border: 2px solid #8b5cf6;
}
